{"version":3,"sources":["webpack://prosemirror-try/./node_modules/crelt/index.es.js","webpack://prosemirror-try/./node_modules/orderedmap/index.es.js","webpack://prosemirror-try/./node_modules/prosemirror-commands/src/commands.js","webpack://prosemirror-try/./node_modules/prosemirror-dropcursor/src/dropcursor.js","webpack://prosemirror-try/./node_modules/prosemirror-example-setup/src/prompt.js","webpack://prosemirror-try/./node_modules/prosemirror-example-setup/src/menu.js","webpack://prosemirror-try/./node_modules/prosemirror-example-setup/src/keymap.js","webpack://prosemirror-try/./node_modules/prosemirror-example-setup/src/inputrules.js","webpack://prosemirror-try/./node_modules/prosemirror-example-setup/src/index.js","webpack://prosemirror-try/./node_modules/prosemirror-gapcursor/src/gapcursor.js","webpack://prosemirror-try/./node_modules/prosemirror-gapcursor/src/index.js","webpack://prosemirror-try/./node_modules/prosemirror-history/src/history.js","webpack://prosemirror-try/./node_modules/prosemirror-inputrules/src/inputrules.js","webpack://prosemirror-try/./node_modules/prosemirror-inputrules/src/rules.js","webpack://prosemirror-try/./node_modules/prosemirror-inputrules/src/rulebuilders.js","webpack://prosemirror-try/./node_modules/prosemirror-keymap/src/keymap.js","webpack://prosemirror-try/./node_modules/prosemirror-menu/src/icons.js","webpack://prosemirror-try/./node_modules/prosemirror-menu/src/menu.js","webpack://prosemirror-try/./node_modules/prosemirror-menu/src/menubar.js","webpack://prosemirror-try/./node_modules/prosemirror-model/src/diff.js","webpack://prosemirror-try/./node_modules/prosemirror-model/src/fragment.js","webpack://prosemirror-try/./node_modules/prosemirror-model/src/comparedeep.js","webpack://prosemirror-try/./node_modules/prosemirror-model/src/mark.js","webpack://prosemirror-try/./node_modules/prosemirror-model/src/replace.js","webpack://prosemirror-try/./node_modules/prosemirror-model/src/resolvedpos.js","webpack://prosemirror-try/./node_modules/prosemirror-model/src/node.js","webpack://prosemirror-try/./node_modules/prosemirror-model/src/content.js","webpack://prosemirror-try/./node_modules/prosemirror-model/src/schema.js","webpack://prosemirror-try/./node_modules/prosemirror-model/src/from_dom.js","webpack://prosemirror-try/./node_modules/prosemirror-model/src/to_dom.js","webpack://prosemirror-try/./node_modules/prosemirror-schema-basic/src/schema-basic.js","webpack://prosemirror-try/./node_modules/prosemirror-schema-list/src/schema-list.js","webpack://prosemirror-try/./node_modules/prosemirror-state/src/selection.js","webpack://prosemirror-try/./node_modules/prosemirror-state/src/transaction.js","webpack://prosemirror-try/./node_modules/prosemirror-state/src/state.js","webpack://prosemirror-try/./node_modules/prosemirror-state/src/plugin.js","webpack://prosemirror-try/./node_modules/prosemirror-transform/src/map.js","webpack://prosemirror-try/./node_modules/prosemirror-transform/src/transform.js","webpack://prosemirror-try/./node_modules/prosemirror-transform/src/step.js","webpack://prosemirror-try/./node_modules/prosemirror-transform/src/replace_step.js","webpack://prosemirror-try/./node_modules/prosemirror-transform/src/structure.js","webpack://prosemirror-try/./node_modules/prosemirror-transform/src/mark_step.js","webpack://prosemirror-try/./node_modules/prosemirror-transform/src/mark.js","webpack://prosemirror-try/./node_modules/prosemirror-transform/src/replace.js","webpack://prosemirror-try/./node_modules/prosemirror-view/src/browser.js","webpack://prosemirror-try/./node_modules/prosemirror-view/src/dom.js","webpack://prosemirror-try/./node_modules/prosemirror-view/src/domcoords.js","webpack://prosemirror-try/./node_modules/prosemirror-view/src/viewdesc.js","webpack://prosemirror-try/./node_modules/prosemirror-view/src/selection.js","webpack://prosemirror-try/./node_modules/prosemirror-view/src/capturekeys.js","webpack://prosemirror-try/./node_modules/prosemirror-view/src/domchange.js","webpack://prosemirror-try/./node_modules/prosemirror-view/src/clipboard.js","webpack://prosemirror-try/./node_modules/prosemirror-view/src/domobserver.js","webpack://prosemirror-try/./node_modules/prosemirror-view/src/input.js","webpack://prosemirror-try/./node_modules/prosemirror-view/src/decoration.js","webpack://prosemirror-try/./node_modules/prosemirror-view/src/index.js","webpack://prosemirror-try/./node_modules/rope-sequence/dist/index.es.js","webpack://prosemirror-try/./node_modules/w3c-keyname/index.es.js","webpack://prosemirror-try/webpack/bootstrap","webpack://prosemirror-try/webpack/runtime/define property getters","webpack://prosemirror-try/webpack/runtime/hasOwnProperty shorthand","webpack://prosemirror-try/webpack/runtime/make namespace object","webpack://prosemirror-try/./src/index.js"],"names":["let","wrap","end","i","tr","$from","$to","const","this","rect","super","$cur","prefix","update","p","prototypeAccessors","n","prototypeAccessors$1","type","loop","next","states","prop","text","mark","rules","name","space","slice","d","splitting","index","found","match","browser","pos","box","before","after","target","desc","search","j","offset","child","anchor","sel","move","result","span","from"],"mappings":";;;;;;;;;;;;;;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,sBAAsB;AAC9B;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH,GAAG;AACH;AACA,GAAG;AACH,mBAAmB,kBAAkB;AACrC,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9H1B;AACA;AACO,SAAS,eAAe,CAAC,KAAK,EAAE,QAAQ,EAAE;AACjD,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC,KAAK,IAAE,OAAO,OAAK;AACzC,EAAE,IAAI,QAAQ,IAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,cAAc,EAAE,IAAC;AACrE,EAAE,OAAO,IAAI;AACb,CAAC;AACD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AC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE;AACvC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,IAAE,OAAO,GAAG,CAAC,CAAC,KAAC;AAC1C,EAAC;AACH;AACE;AACA;AACA;mBACA,8BAAS,KAAK,EAAE;AAClB,EAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC1C,EACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACa,MAAM,GAGjB,eAAW,CAAC,IAAI,EAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,EAAI,IAAI,CAAC,IAAI,GAAG,GAAE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,IAAI,EAAE,MAAM,EAAE,SAAS,CAAC;AACxD,EAAC;AACH;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAO,0BAAO,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE;AAClC,EAAI,OAAO,IAAI,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAC9D,EAAC;AACH;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAO,0BAAO,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;AACvC,EAAI,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAC9D,EAAC;AACH;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAO,sBAAK,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;AACrC,EAAI,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAC5D,EAAC;AACH;AACE;AACA;AACA;AACAe,qBAAI,uBAAO,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,GAAE;AACtC;AACEA,qBAAI,yBAAS,EAAE,OAAO,IAAI,CAAC,IAAI,YAAY,UAAU;;sEACtD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAR,IAAM,IAAI,GAAG,EAAE,EAAE,MAAM,GAAG,GAAE;AAC5B;AACA;AACA;AACA;AACA;AA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O;AACP;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;;AAEA;AACA,yCAAyC;AACzC;AACA,wBAAwB;AACxB,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA,iEAAe,YAAY,EAAC;;;;;;;;;;;;;;;;;;AChNrB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0EAA0E,GAAG;AAC7E;;AAEA;AACA,eAAe,QAAQ;;AAEvB;AACA,eAAe,SAAS;;AAExB;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UC3HA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;ACNA,OAAO,YAAY,GAAG,mBAAO,CAAC,4EAAmB;AACjD,OAAO,WAAW,GAAG,mBAAO,CAAC,0EAAkB;AAC/C,OAAO,kBAAkB,GAAG,mBAAO,CAAC,4EAAmB;AACvD,OAAO,OAAO,GAAG,mBAAO,CAAC,0FAA0B;AACnD,OAAO,aAAa,GAAG,mBAAO,CAAC,wFAAyB;AACxD,OAAO,aAAa,GAAG,mBAAO,CAAC,4FAA2B;;AAE1D;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C,GAAG;AACH,CAAC","file":"main.js","sourcesContent":["export default function crelt() {\n  var elt = arguments[0]\n  if (typeof elt == \"string\") elt = document.createElement(elt)\n  var i = 1, next = arguments[1]\n  if (next && typeof next == \"object\" && next.nodeType == null && !Array.isArray(next)) {\n    for (var name in next) if (Object.prototype.hasOwnProperty.call(next, name)) {\n      var value = next[name]\n      if (typeof value == \"string\") elt.setAttribute(name, value)\n      else if (value != null) elt[name] = value\n    }\n    i++\n  }\n  for (; i < arguments.length; i++) add(elt, arguments[i])\n  return elt\n}\n\nfunction add(elt, child) {\n  if (typeof child == \"string\") {\n    elt.appendChild(document.createTextNode(child))\n  } else if (child == null) {\n  } else if (child.nodeType != null) {\n    elt.appendChild(child)\n  } else if (Array.isArray(child)) {\n    for (var i = 0; i < child.length; i++) add(elt, child[i])\n  } else {\n    throw new RangeError(\"Unsupported child node: \" + child)\n  }\n}\n","// ::- Persistent data structure representing an ordered mapping from\n// strings to values, with some convenient update methods.\nfunction OrderedMap(content) {\n  this.content = content;\n}\n\nOrderedMap.prototype = {\n  constructor: OrderedMap,\n\n  find: function(key) {\n    for (var i = 0; i < this.content.length; i += 2)\n      if (this.content[i] === key) return i\n    return -1\n  },\n\n  // :: (string) → ?any\n  // Retrieve the value stored under `key`, or return undefined when\n  // no such key exists.\n  get: function(key) {\n    var found = this.find(key);\n    return found == -1 ? undefined : this.content[found + 1]\n  },\n\n  // :: (string, any, ?string) → OrderedMap\n  // Create a new map by replacing the value of `key` with a new\n  // value, or adding a binding to the end of the map. If `newKey` is\n  // given, the key of the binding will be replaced with that key.\n  update: function(key, value, newKey) {\n    var self = newKey && newKey != key ? this.remove(newKey) : this;\n    var found = self.find(key), content = self.content.slice();\n    if (found == -1) {\n      content.push(newKey || key, value);\n    } else {\n      content[found + 1] = value;\n      if (newKey) content[found] = newKey;\n    }\n    return new OrderedMap(content)\n  },\n\n  // :: (string) → OrderedMap\n  // Return a map with the given key removed, if it existed.\n  remove: function(key) {\n    var found = this.find(key);\n    if (found == -1) return this\n    var content = this.content.slice();\n    content.splice(found, 2);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the start of the map.\n  addToStart: function(key, value) {\n    return new OrderedMap([key, value].concat(this.remove(key).content))\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the end of the map.\n  addToEnd: function(key, value) {\n    var content = this.remove(key).content.slice();\n    content.push(key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, string, any) → OrderedMap\n  // Add a key after the given key. If `place` is not found, the new\n  // key is added to the end.\n  addBefore: function(place, key, value) {\n    var without = this.remove(key), content = without.content.slice();\n    var found = without.find(place);\n    content.splice(found == -1 ? content.length : found, 0, key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: ((key: string, value: any))\n  // Call the given function for each key/value pair in the map, in\n  // order.\n  forEach: function(f) {\n    for (var i = 0; i < this.content.length; i += 2)\n      f(this.content[i], this.content[i + 1]);\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by prepending the keys in this map that don't\n  // appear in `map` before the keys in `map`.\n  prepend: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(map.content.concat(this.subtract(map).content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by appending the keys in this map that don't\n  // appear in `map` after the keys in `map`.\n  append: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(this.subtract(map).content.concat(map.content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a map containing all the keys in this map that don't\n  // appear in `map`.\n  subtract: function(map) {\n    var result = this;\n    map = OrderedMap.from(map);\n    for (var i = 0; i < map.content.length; i += 2)\n      result = result.remove(map.content[i]);\n    return result\n  },\n\n  // :: number\n  // The amount of keys in this map.\n  get size() {\n    return this.content.length >> 1\n  }\n};\n\n// :: (?union<Object, OrderedMap>) → OrderedMap\n// Return a map with the given content. If null, create an empty\n// map. If given an ordered map, return that map itself. If given an\n// object, create a map from the object's properties.\nOrderedMap.from = function(value) {\n  if (value instanceof OrderedMap) return value\n  var content = [];\n  if (value) for (var prop in value) content.push(prop, value[prop]);\n  return new OrderedMap(content)\n};\n\nvar orderedmap = OrderedMap;\n\nexport default orderedmap;\n","import {joinPoint, canJoin, findWrapping, liftTarget, canSplit, ReplaceAroundStep} from \"prosemirror-transform\"\nimport {Slice, Fragment} from \"prosemirror-model\"\nimport {Selection, TextSelection, NodeSelection, AllSelection} from \"prosemirror-state\"\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Delete the selection, if there is one.\nexport function deleteSelection(state, dispatch) {\n  if (state.selection.empty) return false\n  if (dispatch) dispatch(state.tr.deleteSelection().scrollIntoView())\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// If the selection is empty and at the start of a textblock, try to\n// reduce the distance between that block and the one before it—if\n// there's a block directly before it that can be joined, join them.\n// If not, try to move the selected block closer to the next one in\n// the document structure by lifting it out of its parent or moving it\n// into a parent of the previous block. Will use the view for accurate\n// (bidi-aware) start-of-textblock detection if given.\nexport function joinBackward(state, dispatch, view) {\n  let {$cursor} = state.selection\n  if (!$cursor || (view ? !view.endOfTextblock(\"backward\", state)\n                        : $cursor.parentOffset > 0))\n    return false\n\n  let $cut = findCutBefore($cursor)\n\n  // If there is no node before this, try to lift\n  if (!$cut) {\n    let range = $cursor.blockRange(), target = range && liftTarget(range)\n    if (target == null) return false\n    if (dispatch) dispatch(state.tr.lift(range, target).scrollIntoView())\n    return true\n  }\n\n  let before = $cut.nodeBefore\n  // Apply the joining algorithm\n  if (!before.type.spec.isolating && deleteBarrier(state, $cut, dispatch))\n    return true\n\n  // If the node below has no content and the node above is\n  // selectable, delete the node below and select the one above.\n  if ($cursor.parent.content.size == 0 &&\n      (textblockAt(before, \"end\") || NodeSelection.isSelectable(before))) {\n    if (dispatch) {\n      let tr = state.tr.deleteRange($cursor.before(), $cursor.after())\n      tr.setSelection(textblockAt(before, \"end\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos, -1)), -1)\n                      : NodeSelection.create(tr.doc, $cut.pos - before.nodeSize))\n      dispatch(tr.scrollIntoView())\n    }\n    return true\n  }\n\n  // If the node before is an atom, delete it\n  if (before.isAtom && $cut.depth == $cursor.depth - 1) {\n    if (dispatch) dispatch(state.tr.delete($cut.pos - before.nodeSize, $cut.pos).scrollIntoView())\n    return true\n  }\n\n  return false\n}\n\nfunction textblockAt(node, side) {\n  for (; node; node = (side == \"start\" ? node.firstChild : node.lastChild))\n    if (node.isTextblock) return true\n  return false\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// When the selection is empty and at the start of a textblock, select\n// the node before that textblock, if possible. This is intended to be\n// bound to keys like backspace, after\n// [`joinBackward`](#commands.joinBackward) or other deleting\n// commands, as a fall-back behavior when the schema doesn't allow\n// deletion at the selected point.\nexport function selectNodeBackward(state, dispatch, view) {\n  let {$head, empty} = state.selection, $cut = $head\n  if (!empty) return false\n\n  if ($head.parent.isTextblock) {\n    if (view ? !view.endOfTextblock(\"backward\", state) : $head.parentOffset > 0) return false\n    $cut = findCutBefore($head)\n  }\n  let node = $cut && $cut.nodeBefore\n  if (!node || !NodeSelection.isSelectable(node)) return false\n  if (dispatch)\n    dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos - node.nodeSize)).scrollIntoView())\n  return true\n}\n\nfunction findCutBefore($pos) {\n  if (!$pos.parent.type.spec.isolating) for (let i = $pos.depth - 1; i >= 0; i--) {\n    if ($pos.index(i) > 0) return $pos.doc.resolve($pos.before(i + 1))\n    if ($pos.node(i).type.spec.isolating) break\n  }\n  return null\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// If the selection is empty and the cursor is at the end of a\n// textblock, try to reduce or remove the boundary between that block\n// and the one after it, either by joining them or by moving the other\n// block closer to this one in the tree structure. Will use the view\n// for accurate start-of-textblock detection if given.\nexport function joinForward(state, dispatch, view) {\n  let {$cursor} = state.selection\n  if (!$cursor || (view ? !view.endOfTextblock(\"forward\", state)\n                        : $cursor.parentOffset < $cursor.parent.content.size))\n    return false\n\n  let $cut = findCutAfter($cursor)\n\n  // If there is no node after this, there's nothing to do\n  if (!$cut) return false\n\n  let after = $cut.nodeAfter\n  // Try the joining algorithm\n  if (deleteBarrier(state, $cut, dispatch)) return true\n\n  // If the node above has no content and the node below is\n  // selectable, delete the node above and select the one below.\n  if ($cursor.parent.content.size == 0 &&\n      (textblockAt(after, \"start\") || NodeSelection.isSelectable(after))) {\n    if (dispatch) {\n      let tr = state.tr.deleteRange($cursor.before(), $cursor.after())\n      tr.setSelection(textblockAt(after, \"start\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos)), 1)\n                      : NodeSelection.create(tr.doc, tr.mapping.map($cut.pos)))\n      dispatch(tr.scrollIntoView())\n    }\n    return true\n  }\n\n  // If the next node is an atom, delete it\n  if (after.isAtom && $cut.depth == $cursor.depth - 1) {\n    if (dispatch) dispatch(state.tr.delete($cut.pos, $cut.pos + after.nodeSize).scrollIntoView())\n    return true\n  }\n\n  return false\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// When the selection is empty and at the end of a textblock, select\n// the node coming after that textblock, if possible. This is intended\n// to be bound to keys like delete, after\n// [`joinForward`](#commands.joinForward) and similar deleting\n// commands, to provide a fall-back behavior when the schema doesn't\n// allow deletion at the selected point.\nexport function selectNodeForward(state, dispatch, view) {\n  let {$head, empty} = state.selection, $cut = $head\n  if (!empty) return false\n  if ($head.parent.isTextblock) {\n    if (view ? !view.endOfTextblock(\"forward\", state) : $head.parentOffset < $head.parent.content.size)\n      return false\n    $cut = findCutAfter($head)\n  }\n  let node = $cut && $cut.nodeAfter\n  if (!node || !NodeSelection.isSelectable(node)) return false\n  if (dispatch)\n    dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos)).scrollIntoView())\n  return true\n}\n\nfunction findCutAfter($pos) {\n  if (!$pos.parent.type.spec.isolating) for (let i = $pos.depth - 1; i >= 0; i--) {\n    let parent = $pos.node(i)\n    if ($pos.index(i) + 1 < parent.childCount) return $pos.doc.resolve($pos.after(i + 1))\n    if (parent.type.spec.isolating) break\n  }\n  return null\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Join the selected block or, if there is a text selection, the\n// closest ancestor block of the selection that can be joined, with\n// the sibling above it.\nexport function joinUp(state, dispatch) {\n  let sel = state.selection, nodeSel = sel instanceof NodeSelection, point\n  if (nodeSel) {\n    if (sel.node.isTextblock || !canJoin(state.doc, sel.from)) return false\n    point = sel.from\n  } else {\n    point = joinPoint(state.doc, sel.from, -1)\n    if (point == null) return false\n  }\n  if (dispatch) {\n    let tr = state.tr.join(point)\n    if (nodeSel) tr.setSelection(NodeSelection.create(tr.doc, point - state.doc.resolve(point).nodeBefore.nodeSize))\n    dispatch(tr.scrollIntoView())\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Join the selected block, or the closest ancestor of the selection\n// that can be joined, with the sibling after it.\nexport function joinDown(state, dispatch) {\n  let sel = state.selection, point\n  if (sel instanceof NodeSelection) {\n    if (sel.node.isTextblock || !canJoin(state.doc, sel.to)) return false\n    point = sel.to\n  } else {\n    point = joinPoint(state.doc, sel.to, 1)\n    if (point == null) return false\n  }\n  if (dispatch)\n    dispatch(state.tr.join(point).scrollIntoView())\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Lift the selected block, or the closest ancestor block of the\n// selection that can be lifted, out of its parent node.\nexport function lift(state, dispatch) {\n  let {$from, $to} = state.selection\n  let range = $from.blockRange($to), target = range && liftTarget(range)\n  if (target == null) return false\n  if (dispatch) dispatch(state.tr.lift(range, target).scrollIntoView())\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// If the selection is in a node whose type has a truthy\n// [`code`](#model.NodeSpec.code) property in its spec, replace the\n// selection with a newline character.\nexport function newlineInCode(state, dispatch) {\n  let {$head, $anchor} = state.selection\n  if (!$head.parent.type.spec.code || !$head.sameParent($anchor)) return false\n  if (dispatch) dispatch(state.tr.insertText(\"\\n\").scrollIntoView())\n  return true\n}\n\nfunction defaultBlockAt(match) {\n  for (let i = 0; i < match.edgeCount; i++) {\n    let {type} = match.edge(i)\n    if (type.isTextblock && !type.hasRequiredAttrs()) return type\n  }\n  return null\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// When the selection is in a node with a truthy\n// [`code`](#model.NodeSpec.code) property in its spec, create a\n// default block after the code block, and move the cursor there.\nexport function exitCode(state, dispatch) {\n  let {$head, $anchor} = state.selection\n  if (!$head.parent.type.spec.code || !$head.sameParent($anchor)) return false\n  let above = $head.node(-1), after = $head.indexAfter(-1), type = defaultBlockAt(above.contentMatchAt(after))\n  if (!above.canReplaceWith(after, after, type)) return false\n  if (dispatch) {\n    let pos = $head.after(), tr = state.tr.replaceWith(pos, pos, type.createAndFill())\n    tr.setSelection(Selection.near(tr.doc.resolve(pos), 1))\n    dispatch(tr.scrollIntoView())\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// If a block node is selected, create an empty paragraph before (if\n// it is its parent's first child) or after it.\nexport function createParagraphNear(state, dispatch) {\n  let sel = state.selection, {$from, $to} = sel\n  if (sel instanceof AllSelection || $from.parent.inlineContent || $to.parent.inlineContent) return false\n  let type = defaultBlockAt($to.parent.contentMatchAt($to.indexAfter()))\n  if (!type || !type.isTextblock) return false\n  if (dispatch) {\n    let side = (!$from.parentOffset && $to.index() < $to.parent.childCount ? $from : $to).pos\n    let tr = state.tr.insert(side, type.createAndFill())\n    tr.setSelection(TextSelection.create(tr.doc, side + 1))\n    dispatch(tr.scrollIntoView())\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// If the cursor is in an empty textblock that can be lifted, lift the\n// block.\nexport function liftEmptyBlock(state, dispatch) {\n  let {$cursor} = state.selection\n  if (!$cursor || $cursor.parent.content.size) return false\n  if ($cursor.depth > 1 && $cursor.after() != $cursor.end(-1)) {\n    let before = $cursor.before()\n    if (canSplit(state.doc, before)) {\n      if (dispatch) dispatch(state.tr.split(before).scrollIntoView())\n      return true\n    }\n  }\n  let range = $cursor.blockRange(), target = range && liftTarget(range)\n  if (target == null) return false\n  if (dispatch) dispatch(state.tr.lift(range, target).scrollIntoView())\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Split the parent block of the selection. If the selection is a text\n// selection, also delete its content.\nexport function splitBlock(state, dispatch) {\n  let {$from, $to} = state.selection\n  if (state.selection instanceof NodeSelection && state.selection.node.isBlock) {\n    if (!$from.parentOffset || !canSplit(state.doc, $from.pos)) return false\n    if (dispatch) dispatch(state.tr.split($from.pos).scrollIntoView())\n    return true\n  }\n\n  if (!$from.parent.isBlock) return false\n\n  if (dispatch) {\n    let atEnd = $to.parentOffset == $to.parent.content.size\n    let tr = state.tr\n    if (state.selection instanceof TextSelection || state.selection instanceof AllSelection) tr.deleteSelection()\n    let deflt = $from.depth == 0 ? null : defaultBlockAt($from.node(-1).contentMatchAt($from.indexAfter(-1)))\n    let types = atEnd && deflt ? [{type: deflt}] : null\n    let can = canSplit(tr.doc, tr.mapping.map($from.pos), 1, types)\n    if (!types && !can && canSplit(tr.doc, tr.mapping.map($from.pos), 1, deflt && [{type: deflt}])) {\n      types = [{type: deflt}]\n      can = true\n    }\n    if (can) {\n      tr.split(tr.mapping.map($from.pos), 1, types)\n      if (!atEnd && !$from.parentOffset && $from.parent.type != deflt &&\n          $from.node(-1).canReplace($from.index(-1), $from.indexAfter(-1), Fragment.from([deflt.create(), $from.parent])))\n        tr.setNodeMarkup(tr.mapping.map($from.before()), deflt)\n    }\n    dispatch(tr.scrollIntoView())\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Acts like [`splitBlock`](#commands.splitBlock), but without\n// resetting the set of active marks at the cursor.\nexport function splitBlockKeepMarks(state, dispatch) {\n  return splitBlock(state, dispatch && (tr => {\n    let marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks())\n    if (marks) tr.ensureMarks(marks)\n    dispatch(tr)\n  }))\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Move the selection to the node wrapping the current selection, if\n// any. (Will not select the document node.)\nexport function selectParentNode(state, dispatch) {\n  let {$from, to} = state.selection, pos\n  let same = $from.sharedDepth(to)\n  if (same == 0) return false\n  pos = $from.before(same)\n  if (dispatch) dispatch(state.tr.setSelection(NodeSelection.create(state.doc, pos)))\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Select the whole document.\nexport function selectAll(state, dispatch) {\n  if (dispatch) dispatch(state.tr.setSelection(new AllSelection(state.doc)))\n  return true\n}\n\nfunction joinMaybeClear(state, $pos, dispatch) {\n  let before = $pos.nodeBefore, after = $pos.nodeAfter, index = $pos.index()\n  if (!before || !after || !before.type.compatibleContent(after.type)) return false\n  if (!before.content.size && $pos.parent.canReplace(index - 1, index)) {\n    if (dispatch) dispatch(state.tr.delete($pos.pos - before.nodeSize, $pos.pos).scrollIntoView())\n    return true\n  }\n  if (!$pos.parent.canReplace(index, index + 1) || !(after.isTextblock || canJoin(state.doc, $pos.pos)))\n    return false\n  if (dispatch)\n    dispatch(state.tr\n             .clearIncompatible($pos.pos, before.type, before.contentMatchAt(before.childCount))\n             .join($pos.pos)\n             .scrollIntoView())\n  return true\n}\n\nfunction deleteBarrier(state, $cut, dispatch) {\n  let before = $cut.nodeBefore, after = $cut.nodeAfter, conn, match\n  if (before.type.spec.isolating || after.type.spec.isolating) return false\n  if (joinMaybeClear(state, $cut, dispatch)) return true\n\n  let canDelAfter = $cut.parent.canReplace($cut.index(), $cut.index() + 1)\n  if (canDelAfter &&\n      (conn = (match = before.contentMatchAt(before.childCount)).findWrapping(after.type)) &&\n      match.matchType(conn[0] || after.type).validEnd) {\n    if (dispatch) {\n      let end = $cut.pos + after.nodeSize, wrap = Fragment.empty\n      for (let i = conn.length - 1; i >= 0; i--)\n        wrap = Fragment.from(conn[i].create(null, wrap))\n      wrap = Fragment.from(before.copy(wrap))\n      let tr = state.tr.step(new ReplaceAroundStep($cut.pos - 1, end, $cut.pos, end, new Slice(wrap, 1, 0), conn.length, true))\n      let joinAt = end + 2 * conn.length\n      if (canJoin(tr.doc, joinAt)) tr.join(joinAt)\n      dispatch(tr.scrollIntoView())\n    }\n    return true\n  }\n\n  let selAfter = Selection.findFrom($cut, 1)\n  let range = selAfter && selAfter.$from.blockRange(selAfter.$to), target = range && liftTarget(range)\n  if (target != null && target >= $cut.depth) {\n    if (dispatch) dispatch(state.tr.lift(range, target).scrollIntoView())\n    return true\n  }\n\n  if (canDelAfter && after.isTextblock && textblockAt(before, \"end\")) {\n    let at = before, wrap = []\n    for (;;) {\n      wrap.push(at)\n      if (at.isTextblock) break\n      at = at.lastChild\n    }\n    if (at.canReplace(at.childCount, at.childCount, after.content)) {\n      if (dispatch) {\n        let end = Fragment.empty\n        for (let i = wrap.length - 1; i >= 0; i--) end = Fragment.from(wrap[i].copy(end))\n        let tr = state.tr.step(new ReplaceAroundStep($cut.pos - wrap.length, $cut.pos + after.nodeSize,\n                                                     $cut.pos + 1, $cut.pos + after.nodeSize - 1,\n                                                     new Slice(end, wrap.length, 0), 0, true))\n        dispatch(tr.scrollIntoView())\n      }\n      return true\n    }\n  }\n\n  return false\n}\n\n// Parameterized commands\n\n// :: (NodeType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Wrap the selection in a node of the given type with the given\n// attributes.\nexport function wrapIn(nodeType, attrs) {\n  return function(state, dispatch) {\n    let {$from, $to} = state.selection\n    let range = $from.blockRange($to), wrapping = range && findWrapping(range, nodeType, attrs)\n    if (!wrapping) return false\n    if (dispatch) dispatch(state.tr.wrap(range, wrapping).scrollIntoView())\n    return true\n  }\n}\n\n// :: (NodeType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Returns a command that tries to set the selected textblocks to the\n// given node type with the given attributes.\nexport function setBlockType(nodeType, attrs) {\n  return function(state, dispatch) {\n    let {from, to} = state.selection\n    let applicable = false\n    state.doc.nodesBetween(from, to, (node, pos) => {\n      if (applicable) return false\n      if (!node.isTextblock || node.hasMarkup(nodeType, attrs)) return\n      if (node.type == nodeType) {\n        applicable = true\n      } else {\n        let $pos = state.doc.resolve(pos), index = $pos.index()\n        applicable = $pos.parent.canReplaceWith(index, index + 1, nodeType)\n      }\n    })\n    if (!applicable) return false\n    if (dispatch) dispatch(state.tr.setBlockType(from, to, nodeType, attrs).scrollIntoView())\n    return true\n  }\n}\n\nfunction markApplies(doc, ranges, type) {\n  for (let i = 0; i < ranges.length; i++) {\n    let {$from, $to} = ranges[i]\n    let can = $from.depth == 0 ? doc.type.allowsMarkType(type) : false\n    doc.nodesBetween($from.pos, $to.pos, node => {\n      if (can) return false\n      can = node.inlineContent && node.type.allowsMarkType(type)\n    })\n    if (can) return true\n  }\n  return false\n}\n\n// :: (MarkType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Create a command function that toggles the given mark with the\n// given attributes. Will return `false` when the current selection\n// doesn't support that mark. This will remove the mark if any marks\n// of that type exist in the selection, or add it otherwise. If the\n// selection is empty, this applies to the [stored\n// marks](#state.EditorState.storedMarks) instead of a range of the\n// document.\nexport function toggleMark(markType, attrs) {\n  return function(state, dispatch) {\n    let {empty, $cursor, ranges} = state.selection\n    if ((empty && !$cursor) || !markApplies(state.doc, ranges, markType)) return false\n    if (dispatch) {\n      if ($cursor) {\n        if (markType.isInSet(state.storedMarks || $cursor.marks()))\n          dispatch(state.tr.removeStoredMark(markType))\n        else\n          dispatch(state.tr.addStoredMark(markType.create(attrs)))\n      } else {\n        let has = false, tr = state.tr\n        for (let i = 0; !has && i < ranges.length; i++) {\n          let {$from, $to} = ranges[i]\n          has = state.doc.rangeHasMark($from.pos, $to.pos, markType)\n        }\n        for (let i = 0; i < ranges.length; i++) {\n          let {$from, $to} = ranges[i]\n          if (has) {\n            tr.removeMark($from.pos, $to.pos, markType)\n          } else {\n            let from = $from.pos, to = $to.pos, start = $from.nodeAfter, end = $to.nodeBefore\n            let spaceStart = start && start.isText ? /^\\s*/.exec(start.text)[0].length : 0\n            let spaceEnd = end && end.isText ? /\\s*$/.exec(end.text)[0].length : 0\n            if (from + spaceStart < to) { from += spaceStart; to -= spaceEnd }\n            tr.addMark(from, to, markType.create(attrs))\n          }\n        }\n        dispatch(tr.scrollIntoView())\n      }\n    }\n    return true\n  }\n}\n\nfunction wrapDispatchForJoin(dispatch, isJoinable) {\n  return tr => {\n    if (!tr.isGeneric) return dispatch(tr)\n\n    let ranges = []\n    for (let i = 0; i < tr.mapping.maps.length; i++) {\n      let map = tr.mapping.maps[i]\n      for (let j = 0; j < ranges.length; j++)\n        ranges[j] = map.map(ranges[j])\n      map.forEach((_s, _e, from, to) => ranges.push(from, to))\n    }\n\n    // Figure out which joinable points exist inside those ranges,\n    // by checking all node boundaries in their parent nodes.\n    let joinable = []\n    for (let i = 0; i < ranges.length; i += 2) {\n      let from = ranges[i], to = ranges[i + 1]\n      let $from = tr.doc.resolve(from), depth = $from.sharedDepth(to), parent = $from.node(depth)\n      for (let index = $from.indexAfter(depth), pos = $from.after(depth + 1); pos <= to; ++index) {\n        let after = parent.maybeChild(index)\n        if (!after) break\n        if (index && joinable.indexOf(pos) == -1) {\n          let before = parent.child(index - 1)\n          if (before.type == after.type && isJoinable(before, after))\n            joinable.push(pos)\n        }\n        pos += after.nodeSize\n      }\n    }\n    // Join the joinable points\n    joinable.sort((a, b) => a - b)\n    for (let i = joinable.length - 1; i >= 0; i--) {\n      if (canJoin(tr.doc, joinable[i])) tr.join(joinable[i])\n    }\n    dispatch(tr)\n  }\n}\n\n// :: ((state: EditorState, ?(tr: Transaction)) → bool, union<(before: Node, after: Node) → bool, [string]>) → (state: EditorState, ?(tr: Transaction)) → bool\n// Wrap a command so that, when it produces a transform that causes\n// two joinable nodes to end up next to each other, those are joined.\n// Nodes are considered joinable when they are of the same type and\n// when the `isJoinable` predicate returns true for them or, if an\n// array of strings was passed, if their node type name is in that\n// array.\nexport function autoJoin(command, isJoinable) {\n  if (Array.isArray(isJoinable)) {\n    let types = isJoinable\n    isJoinable = node => types.indexOf(node.type.name) > -1\n  }\n  return (state, dispatch) => command(state, dispatch && wrapDispatchForJoin(dispatch, isJoinable))\n}\n\n// :: (...[(EditorState, ?(tr: Transaction), ?EditorView) → bool]) → (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// Combine a number of command functions into a single function (which\n// calls them one by one until one returns true).\nexport function chainCommands(...commands) {\n  return function(state, dispatch, view) {\n    for (let i = 0; i < commands.length; i++)\n      if (commands[i](state, dispatch, view)) return true\n    return false\n  }\n}\n\nlet backspace = chainCommands(deleteSelection, joinBackward, selectNodeBackward)\nlet del = chainCommands(deleteSelection, joinForward, selectNodeForward)\n\n// :: Object\n// A basic keymap containing bindings not specific to any schema.\n// Binds the following keys (when multiple commands are listed, they\n// are chained with [`chainCommands`](#commands.chainCommands)):\n//\n// * **Enter** to `newlineInCode`, `createParagraphNear`, `liftEmptyBlock`, `splitBlock`\n// * **Mod-Enter** to `exitCode`\n// * **Backspace** and **Mod-Backspace** to `deleteSelection`, `joinBackward`, `selectNodeBackward`\n// * **Delete** and **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n// * **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n// * **Mod-a** to `selectAll`\nexport let pcBaseKeymap = {\n  \"Enter\": chainCommands(newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock),\n  \"Mod-Enter\": exitCode,\n  \"Backspace\": backspace,\n  \"Mod-Backspace\": backspace,\n  \"Delete\": del,\n  \"Mod-Delete\": del,\n  \"Mod-a\": selectAll\n}\n\n// :: Object\n// A copy of `pcBaseKeymap` that also binds **Ctrl-h** like Backspace,\n// **Ctrl-d** like Delete, **Alt-Backspace** like Ctrl-Backspace, and\n// **Ctrl-Alt-Backspace**, **Alt-Delete**, and **Alt-d** like\n// Ctrl-Delete.\nexport let macBaseKeymap = {\n  \"Ctrl-h\": pcBaseKeymap[\"Backspace\"],\n  \"Alt-Backspace\": pcBaseKeymap[\"Mod-Backspace\"],\n  \"Ctrl-d\": pcBaseKeymap[\"Delete\"],\n  \"Ctrl-Alt-Backspace\": pcBaseKeymap[\"Mod-Delete\"],\n  \"Alt-Delete\": pcBaseKeymap[\"Mod-Delete\"],\n  \"Alt-d\": pcBaseKeymap[\"Mod-Delete\"]\n}\nfor (let key in pcBaseKeymap) macBaseKeymap[key] = pcBaseKeymap[key]\n\n// declare global: os, navigator\nconst mac = typeof navigator != \"undefined\" ? /Mac/.test(navigator.platform)\n          : typeof os != \"undefined\" ? os.platform() == \"darwin\" : false\n\n// :: Object\n// Depending on the detected platform, this will hold\n// [`pcBasekeymap`](#commands.pcBaseKeymap) or\n// [`macBaseKeymap`](#commands.macBaseKeymap).\nexport let baseKeymap = mac ? macBaseKeymap : pcBaseKeymap\n","import {Plugin} from \"prosemirror-state\"\nimport {dropPoint} from \"prosemirror-transform\"\n\n// :: (options: ?Object) → Plugin\n// Create a plugin that, when added to a ProseMirror instance,\n// causes a decoration to show up at the drop position when something\n// is dragged over the editor.\n//\n//   options::- These options are supported:\n//\n//     color:: ?string\n//     The color of the cursor. Defaults to `black`.\n//\n//     width:: ?number\n//     The precise width of the cursor in pixels. Defaults to 1.\n//\n//     class:: ?string\n//     A CSS class name to add to the cursor element.\nexport function dropCursor(options = {}) {\n  return new Plugin({\n    view(editorView) { return new DropCursorView(editorView, options) }\n  })\n}\n\nclass DropCursorView {\n  constructor(editorView, options) {\n    this.editorView = editorView\n    this.width = options.width || 1\n    this.color = options.color || \"black\"\n    this.class = options.class\n    this.cursorPos = null\n    this.element = null\n    this.timeout = null\n\n    this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(name => {\n      let handler = e => this[name](e)\n      editorView.dom.addEventListener(name, handler)\n      return {name, handler}\n    })\n  }\n\n  destroy() {\n    this.handlers.forEach(({name, handler}) => this.editorView.dom.removeEventListener(name, handler))\n  }\n\n  update(editorView, prevState) {\n    if (this.cursorPos != null && prevState.doc != editorView.state.doc) this.updateOverlay()\n  }\n\n  setCursor(pos) {\n    if (pos == this.cursorPos) return\n    this.cursorPos = pos\n    if (pos == null) {\n      this.element.parentNode.removeChild(this.element)\n      this.element = null\n    } else {\n      this.updateOverlay()\n    }\n  }\n\n  updateOverlay() {\n    let $pos = this.editorView.state.doc.resolve(this.cursorPos), rect\n    if (!$pos.parent.inlineContent) {\n      let before = $pos.nodeBefore, after = $pos.nodeAfter\n      if (before || after) {\n        let nodeRect = this.editorView.nodeDOM(this.cursorPos - (before ?  before.nodeSize : 0)).getBoundingClientRect()\n        let top = before ? nodeRect.bottom : nodeRect.top\n        if (before && after)\n          top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2\n        rect = {left: nodeRect.left, right: nodeRect.right, top: top - this.width / 2, bottom: top + this.width / 2}\n      }\n    }\n    if (!rect) {\n      let coords = this.editorView.coordsAtPos(this.cursorPos)\n      rect = {left: coords.left - this.width / 2, right: coords.left + this.width / 2, top: coords.top, bottom: coords.bottom}\n    }\n\n    let parent = this.editorView.dom.offsetParent\n    if (!this.element) {\n      this.element = parent.appendChild(document.createElement(\"div\"))\n      if (this.class) this.element.className = this.class\n      this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none; background-color: \" + this.color\n    }\n    let parentLeft, parentTop\n    if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n      parentLeft = -pageXOffset\n      parentTop = -pageYOffset\n    } else {\n      let rect = parent.getBoundingClientRect()\n      parentLeft = rect.left - parent.scrollLeft\n      parentTop = rect.top - parent.scrollTop\n    }\n    this.element.style.left = (rect.left - parentLeft) + \"px\"\n    this.element.style.top = (rect.top - parentTop) + \"px\"\n    this.element.style.width = (rect.right - rect.left) + \"px\"\n    this.element.style.height = (rect.bottom - rect.top) + \"px\"\n  }\n\n  scheduleRemoval(timeout) {\n    clearTimeout(this.timeout)\n    this.timeout = setTimeout(() => this.setCursor(null), timeout)\n  }\n\n  dragover(event) {\n    if (!this.editorView.editable) return\n    let pos = this.editorView.posAtCoords({left: event.clientX, top: event.clientY})\n    if (pos) {\n      let target = pos.pos\n      if (this.editorView.dragging && this.editorView.dragging.slice) {\n        target = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice)\n        if (target == null) return this.setCursor(null)\n      }\n      this.setCursor(target)\n      this.scheduleRemoval(5000)\n    }\n  }\n\n  dragend() {\n    this.scheduleRemoval(20)\n  }\n\n  drop() {\n    this.scheduleRemoval(20)\n  }\n\n  dragleave(event) {\n    if (event.target == this.editorView.dom || !this.editorView.dom.contains(event.relatedTarget))\n      this.setCursor(null)\n  }\n}\n","const prefix = \"ProseMirror-prompt\"\n\nexport function openPrompt(options) {\n  let wrapper = document.body.appendChild(document.createElement(\"div\"))\n  wrapper.className = prefix\n\n  let mouseOutside = e => { if (!wrapper.contains(e.target)) close() }\n  setTimeout(() => window.addEventListener(\"mousedown\", mouseOutside), 50)\n  let close = () => {\n    window.removeEventListener(\"mousedown\", mouseOutside)\n    if (wrapper.parentNode) wrapper.parentNode.removeChild(wrapper)\n  }\n\n  let domFields = []\n  for (let name in options.fields) domFields.push(options.fields[name].render())\n\n  let submitButton = document.createElement(\"button\")\n  submitButton.type = \"submit\"\n  submitButton.className = prefix + \"-submit\"\n  submitButton.textContent = \"OK\"\n  let cancelButton = document.createElement(\"button\")\n  cancelButton.type = \"button\"\n  cancelButton.className = prefix + \"-cancel\"\n  cancelButton.textContent = \"Cancel\"\n  cancelButton.addEventListener(\"click\", close)\n\n  let form = wrapper.appendChild(document.createElement(\"form\"))\n  if (options.title) form.appendChild(document.createElement(\"h5\")).textContent = options.title\n  domFields.forEach(field => {\n    form.appendChild(document.createElement(\"div\")).appendChild(field)\n  })\n  let buttons = form.appendChild(document.createElement(\"div\"))\n  buttons.className = prefix + \"-buttons\"\n  buttons.appendChild(submitButton)\n  buttons.appendChild(document.createTextNode(\" \"))\n  buttons.appendChild(cancelButton)\n\n  let box = wrapper.getBoundingClientRect()\n  wrapper.style.top = ((window.innerHeight - box.height) / 2) + \"px\"\n  wrapper.style.left = ((window.innerWidth - box.width) / 2) + \"px\"\n\n  let submit = () => {\n    let params = getValues(options.fields, domFields)\n    if (params) {\n      close()\n      options.callback(params)\n    }\n  }\n\n  form.addEventListener(\"submit\", e => {\n    e.preventDefault()\n    submit()\n  })\n\n  form.addEventListener(\"keydown\", e => {\n    if (e.keyCode == 27) {\n      e.preventDefault()\n      close()\n    } else if (e.keyCode == 13 && !(e.ctrlKey || e.metaKey || e.shiftKey)) {\n      e.preventDefault()\n      submit()\n    } else if (e.keyCode == 9) {\n      window.setTimeout(() => {\n        if (!wrapper.contains(document.activeElement)) close()\n      }, 500)\n    }\n  })\n\n  let input = form.elements[0]\n  if (input) input.focus()\n}\n\nfunction getValues(fields, domFields) {\n  let result = Object.create(null), i = 0\n  for (let name in fields) {\n    let field = fields[name], dom = domFields[i++]\n    let value = field.read(dom), bad = field.validate(value)\n    if (bad) {\n      reportInvalid(dom, bad)\n      return null\n    }\n    result[name] = field.clean(value)\n  }\n  return result\n}\n\nfunction reportInvalid(dom, message) {\n  // FIXME this is awful and needs a lot more work\n  let parent = dom.parentNode\n  let msg = parent.appendChild(document.createElement(\"div\"))\n  msg.style.left = (dom.offsetLeft + dom.offsetWidth + 2) + \"px\"\n  msg.style.top = (dom.offsetTop - 5) + \"px\"\n  msg.className = \"ProseMirror-invalid\"\n  msg.textContent = message\n  setTimeout(() => parent.removeChild(msg), 1500)\n}\n\n// ::- The type of field that `FieldPrompt` expects to be passed to it.\nexport class Field {\n  // :: (Object)\n  // Create a field with the given options. Options support by all\n  // field types are:\n  //\n  // **`value`**`: ?any`\n  //   : The starting value for the field.\n  //\n  // **`label`**`: string`\n  //   : The label for the field.\n  //\n  // **`required`**`: ?bool`\n  //   : Whether the field is required.\n  //\n  // **`validate`**`: ?(any) → ?string`\n  //   : A function to validate the given value. Should return an\n  //     error message if it is not valid.\n  constructor(options) { this.options = options }\n\n  // render:: (state: EditorState, props: Object) → dom.Node\n  // Render the field to the DOM. Should be implemented by all subclasses.\n\n  // :: (dom.Node) → any\n  // Read the field's value from its DOM node.\n  read(dom) { return dom.value }\n\n  // :: (any) → ?string\n  // A field-type-specific validation function.\n  validateType(_value) {}\n\n  validate(value) {\n    if (!value && this.options.required)\n      return \"Required field\"\n    return this.validateType(value) || (this.options.validate && this.options.validate(value))\n  }\n\n  clean(value) {\n    return this.options.clean ? this.options.clean(value) : value\n  }\n}\n\n// ::- A field class for single-line text fields.\nexport class TextField extends Field {\n  render() {\n    let input = document.createElement(\"input\")\n    input.type = \"text\"\n    input.placeholder = this.options.label\n    input.value = this.options.value || \"\"\n    input.autocomplete = \"off\"\n    return input\n  }\n}\n\n\n// ::- A field class for dropdown fields based on a plain `<select>`\n// tag. Expects an option `options`, which should be an array of\n// `{value: string, label: string}` objects, or a function taking a\n// `ProseMirror` instance and returning such an array.\nexport class SelectField extends Field {\n  render() {\n    let select = document.createElement(\"select\")\n    this.options.options.forEach(o => {\n      let opt = select.appendChild(document.createElement(\"option\"))\n      opt.value = o.value\n      opt.selected = o.value == this.options.value\n      opt.label = o.label\n    })\n    return select\n  }\n}\n","import {wrapItem, blockTypeItem, Dropdown, DropdownSubmenu, joinUpItem, liftItem,\n       selectParentNodeItem, undoItem, redoItem, icons, MenuItem} from \"prosemirror-menu\"\nimport {NodeSelection} from \"prosemirror-state\"\nimport {toggleMark} from \"prosemirror-commands\"\nimport {wrapInList} from \"prosemirror-schema-list\"\nimport {TextField, openPrompt} from \"./prompt\"\n\n// Helpers to create specific types of items\n\nfunction canInsert(state, nodeType) {\n  let $from = state.selection.$from\n  for (let d = $from.depth; d >= 0; d--) {\n    let index = $from.index(d)\n    if ($from.node(d).canReplaceWith(index, index, nodeType)) return true\n  }\n  return false\n}\n\nfunction insertImageItem(nodeType) {\n  return new MenuItem({\n    title: \"Insert image\",\n    label: \"Image\",\n    enable(state) { return canInsert(state, nodeType) },\n    run(state, _, view) {\n      let {from, to} = state.selection, attrs = null\n      if (state.selection instanceof NodeSelection && state.selection.node.type == nodeType)\n        attrs = state.selection.node.attrs\n      openPrompt({\n        title: \"Insert image\",\n        fields: {\n          src: new TextField({label: \"Location\", required: true, value: attrs && attrs.src}),\n          title: new TextField({label: \"Title\", value: attrs && attrs.title}),\n          alt: new TextField({label: \"Description\",\n                              value: attrs ? attrs.alt : state.doc.textBetween(from, to, \" \")})\n        },\n        callback(attrs) {\n          view.dispatch(view.state.tr.replaceSelectionWith(nodeType.createAndFill(attrs)))\n          view.focus()\n        }\n      })\n    }\n  })\n}\n\nfunction cmdItem(cmd, options) {\n  let passedOptions = {\n    label: options.title,\n    run: cmd\n  }\n  for (let prop in options) passedOptions[prop] = options[prop]\n  if ((!options.enable || options.enable === true) && !options.select)\n    passedOptions[options.enable ? \"enable\" : \"select\"] = state => cmd(state)\n\n  return new MenuItem(passedOptions)\n}\n\nfunction markActive(state, type) {\n  let {from, $from, to, empty} = state.selection\n  if (empty) return type.isInSet(state.storedMarks || $from.marks())\n  else return state.doc.rangeHasMark(from, to, type)\n}\n\nfunction markItem(markType, options) {\n  let passedOptions = {\n    active(state) { return markActive(state, markType) },\n    enable: true\n  }\n  for (let prop in options) passedOptions[prop] = options[prop]\n  return cmdItem(toggleMark(markType), passedOptions)\n}\n\nfunction linkItem(markType) {\n  return new MenuItem({\n    title: \"Add or remove link\",\n    icon: icons.link,\n    active(state) { return markActive(state, markType) },\n    enable(state) { return !state.selection.empty },\n    run(state, dispatch, view) {\n      if (markActive(state, markType)) {\n        toggleMark(markType)(state, dispatch)\n        return true\n      }\n      openPrompt({\n        title: \"Create a link\",\n        fields: {\n          href: new TextField({\n            label: \"Link target\",\n            required: true\n          }),\n          title: new TextField({label: \"Title\"})\n        },\n        callback(attrs) {\n          toggleMark(markType, attrs)(view.state, view.dispatch)\n          view.focus()\n        }\n      })\n    }\n  })\n}\n\nfunction wrapListItem(nodeType, options) {\n  return cmdItem(wrapInList(nodeType, options.attrs), options)\n}\n\n// :: (Schema) → Object\n// Given a schema, look for default mark and node types in it and\n// return an object with relevant menu items relating to those marks:\n//\n// **`toggleStrong`**`: MenuItem`\n//   : A menu item to toggle the [strong mark](#schema-basic.StrongMark).\n//\n// **`toggleEm`**`: MenuItem`\n//   : A menu item to toggle the [emphasis mark](#schema-basic.EmMark).\n//\n// **`toggleCode`**`: MenuItem`\n//   : A menu item to toggle the [code font mark](#schema-basic.CodeMark).\n//\n// **`toggleLink`**`: MenuItem`\n//   : A menu item to toggle the [link mark](#schema-basic.LinkMark).\n//\n// **`insertImage`**`: MenuItem`\n//   : A menu item to insert an [image](#schema-basic.Image).\n//\n// **`wrapBulletList`**`: MenuItem`\n//   : A menu item to wrap the selection in a [bullet list](#schema-list.BulletList).\n//\n// **`wrapOrderedList`**`: MenuItem`\n//   : A menu item to wrap the selection in an [ordered list](#schema-list.OrderedList).\n//\n// **`wrapBlockQuote`**`: MenuItem`\n//   : A menu item to wrap the selection in a [block quote](#schema-basic.BlockQuote).\n//\n// **`makeParagraph`**`: MenuItem`\n//   : A menu item to set the current textblock to be a normal\n//     [paragraph](#schema-basic.Paragraph).\n//\n// **`makeCodeBlock`**`: MenuItem`\n//   : A menu item to set the current textblock to be a\n//     [code block](#schema-basic.CodeBlock).\n//\n// **`makeHead[N]`**`: MenuItem`\n//   : Where _N_ is 1 to 6. Menu items to set the current textblock to\n//     be a [heading](#schema-basic.Heading) of level _N_.\n//\n// **`insertHorizontalRule`**`: MenuItem`\n//   : A menu item to insert a horizontal rule.\n//\n// The return value also contains some prefabricated menu elements and\n// menus, that you can use instead of composing your own menu from\n// scratch:\n//\n// **`insertMenu`**`: Dropdown`\n//   : A dropdown containing the `insertImage` and\n//     `insertHorizontalRule` items.\n//\n// **`typeMenu`**`: Dropdown`\n//   : A dropdown containing the items for making the current\n//     textblock a paragraph, code block, or heading.\n//\n// **`fullMenu`**`: [[MenuElement]]`\n//   : An array of arrays of menu elements for use as the full menu\n//     for, for example the [menu bar](https://github.com/prosemirror/prosemirror-menu#user-content-menubar).\nexport function buildMenuItems(schema) {\n  let r = {}, type\n  if (type = schema.marks.strong)\n    r.toggleStrong = markItem(type, {title: \"Toggle strong style\", icon: icons.strong})\n  if (type = schema.marks.em)\n    r.toggleEm = markItem(type, {title: \"Toggle emphasis\", icon: icons.em})\n  if (type = schema.marks.code)\n    r.toggleCode = markItem(type, {title: \"Toggle code font\", icon: icons.code})\n  if (type = schema.marks.link)\n    r.toggleLink = linkItem(type)\n\n  if (type = schema.nodes.image)\n    r.insertImage = insertImageItem(type)\n  if (type = schema.nodes.bullet_list)\n    r.wrapBulletList = wrapListItem(type, {\n      title: \"Wrap in bullet list\",\n      icon: icons.bulletList\n    })\n  if (type = schema.nodes.ordered_list)\n    r.wrapOrderedList = wrapListItem(type, {\n      title: \"Wrap in ordered list\",\n      icon: icons.orderedList\n    })\n  if (type = schema.nodes.blockquote)\n    r.wrapBlockQuote = wrapItem(type, {\n      title: \"Wrap in block quote\",\n      icon: icons.blockquote\n    })\n  if (type = schema.nodes.paragraph)\n    r.makeParagraph = blockTypeItem(type, {\n      title: \"Change to paragraph\",\n      label: \"Plain\"\n    })\n  if (type = schema.nodes.code_block)\n    r.makeCodeBlock = blockTypeItem(type, {\n      title: \"Change to code block\",\n      label: \"Code\"\n    })\n  if (type = schema.nodes.heading)\n    for (let i = 1; i <= 10; i++)\n      r[\"makeHead\" + i] = blockTypeItem(type, {\n        title: \"Change to heading \" + i,\n        label: \"Level \" + i,\n        attrs: {level: i}\n      })\n  if (type = schema.nodes.horizontal_rule) {\n    let hr = type\n    r.insertHorizontalRule = new MenuItem({\n      title: \"Insert horizontal rule\",\n      label: \"Horizontal rule\",\n      enable(state) { return canInsert(state, hr) },\n      run(state, dispatch) { dispatch(state.tr.replaceSelectionWith(hr.create())) }\n    })\n  }\n\n  let cut = arr => arr.filter(x => x)\n  r.insertMenu = new Dropdown(cut([r.insertImage, r.insertHorizontalRule]), {label: \"Insert\"})\n  r.typeMenu = new Dropdown(cut([r.makeParagraph, r.makeCodeBlock, r.makeHead1 && new DropdownSubmenu(cut([\n    r.makeHead1, r.makeHead2, r.makeHead3, r.makeHead4, r.makeHead5, r.makeHead6\n  ]), {label: \"Heading\"})]), {label: \"Type...\"})\n\n  r.inlineMenu = [cut([r.toggleStrong, r.toggleEm, r.toggleCode, r.toggleLink])]\n  r.blockMenu = [cut([r.wrapBulletList, r.wrapOrderedList, r.wrapBlockQuote, joinUpItem,\n                      liftItem, selectParentNodeItem])]\n  r.fullMenu = r.inlineMenu.concat([[r.insertMenu, r.typeMenu]], [[undoItem, redoItem]], r.blockMenu)\n\n  return r\n}\n","import {wrapIn, setBlockType, chainCommands, toggleMark, exitCode,\n        joinUp, joinDown, lift, selectParentNode} from \"prosemirror-commands\"\nimport {wrapInList, splitListItem, liftListItem, sinkListItem} from \"prosemirror-schema-list\"\nimport {undo, redo} from \"prosemirror-history\"\nimport {undoInputRule} from \"prosemirror-inputrules\"\n\nconst mac = typeof navigator != \"undefined\" ? /Mac/.test(navigator.platform) : false\n\n// :: (Schema, ?Object) → Object\n// Inspect the given schema looking for marks and nodes from the\n// basic schema, and if found, add key bindings related to them.\n// This will add:\n//\n// * **Mod-b** for toggling [strong](#schema-basic.StrongMark)\n// * **Mod-i** for toggling [emphasis](#schema-basic.EmMark)\n// * **Mod-`** for toggling [code font](#schema-basic.CodeMark)\n// * **Ctrl-Shift-0** for making the current textblock a paragraph\n// * **Ctrl-Shift-1** to **Ctrl-Shift-Digit6** for making the current\n//   textblock a heading of the corresponding level\n// * **Ctrl-Shift-Backslash** to make the current textblock a code block\n// * **Ctrl-Shift-8** to wrap the selection in an ordered list\n// * **Ctrl-Shift-9** to wrap the selection in a bullet list\n// * **Ctrl->** to wrap the selection in a block quote\n// * **Enter** to split a non-empty textblock in a list item while at\n//   the same time splitting the list item\n// * **Mod-Enter** to insert a hard break\n// * **Mod-_** to insert a horizontal rule\n// * **Backspace** to undo an input rule\n// * **Alt-ArrowUp** to `joinUp`\n// * **Alt-ArrowDown** to `joinDown`\n// * **Mod-BracketLeft** to `lift`\n// * **Escape** to `selectParentNode`\n//\n// You can suppress or map these bindings by passing a `mapKeys`\n// argument, which maps key names (say `\"Mod-B\"` to either `false`, to\n// remove the binding, or a new key name string.\nexport function buildKeymap(schema, mapKeys) {\n  let keys = {}, type\n  function bind(key, cmd) {\n    if (mapKeys) {\n      let mapped = mapKeys[key]\n      if (mapped === false) return\n      if (mapped) key = mapped\n    }\n    keys[key] = cmd\n  }\n\n\n  bind(\"Mod-z\", undo)\n  bind(\"Shift-Mod-z\", redo)\n  bind(\"Backspace\", undoInputRule)\n  if (!mac) bind(\"Mod-y\", redo)\n\n  bind(\"Alt-ArrowUp\", joinUp)\n  bind(\"Alt-ArrowDown\", joinDown)\n  bind(\"Mod-BracketLeft\", lift)\n  bind(\"Escape\", selectParentNode)\n\n  if (type = schema.marks.strong) {\n    bind(\"Mod-b\", toggleMark(type))\n    bind(\"Mod-B\", toggleMark(type))\n  }\n  if (type = schema.marks.em) {\n    bind(\"Mod-i\", toggleMark(type))\n    bind(\"Mod-I\", toggleMark(type))\n  }\n  if (type = schema.marks.code)\n    bind(\"Mod-`\", toggleMark(type))\n\n  if (type = schema.nodes.bullet_list)\n    bind(\"Shift-Ctrl-8\", wrapInList(type))\n  if (type = schema.nodes.ordered_list)\n    bind(\"Shift-Ctrl-9\", wrapInList(type))\n  if (type = schema.nodes.blockquote)\n    bind(\"Ctrl->\", wrapIn(type))\n  if (type = schema.nodes.hard_break) {\n    let br = type, cmd = chainCommands(exitCode, (state, dispatch) => {\n      dispatch(state.tr.replaceSelectionWith(br.create()).scrollIntoView())\n      return true\n    })\n    bind(\"Mod-Enter\", cmd)\n    bind(\"Shift-Enter\", cmd)\n    if (mac) bind(\"Ctrl-Enter\", cmd)\n  }\n  if (type = schema.nodes.list_item) {\n    bind(\"Enter\", splitListItem(type))\n    bind(\"Mod-[\", liftListItem(type))\n    bind(\"Mod-]\", sinkListItem(type))\n  }\n  if (type = schema.nodes.paragraph)\n    bind(\"Shift-Ctrl-0\", setBlockType(type))\n  if (type = schema.nodes.code_block)\n    bind(\"Shift-Ctrl-\\\\\", setBlockType(type))\n  if (type = schema.nodes.heading)\n    for (let i = 1; i <= 6; i++) bind(\"Shift-Ctrl-\" + i, setBlockType(type, {level: i}))\n  if (type = schema.nodes.horizontal_rule) {\n    let hr = type\n    bind(\"Mod-_\", (state, dispatch) => {\n      dispatch(state.tr.replaceSelectionWith(hr.create()).scrollIntoView())\n      return true\n    })\n  }\n\n  return keys\n}\n","import {inputRules, wrappingInputRule, textblockTypeInputRule,\n        smartQuotes, emDash, ellipsis} from \"prosemirror-inputrules\"\n\n// : (NodeType) → InputRule\n// Given a blockquote node type, returns an input rule that turns `\"> \"`\n// at the start of a textblock into a blockquote.\nexport function blockQuoteRule(nodeType) {\n  return wrappingInputRule(/^\\s*>\\s$/, nodeType)\n}\n\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a number\n// followed by a dot at the start of a textblock into an ordered list.\nexport function orderedListRule(nodeType) {\n  return wrappingInputRule(/^(\\d+)\\.\\s$/, nodeType, match => ({order: +match[1]}),\n                           (match, node) => node.childCount + node.attrs.order == +match[1])\n}\n\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a bullet\n// (dash, plush, or asterisk) at the start of a textblock into a\n// bullet list.\nexport function bulletListRule(nodeType) {\n  return wrappingInputRule(/^\\s*([-+*])\\s$/, nodeType)\n}\n\n// : (NodeType) → InputRule\n// Given a code block node type, returns an input rule that turns a\n// textblock starting with three backticks into a code block.\nexport function codeBlockRule(nodeType) {\n  return textblockTypeInputRule(/^```$/, nodeType)\n}\n\n// : (NodeType, number) → InputRule\n// Given a node type and a maximum level, creates an input rule that\n// turns up to that number of `#` characters followed by a space at\n// the start of a textblock into a heading whose level corresponds to\n// the number of `#` signs.\nexport function headingRule(nodeType, maxLevel) {\n  return textblockTypeInputRule(new RegExp(\"^(#{1,\" + maxLevel + \"})\\\\s$\"),\n                                nodeType, match => ({level: match[1].length}))\n}\n\n// : (Schema) → Plugin\n// A set of input rules for creating the basic block quotes, lists,\n// code blocks, and heading.\nexport function buildInputRules(schema) {\n  let rules = smartQuotes.concat(ellipsis, emDash), type\n  if (type = schema.nodes.blockquote) rules.push(blockQuoteRule(type))\n  if (type = schema.nodes.ordered_list) rules.push(orderedListRule(type))\n  if (type = schema.nodes.bullet_list) rules.push(bulletListRule(type))\n  if (type = schema.nodes.code_block) rules.push(codeBlockRule(type))\n  if (type = schema.nodes.heading) rules.push(headingRule(type, 6))\n  return inputRules({rules})\n}\n","import {keymap} from \"prosemirror-keymap\"\nimport {history} from \"prosemirror-history\"\nimport {baseKeymap} from \"prosemirror-commands\"\nimport {Plugin} from \"prosemirror-state\"\nimport {dropCursor} from \"prosemirror-dropcursor\"\nimport {gapCursor} from \"prosemirror-gapcursor\"\nimport {menuBar} from \"prosemirror-menu\"\n\nimport {buildMenuItems} from \"./menu\"\nimport {buildKeymap} from \"./keymap\"\nimport {buildInputRules} from \"./inputrules\"\n\nexport {buildMenuItems, buildKeymap, buildInputRules}\n\n// !! This module exports helper functions for deriving a set of basic\n// menu items, input rules, or key bindings from a schema. These\n// values need to know about the schema for two reasons—they need\n// access to specific instances of node and mark types, and they need\n// to know which of the node and mark types that they know about are\n// actually present in the schema.\n//\n// The `exampleSetup` plugin ties these together into a plugin that\n// will automatically enable this basic functionality in an editor.\n\n// :: (Object) → [Plugin]\n// A convenience plugin that bundles together a simple menu with basic\n// key bindings, input rules, and styling for the example schema.\n// Probably only useful for quickly setting up a passable\n// editor—you'll need more control over your settings in most\n// real-world situations.\n//\n//   options::- The following options are recognized:\n//\n//     schema:: Schema\n//     The schema to generate key bindings and menu items for.\n//\n//     mapKeys:: ?Object\n//     Can be used to [adjust](#example-setup.buildKeymap) the key bindings created.\n//\n//     menuBar:: ?bool\n//     Set to false to disable the menu bar.\n//\n//     history:: ?bool\n//     Set to false to disable the history plugin.\n//\n//     floatingMenu:: ?bool\n//     Set to false to make the menu bar non-floating.\n//\n//     menuContent:: [[MenuItem]]\n//     Can be used to override the menu content.\nexport function exampleSetup(options) {\n  let plugins = [\n    buildInputRules(options.schema),\n    keymap(buildKeymap(options.schema, options.mapKeys)),\n    keymap(baseKeymap),\n    dropCursor(),\n    gapCursor()\n  ]\n  if (options.menuBar !== false)\n    plugins.push(menuBar({floating: options.floatingMenu !== false,\n                          content: options.menuContent || buildMenuItems(options.schema).fullMenu}))\n  if (options.history !== false)\n    plugins.push(history())\n\n  return plugins.concat(new Plugin({\n    props: {\n      attributes: {class: \"ProseMirror-example-setup-style\"}\n    }\n  }))\n}\n","import {Selection, NodeSelection} from \"prosemirror-state\"\nimport {Slice} from \"prosemirror-model\"\n\n// ::- Gap cursor selections are represented using this class. Its\n// `$anchor` and `$head` properties both point at the cursor position.\nexport class GapCursor extends Selection {\n  // : (ResolvedPos)\n  constructor($pos) {\n    super($pos, $pos)\n  }\n\n  map(doc, mapping) {\n    let $pos = doc.resolve(mapping.map(this.head))\n    return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos)\n  }\n\n  content() { return Slice.empty }\n\n  eq(other) {\n    return other instanceof GapCursor && other.head == this.head\n  }\n\n  toJSON() {\n    return {type: \"gapcursor\", pos: this.head}\n  }\n\n  static fromJSON(doc, json) {\n    if (typeof json.pos != \"number\") throw new RangeError(\"Invalid input for GapCursor.fromJSON\")\n    return new GapCursor(doc.resolve(json.pos))\n  }\n\n  getBookmark() { return new GapBookmark(this.anchor) }\n\n  static valid($pos) {\n    let parent = $pos.parent\n    if (parent.isTextblock || !closedBefore($pos) || !closedAfter($pos)) return false\n    let override = parent.type.spec.allowGapCursor\n    if (override != null) return override\n    let deflt = parent.contentMatchAt($pos.index()).defaultType\n    return deflt && deflt.isTextblock\n  }\n\n  static findFrom($pos, dir, mustMove) {\n    search: for (;;) {\n      if (!mustMove && GapCursor.valid($pos)) return $pos\n      let pos = $pos.pos, next = null\n      // Scan up from this position\n      for (let d = $pos.depth;; d--) {\n        let parent = $pos.node(d)\n        if (dir > 0 ? $pos.indexAfter(d) < parent.childCount : $pos.index(d) > 0) {\n          next = parent.child(dir > 0 ? $pos.indexAfter(d) : $pos.index(d) - 1)\n          break\n        } else if (d == 0) {\n          return null\n        }\n        pos += dir\n        let $cur = $pos.doc.resolve(pos)\n        if (GapCursor.valid($cur)) return $cur\n      }\n\n      // And then down into the next node\n      for (;;) {\n        let inside = dir > 0 ? next.firstChild : next.lastChild\n        if (!inside) {\n          if (next.isAtom && !next.isText && !NodeSelection.isSelectable(next)) {\n            $pos = $pos.doc.resolve(pos + next.nodeSize * dir)\n            mustMove = false\n            continue search\n          }\n          break\n        }\n        next = inside\n        pos += dir\n        let $cur = $pos.doc.resolve(pos)\n        if (GapCursor.valid($cur)) return $cur\n      }\n\n      return null\n    }\n  }\n}\n\nGapCursor.prototype.visible = false\n\nSelection.jsonID(\"gapcursor\", GapCursor)\n\nclass GapBookmark {\n  constructor(pos) {\n    this.pos = pos\n  }\n  map(mapping) {\n    return new GapBookmark(mapping.map(this.pos))\n  }\n  resolve(doc) {\n    let $pos = doc.resolve(this.pos)\n    return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos)\n  }\n}\n\nfunction closedBefore($pos) {\n  for (let d = $pos.depth; d >= 0; d--) {\n    let index = $pos.index(d)\n    // At the start of this parent, look at next one\n    if (index == 0) continue\n    // See if the node before (or its first ancestor) is closed\n    for (let before = $pos.node(d).child(index - 1);; before = before.lastChild) {\n      if ((before.childCount == 0 && !before.inlineContent) || before.isAtom || before.type.spec.isolating) return true\n      if (before.inlineContent) return false\n    }\n  }\n  // Hit start of document\n  return true\n}\n\nfunction closedAfter($pos) {\n  for (let d = $pos.depth; d >= 0; d--) {\n    let index = $pos.indexAfter(d), parent = $pos.node(d)\n    if (index == parent.childCount) continue\n    for (let after = parent.child(index);; after = after.firstChild) {\n      if ((after.childCount == 0 && !after.inlineContent) || after.isAtom || after.type.spec.isolating) return true\n      if (after.inlineContent) return false\n    }\n  }\n  return true\n}\n","import {keydownHandler} from \"prosemirror-keymap\"\nimport {TextSelection, NodeSelection, Plugin} from \"prosemirror-state\"\nimport {Decoration, DecorationSet} from \"prosemirror-view\"\n\nimport {GapCursor} from \"./gapcursor\"\n\n// :: () → Plugin\n// Create a gap cursor plugin. When enabled, this will capture clicks\n// near and arrow-key-motion past places that don't have a normally\n// selectable position nearby, and create a gap cursor selection for\n// them. The cursor is drawn as an element with class\n// `ProseMirror-gapcursor`. You can either include\n// `style/gapcursor.css` from the package's directory or add your own\n// styles to make it visible.\nexport const gapCursor = function() {\n  return new Plugin({\n    props: {\n      decorations: drawGapCursor,\n\n      createSelectionBetween(_view, $anchor, $head) {\n        if ($anchor.pos == $head.pos && GapCursor.valid($head)) return new GapCursor($head)\n      },\n\n      handleClick,\n      handleKeyDown\n    }\n  })\n}\n\nexport {GapCursor}\n\nconst handleKeyDown = keydownHandler({\n  \"ArrowLeft\": arrow(\"horiz\", -1),\n  \"ArrowRight\": arrow(\"horiz\", 1),\n  \"ArrowUp\": arrow(\"vert\", -1),\n  \"ArrowDown\": arrow(\"vert\", 1)\n})\n\nfunction arrow(axis, dir) {\n  let dirStr = axis == \"vert\" ? (dir > 0 ? \"down\" : \"up\") : (dir > 0 ? \"right\" : \"left\")\n  return function(state, dispatch, view) {\n    let sel = state.selection\n    let $start = dir > 0 ? sel.$to : sel.$from, mustMove = sel.empty\n    if (sel instanceof TextSelection) {\n      if (!view.endOfTextblock(dirStr) || $start.depth == 0) return false\n      mustMove = false\n      $start = state.doc.resolve(dir > 0 ? $start.after() : $start.before())\n    }\n    let $found = GapCursor.findFrom($start, dir, mustMove)\n    if (!$found) return false\n    if (dispatch) dispatch(state.tr.setSelection(new GapCursor($found)))\n    return true\n  }\n}\n\nfunction handleClick(view, pos, event) {\n  if (!view.editable) return false\n  let $pos = view.state.doc.resolve(pos)\n  if (!GapCursor.valid($pos)) return false\n  let {inside} = view.posAtCoords({left: event.clientX, top: event.clientY})\n  if (inside > -1 && NodeSelection.isSelectable(view.state.doc.nodeAt(inside))) return false\n  view.dispatch(view.state.tr.setSelection(new GapCursor($pos)))\n  return true\n}\n\nfunction drawGapCursor(state) {\n  if (!(state.selection instanceof GapCursor)) return null\n  let node = document.createElement(\"div\")\n  node.className = \"ProseMirror-gapcursor\"\n  return DecorationSet.create(state.doc, [Decoration.widget(state.selection.head, node, {key: \"gapcursor\"})])\n}\n","import RopeSequence from \"rope-sequence\"\nimport {Mapping} from \"prosemirror-transform\"\nimport {Plugin, PluginKey} from \"prosemirror-state\"\n\n// ProseMirror's history isn't simply a way to roll back to a previous\n// state, because ProseMirror supports applying changes without adding\n// them to the history (for example during collaboration).\n//\n// To this end, each 'Branch' (one for the undo history and one for\n// the redo history) keeps an array of 'Items', which can optionally\n// hold a step (an actual undoable change), and always hold a position\n// map (which is needed to move changes below them to apply to the\n// current document).\n//\n// An item that has both a step and a selection bookmark is the start\n// of an 'event' — a group of changes that will be undone or redone at\n// once. (It stores only the bookmark, since that way we don't have to\n// provide a document until the selection is actually applied, which\n// is useful when compressing.)\n\n// Used to schedule history compression\nconst max_empty_items = 500\n\nclass Branch {\n  constructor(items, eventCount) {\n    this.items = items\n    this.eventCount = eventCount\n  }\n\n  // : (EditorState, bool) → ?{transform: Transform, selection: ?SelectionBookmark, remaining: Branch}\n  // Pop the latest event off the branch's history and apply it\n  // to a document transform.\n  popEvent(state, preserveItems) {\n    if (this.eventCount == 0) return null\n\n    let end = this.items.length\n    for (;; end--) {\n      let next = this.items.get(end - 1)\n      if (next.selection) { --end; break }\n    }\n\n    let remap, mapFrom\n    if (preserveItems) {\n      remap = this.remapping(end, this.items.length)\n      mapFrom = remap.maps.length\n    }\n    let transform = state.tr\n    let selection, remaining\n    let addAfter = [], addBefore = []\n\n    this.items.forEach((item, i) => {\n      if (!item.step) {\n        if (!remap) {\n          remap = this.remapping(end, i + 1)\n          mapFrom = remap.maps.length\n        }\n        mapFrom--\n        addBefore.push(item)\n        return\n      }\n\n      if (remap) {\n        addBefore.push(new Item(item.map))\n        let step = item.step.map(remap.slice(mapFrom)), map\n\n        if (step && transform.maybeStep(step).doc) {\n          map = transform.mapping.maps[transform.mapping.maps.length - 1]\n          addAfter.push(new Item(map, null, null, addAfter.length + addBefore.length))\n        }\n        mapFrom--\n        if (map) remap.appendMap(map, mapFrom)\n      } else {\n        transform.maybeStep(item.step)\n      }\n\n      if (item.selection) {\n        selection = remap ? item.selection.map(remap.slice(mapFrom)) : item.selection\n        remaining = new Branch(this.items.slice(0, end).append(addBefore.reverse().concat(addAfter)), this.eventCount - 1)\n        return false\n      }\n    }, this.items.length, 0)\n\n    return {remaining, transform, selection}\n  }\n\n  // : (Transform, ?SelectionBookmark, Object) → Branch\n  // Create a new branch with the given transform added.\n  addTransform(transform, selection, histOptions, preserveItems) {\n    let newItems = [], eventCount = this.eventCount\n    let oldItems = this.items, lastItem = !preserveItems && oldItems.length ? oldItems.get(oldItems.length - 1) : null\n\n    for (let i = 0; i < transform.steps.length; i++) {\n      let step = transform.steps[i].invert(transform.docs[i])\n      let item = new Item(transform.mapping.maps[i], step, selection), merged\n      if (merged = lastItem && lastItem.merge(item)) {\n        item = merged\n        if (i) newItems.pop()\n        else oldItems = oldItems.slice(0, oldItems.length - 1)\n      }\n      newItems.push(item)\n      if (selection) {\n        eventCount++\n        selection = null\n      }\n      if (!preserveItems) lastItem = item\n    }\n    let overflow = eventCount - histOptions.depth\n    if (overflow > DEPTH_OVERFLOW) {\n      oldItems = cutOffEvents(oldItems, overflow)\n      eventCount -= overflow\n    }\n    return new Branch(oldItems.append(newItems), eventCount)\n  }\n\n  remapping(from, to) {\n    let maps = new Mapping\n    this.items.forEach((item, i) => {\n      let mirrorPos = item.mirrorOffset != null && i - item.mirrorOffset >= from\n          ? maps.maps.length - item.mirrorOffset : null\n      maps.appendMap(item.map, mirrorPos)\n    }, from, to)\n    return maps\n  }\n\n  addMaps(array) {\n    if (this.eventCount == 0) return this\n    return new Branch(this.items.append(array.map(map => new Item(map))), this.eventCount)\n  }\n\n  // : (Transform, number)\n  // When the collab module receives remote changes, the history has\n  // to know about those, so that it can adjust the steps that were\n  // rebased on top of the remote changes, and include the position\n  // maps for the remote changes in its array of items.\n  rebased(rebasedTransform, rebasedCount) {\n    if (!this.eventCount) return this\n\n    let rebasedItems = [], start = Math.max(0, this.items.length - rebasedCount)\n\n    let mapping = rebasedTransform.mapping\n    let newUntil = rebasedTransform.steps.length\n    let eventCount = this.eventCount\n    this.items.forEach(item => { if (item.selection) eventCount-- }, start)\n\n    let iRebased = rebasedCount\n    this.items.forEach(item => {\n      let pos = mapping.getMirror(--iRebased)\n      if (pos == null) return\n      newUntil = Math.min(newUntil, pos)\n      let map = mapping.maps[pos]\n      if (item.step) {\n        let step = rebasedTransform.steps[pos].invert(rebasedTransform.docs[pos])\n        let selection = item.selection && item.selection.map(mapping.slice(iRebased + 1, pos))\n        if (selection) eventCount++\n        rebasedItems.push(new Item(map, step, selection))\n      } else {\n        rebasedItems.push(new Item(map))\n      }\n    }, start)\n\n    let newMaps = []\n    for (let i = rebasedCount; i < newUntil; i++)\n      newMaps.push(new Item(mapping.maps[i]))\n    let items = this.items.slice(0, start).append(newMaps).append(rebasedItems)\n    let branch = new Branch(items, eventCount)\n\n    if (branch.emptyItemCount() > max_empty_items)\n      branch = branch.compress(this.items.length - rebasedItems.length)\n    return branch\n  }\n\n  emptyItemCount() {\n    let count = 0\n    this.items.forEach(item => { if (!item.step) count++ })\n    return count\n  }\n\n  // Compressing a branch means rewriting it to push the air (map-only\n  // items) out. During collaboration, these naturally accumulate\n  // because each remote change adds one. The `upto` argument is used\n  // to ensure that only the items below a given level are compressed,\n  // because `rebased` relies on a clean, untouched set of items in\n  // order to associate old items with rebased steps.\n  compress(upto = this.items.length) {\n    let remap = this.remapping(0, upto), mapFrom = remap.maps.length\n    let items = [], events = 0\n    this.items.forEach((item, i) => {\n      if (i >= upto) {\n        items.push(item)\n        if (item.selection) events++\n      } else if (item.step) {\n        let step = item.step.map(remap.slice(mapFrom)), map = step && step.getMap()\n        mapFrom--\n        if (map) remap.appendMap(map, mapFrom)\n        if (step) {\n          let selection = item.selection && item.selection.map(remap.slice(mapFrom))\n          if (selection) events++\n          let newItem = new Item(map.invert(), step, selection), merged, last = items.length - 1\n          if (merged = items.length && items[last].merge(newItem))\n            items[last] = merged\n          else\n            items.push(newItem)\n        }\n      } else if (item.map) {\n        mapFrom--\n      }\n    }, this.items.length, 0)\n    return new Branch(RopeSequence.from(items.reverse()), events)\n  }\n}\n\nBranch.empty = new Branch(RopeSequence.empty, 0)\n\nfunction cutOffEvents(items, n) {\n  let cutPoint\n  items.forEach((item, i) => {\n    if (item.selection && (n-- == 0)) {\n      cutPoint = i\n      return false\n    }\n  })\n  return items.slice(cutPoint)\n}\n\nclass Item {\n  constructor(map, step, selection, mirrorOffset) {\n    // The (forward) step map for this item.\n    this.map = map\n    // The inverted step\n    this.step = step\n    // If this is non-null, this item is the start of a group, and\n    // this selection is the starting selection for the group (the one\n    // that was active before the first step was applied)\n    this.selection = selection\n    // If this item is the inverse of a previous mapping on the stack,\n    // this points at the inverse's offset\n    this.mirrorOffset = mirrorOffset\n  }\n\n  merge(other) {\n    if (this.step && other.step && !other.selection) {\n      let step = other.step.merge(this.step)\n      if (step) return new Item(step.getMap().invert(), step, this.selection)\n    }\n  }\n}\n\n// The value of the state field that tracks undo/redo history for that\n// state. Will be stored in the plugin state when the history plugin\n// is active.\nexport class HistoryState {\n  constructor(done, undone, prevRanges, prevTime) {\n    this.done = done\n    this.undone = undone\n    this.prevRanges = prevRanges\n    this.prevTime = prevTime\n  }\n}\n\nconst DEPTH_OVERFLOW = 20\n\n// : (HistoryState, EditorState, Transaction, Object)\n// Record a transformation in undo history.\nfunction applyTransaction(history, state, tr, options) {\n  let historyTr = tr.getMeta(historyKey), rebased\n  if (historyTr) return historyTr.historyState\n\n  if (tr.getMeta(closeHistoryKey)) history = new HistoryState(history.done, history.undone, null, 0)\n\n  let appended = tr.getMeta(\"appendedTransaction\")\n\n  if (tr.steps.length == 0) {\n    return history\n  } else if (appended && appended.getMeta(historyKey)) {\n    if (appended.getMeta(historyKey).redo)\n      return new HistoryState(history.done.addTransform(tr, null, options, mustPreserveItems(state)),\n                              history.undone, rangesFor(tr.mapping.maps[tr.steps.length - 1]), history.prevTime)\n    else\n      return new HistoryState(history.done, history.undone.addTransform(tr, null, options, mustPreserveItems(state)),\n                              null, history.prevTime)\n  } else if (tr.getMeta(\"addToHistory\") !== false && !(appended && appended.getMeta(\"addToHistory\") === false)) {\n    // Group transforms that occur in quick succession into one event.\n    let newGroup = history.prevTime == 0 || !appended && (history.prevTime < (tr.time || 0) - options.newGroupDelay ||\n                                                          !isAdjacentTo(tr, history.prevRanges))\n    let prevRanges = appended ? mapRanges(history.prevRanges, tr.mapping) : rangesFor(tr.mapping.maps[tr.steps.length - 1])\n    return new HistoryState(history.done.addTransform(tr, newGroup ? state.selection.getBookmark() : null,\n                                                      options, mustPreserveItems(state)),\n                            Branch.empty, prevRanges, tr.time)\n  } else if (rebased = tr.getMeta(\"rebased\")) {\n    // Used by the collab module to tell the history that some of its\n    // content has been rebased.\n    return new HistoryState(history.done.rebased(tr, rebased),\n                            history.undone.rebased(tr, rebased),\n                            mapRanges(history.prevRanges, tr.mapping), history.prevTime)\n  } else {\n    return new HistoryState(history.done.addMaps(tr.mapping.maps),\n                            history.undone.addMaps(tr.mapping.maps),\n                            mapRanges(history.prevRanges, tr.mapping), history.prevTime)\n  }\n}\n\nfunction isAdjacentTo(transform, prevRanges) {\n  if (!prevRanges) return false\n  if (!transform.docChanged) return true\n  let adjacent = false\n  transform.mapping.maps[0].forEach((start, end) => {\n    for (let i = 0; i < prevRanges.length; i += 2)\n      if (start <= prevRanges[i + 1] && end >= prevRanges[i])\n        adjacent = true\n  })\n  return adjacent\n}\n\nfunction rangesFor(map) {\n  let result = []\n  map.forEach((_from, _to, from, to) => result.push(from, to))\n  return result\n}\n\nfunction mapRanges(ranges, mapping) {\n  if (!ranges) return null\n  let result = []\n  for (let i = 0; i < ranges.length; i += 2) {\n    let from = mapping.map(ranges[i], 1), to = mapping.map(ranges[i + 1], -1)\n    if (from <= to) result.push(from, to)\n  }\n  return result\n}\n\n// : (HistoryState, EditorState, (tr: Transaction), bool)\n// Apply the latest event from one branch to the document and shift the event\n// onto the other branch.\nfunction histTransaction(history, state, dispatch, redo) {\n  let preserveItems = mustPreserveItems(state), histOptions = historyKey.get(state).spec.config\n  let pop = (redo ? history.undone : history.done).popEvent(state, preserveItems)\n  if (!pop) return\n\n  let selection = pop.selection.resolve(pop.transform.doc)\n  let added = (redo ? history.done : history.undone).addTransform(pop.transform, state.selection.getBookmark(),\n                                                                  histOptions, preserveItems)\n\n  let newHist = new HistoryState(redo ? added : pop.remaining, redo ? pop.remaining : added, null, 0)\n  dispatch(pop.transform.setSelection(selection).setMeta(historyKey, {redo, historyState: newHist}).scrollIntoView())\n}\n\nlet cachedPreserveItems = false, cachedPreserveItemsPlugins = null\n// Check whether any plugin in the given state has a\n// `historyPreserveItems` property in its spec, in which case we must\n// preserve steps exactly as they came in, so that they can be\n// rebased.\nfunction mustPreserveItems(state) {\n  let plugins = state.plugins\n  if (cachedPreserveItemsPlugins != plugins) {\n    cachedPreserveItems = false\n    cachedPreserveItemsPlugins = plugins\n    for (let i = 0; i < plugins.length; i++) if (plugins[i].spec.historyPreserveItems) {\n      cachedPreserveItems = true\n      break\n    }\n  }\n  return cachedPreserveItems\n}\n\n// :: (Transaction) → Transaction\n// Set a flag on the given transaction that will prevent further steps\n// from being appended to an existing history event (so that they\n// require a separate undo command to undo).\nexport function closeHistory(tr) {\n  return tr.setMeta(closeHistoryKey, true)\n}\n\nconst historyKey = new PluginKey(\"history\")\nconst closeHistoryKey = new PluginKey(\"closeHistory\")\n\n// :: (?Object) → Plugin\n// Returns a plugin that enables the undo history for an editor. The\n// plugin will track undo and redo stacks, which can be used with the\n// [`undo`](#history.undo) and [`redo`](#history.redo) commands.\n//\n// You can set an `\"addToHistory\"` [metadata\n// property](#state.Transaction.setMeta) of `false` on a transaction\n// to prevent it from being rolled back by undo.\n//\n//   config::-\n//   Supports the following configuration options:\n//\n//     depth:: ?number\n//     The amount of history events that are collected before the\n//     oldest events are discarded. Defaults to 100.\n//\n//     newGroupDelay:: ?number\n//     The delay between changes after which a new group should be\n//     started. Defaults to 500 (milliseconds). Note that when changes\n//     aren't adjacent, a new group is always started.\nexport function history(config) {\n  config = {depth: config && config.depth || 100,\n            newGroupDelay: config && config.newGroupDelay || 500}\n  return new Plugin({\n    key: historyKey,\n\n    state: {\n      init() {\n        return new HistoryState(Branch.empty, Branch.empty, null, 0)\n      },\n      apply(tr, hist, state) {\n        return applyTransaction(hist, state, tr, config)\n      }\n    },\n\n    config\n  })\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// A command function that undoes the last change, if any.\nexport function undo(state, dispatch) {\n  let hist = historyKey.getState(state)\n  if (!hist || hist.done.eventCount == 0) return false\n  if (dispatch) histTransaction(hist, state, dispatch, false)\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// A command function that redoes the last undone change, if any.\nexport function redo(state, dispatch) {\n  let hist = historyKey.getState(state)\n  if (!hist || hist.undone.eventCount == 0) return false\n  if (dispatch) histTransaction(hist, state, dispatch, true)\n  return true\n}\n\n// :: (EditorState) → number\n// The amount of undoable events available in a given state.\nexport function undoDepth(state) {\n  let hist = historyKey.getState(state)\n  return hist ? hist.done.eventCount : 0\n}\n\n// :: (EditorState) → number\n// The amount of redoable events available in a given editor state.\nexport function redoDepth(state) {\n  let hist = historyKey.getState(state)\n  return hist ? hist.undone.eventCount : 0\n}\n","import {Plugin} from \"prosemirror-state\"\n\n// ::- Input rules are regular expressions describing a piece of text\n// that, when typed, causes something to happen. This might be\n// changing two dashes into an emdash, wrapping a paragraph starting\n// with `\"> \"` into a blockquote, or something entirely different.\nexport class InputRule {\n  // :: (RegExp, union<string, (state: EditorState, match: [string], start: number, end: number) → ?Transaction>)\n  // Create an input rule. The rule applies when the user typed\n  // something and the text directly in front of the cursor matches\n  // `match`, which should end with `$`.\n  //\n  // The `handler` can be a string, in which case the matched text, or\n  // the first matched group in the regexp, is replaced by that\n  // string.\n  //\n  // Or a it can be a function, which will be called with the match\n  // array produced by\n  // [`RegExp.exec`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec),\n  // as well as the start and end of the matched range, and which can\n  // return a [transaction](#state.Transaction) that describes the\n  // rule's effect, or null to indicate the input was not handled.\n  constructor(match, handler) {\n    this.match = match\n    this.handler = typeof handler == \"string\" ? stringHandler(handler) : handler\n  }\n}\n\nfunction stringHandler(string) {\n  return function(state, match, start, end) {\n    let insert = string\n    if (match[1]) {\n      let offset = match[0].lastIndexOf(match[1])\n      insert += match[0].slice(offset + match[1].length)\n      start += offset\n      let cutOff = start - end\n      if (cutOff > 0) {\n        insert = match[0].slice(offset - cutOff, offset) + insert\n        start = end\n      }\n    }\n    return state.tr.insertText(insert, start, end)\n  }\n}\n\nconst MAX_MATCH = 500\n\n// :: (config: {rules: [InputRule]}) → Plugin\n// Create an input rules plugin. When enabled, it will cause text\n// input that matches any of the given rules to trigger the rule's\n// action.\nexport function inputRules({rules}) {\n  let plugin = new Plugin({\n    state: {\n      init() { return null },\n      apply(tr, prev) {\n        let stored = tr.getMeta(this)\n        if (stored) return stored\n        return tr.selectionSet || tr.docChanged ? null : prev\n      }\n    },\n\n    props: {\n      handleTextInput(view, from, to, text) {\n        return run(view, from, to, text, rules, plugin)\n      },\n      handleDOMEvents: {\n        compositionend: (view) => {\n          setTimeout(() => {\n            let {$cursor} = view.state.selection\n            if ($cursor) run(view, $cursor.pos, $cursor.pos, \"\", rules, plugin)\n          })\n        }\n      }\n    },\n\n    isInputRules: true\n  })\n  return plugin\n}\n\nfunction run(view, from, to, text, rules, plugin) {\n  if (view.composing) return false\n  let state = view.state, $from = state.doc.resolve(from)\n  if ($from.parent.type.spec.code) return false\n  let textBefore = $from.parent.textBetween(Math.max(0, $from.parentOffset - MAX_MATCH), $from.parentOffset,\n                                            null, \"\\ufffc\") + text\n  for (let i = 0; i < rules.length; i++) {\n    let match = rules[i].match.exec(textBefore)\n    let tr = match && rules[i].handler(state, match, from - (match[0].length - text.length), to)\n    if (!tr) continue\n    view.dispatch(tr.setMeta(plugin, {transform: tr, from, to, text}))\n    return true\n  }\n  return false\n}\n\n// :: (EditorState, ?(Transaction)) → bool\n// This is a command that will undo an input rule, if applying such a\n// rule was the last thing that the user did.\nexport function undoInputRule(state, dispatch) {\n  let plugins = state.plugins\n  for (let i = 0; i < plugins.length; i++) {\n    let plugin = plugins[i], undoable\n    if (plugin.spec.isInputRules && (undoable = plugin.getState(state))) {\n      if (dispatch) {\n        let tr = state.tr, toUndo = undoable.transform\n        for (let j = toUndo.steps.length - 1; j >= 0; j--)\n          tr.step(toUndo.steps[j].invert(toUndo.docs[j]))\n        if (undoable.text) {\n          let marks = tr.doc.resolve(undoable.from).marks()\n          tr.replaceWith(undoable.from, undoable.to, state.schema.text(undoable.text, marks))\n        } else {\n          tr.delete(undoable.from, undoable.to)\n        }\n        dispatch(tr)\n      }\n      return true\n    }\n  }\n  return false\n}\n","import {InputRule} from \"./inputrules\"\n\n// :: InputRule Converts double dashes to an emdash.\nexport const emDash = new InputRule(/--$/, \"—\")\n// :: InputRule Converts three dots to an ellipsis character.\nexport const ellipsis = new InputRule(/\\.\\.\\.$/, \"…\")\n// :: InputRule “Smart” opening double quotes.\nexport const openDoubleQuote = new InputRule(/(?:^|[\\s\\{\\[\\(\\<'\"\\u2018\\u201C])(\")$/, \"“\")\n// :: InputRule “Smart” closing double quotes.\nexport const closeDoubleQuote = new InputRule(/\"$/, \"”\")\n// :: InputRule “Smart” opening single quotes.\nexport const openSingleQuote = new InputRule(/(?:^|[\\s\\{\\[\\(\\<'\"\\u2018\\u201C])(')$/, \"‘\")\n// :: InputRule “Smart” closing single quotes.\nexport const closeSingleQuote = new InputRule(/'$/, \"’\")\n\n// :: [InputRule] Smart-quote related input rules.\nexport const smartQuotes = [openDoubleQuote, closeDoubleQuote, openSingleQuote, closeSingleQuote]\n","import {InputRule} from \"./inputrules\"\nimport {findWrapping, canJoin} from \"prosemirror-transform\"\n\n// :: (RegExp, NodeType, ?union<Object, ([string]) → ?Object>, ?([string], Node) → bool) → InputRule\n// Build an input rule for automatically wrapping a textblock when a\n// given string is typed. The `regexp` argument is\n// directly passed through to the `InputRule` constructor. You'll\n// probably want the regexp to start with `^`, so that the pattern can\n// only occur at the start of a textblock.\n//\n// `nodeType` is the type of node to wrap in. If it needs attributes,\n// you can either pass them directly, or pass a function that will\n// compute them from the regular expression match.\n//\n// By default, if there's a node with the same type above the newly\n// wrapped node, the rule will try to [join](#transform.Transform.join) those\n// two nodes. You can pass a join predicate, which takes a regular\n// expression match and the node before the wrapped node, and can\n// return a boolean to indicate whether a join should happen.\nexport function wrappingInputRule(regexp, nodeType, getAttrs, joinPredicate) {\n  return new InputRule(regexp, (state, match, start, end) => {\n    let attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs\n    let tr = state.tr.delete(start, end)\n    let $start = tr.doc.resolve(start), range = $start.blockRange(), wrapping = range && findWrapping(range, nodeType, attrs)\n    if (!wrapping) return null\n    tr.wrap(range, wrapping)\n    let before = tr.doc.resolve(start - 1).nodeBefore\n    if (before && before.type == nodeType && canJoin(tr.doc, start - 1) &&\n        (!joinPredicate || joinPredicate(match, before)))\n      tr.join(start - 1)\n    return tr\n  })\n}\n\n// :: (RegExp, NodeType, ?union<Object, ([string]) → ?Object>) → InputRule\n// Build an input rule that changes the type of a textblock when the\n// matched text is typed into it. You'll usually want to start your\n// regexp with `^` to that it is only matched at the start of a\n// textblock. The optional `getAttrs` parameter can be used to compute\n// the new node's attributes, and works the same as in the\n// `wrappingInputRule` function.\nexport function textblockTypeInputRule(regexp, nodeType, getAttrs) {\n  return new InputRule(regexp, (state, match, start, end) => {\n    let $start = state.doc.resolve(start)\n    let attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs\n    if (!$start.node(-1).canReplaceWith($start.index(-1), $start.indexAfter(-1), nodeType)) return null\n    return state.tr\n      .delete(start, end)\n      .setBlockType(start, start, nodeType, attrs)\n  })\n}\n","import {base, keyName} from \"w3c-keyname\"\nimport {Plugin} from \"prosemirror-state\"\n\n// declare global: navigator\n\nconst mac = typeof navigator != \"undefined\" ? /Mac/.test(navigator.platform) : false\n\nfunction normalizeKeyName(name) {\n  let parts = name.split(/-(?!$)/), result = parts[parts.length - 1]\n  if (result == \"Space\") result = \" \"\n  let alt, ctrl, shift, meta\n  for (let i = 0; i < parts.length - 1; i++) {\n    let mod = parts[i]\n    if (/^(cmd|meta|m)$/i.test(mod)) meta = true\n    else if (/^a(lt)?$/i.test(mod)) alt = true\n    else if (/^(c|ctrl|control)$/i.test(mod)) ctrl = true\n    else if (/^s(hift)?$/i.test(mod)) shift = true\n    else if (/^mod$/i.test(mod)) { if (mac) meta = true; else ctrl = true }\n    else throw new Error(\"Unrecognized modifier name: \" + mod)\n  }\n  if (alt) result = \"Alt-\" + result\n  if (ctrl) result = \"Ctrl-\" + result\n  if (meta) result = \"Meta-\" + result\n  if (shift) result = \"Shift-\" + result\n  return result\n}\n\nfunction normalize(map) {\n  let copy = Object.create(null)\n  for (let prop in map) copy[normalizeKeyName(prop)] = map[prop]\n  return copy\n}\n\nfunction modifiers(name, event, shift) {\n  if (event.altKey) name = \"Alt-\" + name\n  if (event.ctrlKey) name = \"Ctrl-\" + name\n  if (event.metaKey) name = \"Meta-\" + name\n  if (shift !== false && event.shiftKey) name = \"Shift-\" + name\n  return name\n}\n\n// :: (Object) → Plugin\n// Create a keymap plugin for the given set of bindings.\n//\n// Bindings should map key names to [command](#commands)-style\n// functions, which will be called with `(EditorState, dispatch,\n// EditorView)` arguments, and should return true when they've handled\n// the key. Note that the view argument isn't part of the command\n// protocol, but can be used as an escape hatch if a binding needs to\n// directly interact with the UI.\n//\n// Key names may be strings like `\"Shift-Ctrl-Enter\"`—a key\n// identifier prefixed with zero or more modifiers. Key identifiers\n// are based on the strings that can appear in\n// [`KeyEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).\n// Use lowercase letters to refer to letter keys (or uppercase letters\n// if you want shift to be held). You may use `\"Space\"` as an alias\n// for the `\" \"` name.\n//\n// Modifiers can be given in any order. `Shift-` (or `s-`), `Alt-` (or\n// `a-`), `Ctrl-` (or `c-` or `Control-`) and `Cmd-` (or `m-` or\n// `Meta-`) are recognized. For characters that are created by holding\n// shift, the `Shift-` prefix is implied, and should not be added\n// explicitly.\n//\n// You can use `Mod-` as a shorthand for `Cmd-` on Mac and `Ctrl-` on\n// other platforms.\n//\n// You can add multiple keymap plugins to an editor. The order in\n// which they appear determines their precedence (the ones early in\n// the array get to dispatch first).\nexport function keymap(bindings) {\n  return new Plugin({props: {handleKeyDown: keydownHandler(bindings)}})\n}\n\n// :: (Object) → (view: EditorView, event: dom.Event) → bool\n// Given a set of bindings (using the same format as\n// [`keymap`](#keymap.keymap), return a [keydown\n// handler](#view.EditorProps.handleKeyDown) that handles them.\nexport function keydownHandler(bindings) {\n  let map = normalize(bindings)\n  return function(view, event) {\n    let name = keyName(event), isChar = name.length == 1 && name != \" \", baseName\n    let direct = map[modifiers(name, event, !isChar)]\n    if (direct && direct(view.state, view.dispatch, view)) return true\n    if (isChar && (event.shiftKey || event.altKey || event.metaKey || name.charCodeAt(0) > 127) &&\n        (baseName = base[event.keyCode]) && baseName != name) {\n      // Try falling back to the keyCode when there's a modifier\n      // active or the character produced isn't ASCII, and our table\n      // produces a different name from the the keyCode. See #668,\n      // #1060\n      let fromCode = map[modifiers(baseName, event, true)]\n      if (fromCode && fromCode(view.state, view.dispatch, view)) return true\n    } else if (isChar && event.shiftKey) {\n      // Otherwise, if shift is active, also try the binding with the\n      // Shift- prefix enabled. See #997\n      let withShift = map[modifiers(name, event, true)]\n      if (withShift && withShift(view.state, view.dispatch, view)) return true\n    }\n    return false\n  }\n}\n","const SVG = \"http://www.w3.org/2000/svg\"\nconst XLINK = \"http://www.w3.org/1999/xlink\"\n\nconst prefix = \"ProseMirror-icon\"\n\nfunction hashPath(path) {\n  let hash = 0\n  for (let i = 0; i < path.length; i++)\n    hash = (((hash << 5) - hash) + path.charCodeAt(i)) | 0\n  return hash\n}\n\nexport function getIcon(icon) {\n  let node = document.createElement(\"div\")\n  node.className = prefix\n  if (icon.path) {\n    let name = \"pm-icon-\" + hashPath(icon.path).toString(16)\n    if (!document.getElementById(name)) buildSVG(name, icon)\n    let svg = node.appendChild(document.createElementNS(SVG, \"svg\"))\n    svg.style.width = (icon.width / icon.height) + \"em\"\n    let use = svg.appendChild(document.createElementNS(SVG, \"use\"))\n    use.setAttributeNS(XLINK, \"href\", /([^#]*)/.exec(document.location)[1] + \"#\" + name)\n  } else if (icon.dom) {\n    node.appendChild(icon.dom.cloneNode(true))\n  } else {\n    node.appendChild(document.createElement(\"span\")).textContent = icon.text || ''\n    if (icon.css) node.firstChild.style.cssText = icon.css\n  }\n  return node\n}\n\nfunction buildSVG(name, data) {\n  let collection = document.getElementById(prefix + \"-collection\")\n  if (!collection) {\n    collection = document.createElementNS(SVG, \"svg\")\n    collection.id = prefix + \"-collection\"\n    collection.style.display = \"none\"\n    document.body.insertBefore(collection, document.body.firstChild)\n  }\n  let sym = document.createElementNS(SVG, \"symbol\")\n  sym.id = name\n  sym.setAttribute(\"viewBox\", \"0 0 \" + data.width + \" \" + data.height)\n  let path = sym.appendChild(document.createElementNS(SVG, \"path\"))\n  path.setAttribute(\"d\", data.path)\n  collection.appendChild(sym)\n}\n","import crel from \"crelt\"\nimport {lift, joinUp, selectParentNode, wrapIn, setBlockType} from \"prosemirror-commands\"\nimport {undo, redo} from \"prosemirror-history\"\n\nimport {getIcon} from \"./icons\"\n\nconst prefix = \"ProseMirror-menu\"\n\n// ::- An icon or label that, when clicked, executes a command.\nexport class MenuItem {\n  // :: (MenuItemSpec)\n  constructor(spec) {\n    // :: MenuItemSpec\n    // The spec used to create the menu item.\n    this.spec = spec\n  }\n\n  // :: (EditorView) → {dom: dom.Node, update: (EditorState) → bool}\n  // Renders the icon according to its [display\n  // spec](#menu.MenuItemSpec.display), and adds an event handler which\n  // executes the command when the representation is clicked.\n  render(view) {\n    let spec = this.spec\n    let dom = spec.render ? spec.render(view)\n        : spec.icon ? getIcon(spec.icon)\n        : spec.label ? crel(\"div\", null, translate(view, spec.label))\n        : null\n    if (!dom) throw new RangeError(\"MenuItem without icon or label property\")\n    if (spec.title) {\n      const title = (typeof spec.title === \"function\" ? spec.title(view.state) : spec.title)\n      dom.setAttribute(\"title\", translate(view, title))\n    }\n    if (spec.class) dom.classList.add(spec.class)\n    if (spec.css) dom.style.cssText += spec.css\n\n    dom.addEventListener(\"mousedown\", e => {\n      e.preventDefault()\n      if (!dom.classList.contains(prefix + \"-disabled\"))\n        spec.run(view.state, view.dispatch, view, e)\n    })\n\n    function update(state) {\n      if (spec.select) {\n        let selected = spec.select(state)\n        dom.style.display = selected ? \"\" : \"none\"\n        if (!selected) return false\n      }\n      let enabled = true\n      if (spec.enable) {\n        enabled = spec.enable(state) || false\n        setClass(dom, prefix + \"-disabled\", !enabled)\n      }\n      if (spec.active) {\n        let active = enabled && spec.active(state) || false\n        setClass(dom, prefix + \"-active\", active)\n      }\n      return true\n    }\n\n    return {dom, update}\n  }\n}\n\nfunction translate(view, text) {\n  return view._props.translate ? view._props.translate(text) : text\n}\n\n// MenuItemSpec:: interface\n// The configuration object passed to the `MenuItem` constructor.\n//\n//   run:: (EditorState, (Transaction), EditorView, dom.Event)\n//   The function to execute when the menu item is activated.\n//\n//   select:: ?(EditorState) → bool\n//   Optional function that is used to determine whether the item is\n//   appropriate at the moment. Deselected items will be hidden.\n//\n//   enable:: ?(EditorState) → bool\n//   Function that is used to determine if the item is enabled. If\n//   given and returning false, the item will be given a disabled\n//   styling.\n//\n//   active:: ?(EditorState) → bool\n//   A predicate function to determine whether the item is 'active' (for\n//   example, the item for toggling the strong mark might be active then\n//   the cursor is in strong text).\n//\n//   render:: ?(EditorView) → dom.Node\n//   A function that renders the item. You must provide either this,\n//   [`icon`](#menu.MenuItemSpec.icon), or [`label`](#MenuItemSpec.label).\n//\n//   icon:: ?Object\n//   Describes an icon to show for this item. The object may specify\n//   an SVG icon, in which case its `path` property should be an [SVG\n//   path\n//   spec](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d),\n//   and `width` and `height` should provide the viewbox in which that\n//   path exists. Alternatively, it may have a `text` property\n//   specifying a string of text that makes up the icon, with an\n//   optional `css` property giving additional CSS styling for the\n//   text. _Or_ it may contain `dom` property containing a DOM node.\n//\n//   label:: ?string\n//   Makes the item show up as a text label. Mostly useful for items\n//   wrapped in a [drop-down](#menu.Dropdown) or similar menu. The object\n//   should have a `label` property providing the text to display.\n//\n//   title:: ?union<string, (EditorState) → string>\n//   Defines DOM title (mouseover) text for the item.\n//\n//   class:: ?string\n//   Optionally adds a CSS class to the item's DOM representation.\n//\n//   css:: ?string\n//   Optionally adds a string of inline CSS to the item's DOM\n//   representation.\n\nlet lastMenuEvent = {time: 0, node: null}\nfunction markMenuEvent(e) {\n  lastMenuEvent.time = Date.now()\n  lastMenuEvent.node = e.target\n}\nfunction isMenuEvent(wrapper) {\n  return Date.now() - 100 < lastMenuEvent.time &&\n    lastMenuEvent.node && wrapper.contains(lastMenuEvent.node)\n}\n\n// ::- A drop-down menu, displayed as a label with a downwards-pointing\n// triangle to the right of it.\nexport class Dropdown {\n  // :: ([MenuElement], ?Object)\n  // Create a dropdown wrapping the elements. Options may include\n  // the following properties:\n  //\n  // **`label`**`: string`\n  //   : The label to show on the drop-down control.\n  //\n  // **`title`**`: string`\n  //   : Sets the\n  //     [`title`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/title)\n  //     attribute given to the menu control.\n  //\n  // **`class`**`: string`\n  //   : When given, adds an extra CSS class to the menu control.\n  //\n  // **`css`**`: string`\n  //   : When given, adds an extra set of CSS styles to the menu control.\n  constructor(content, options) {\n    this.options = options || {}\n    this.content = Array.isArray(content) ? content : [content]\n  }\n\n  // :: (EditorView) → {dom: dom.Node, update: (EditorState)}\n  // Render the dropdown menu and sub-items.\n  render(view) {\n    let content = renderDropdownItems(this.content, view)\n\n    let label = crel(\"div\", {class: prefix + \"-dropdown \" + (this.options.class || \"\"),\n                             style: this.options.css},\n                     translate(view, this.options.label))\n    if (this.options.title) label.setAttribute(\"title\", translate(view, this.options.title))\n    let wrap = crel(\"div\", {class: prefix + \"-dropdown-wrap\"}, label)\n    let open = null, listeningOnClose = null\n    let close = () => {\n      if (open && open.close()) {\n        open = null\n        window.removeEventListener(\"mousedown\", listeningOnClose)\n      }\n    }\n    label.addEventListener(\"mousedown\", e => {\n      e.preventDefault()\n      markMenuEvent(e)\n      if (open) {\n        close()\n      } else {\n        open = this.expand(wrap, content.dom)\n        window.addEventListener(\"mousedown\", listeningOnClose = () => {\n          if (!isMenuEvent(wrap)) close()\n        })\n      }\n    })\n\n    function update(state) {\n      let inner = content.update(state)\n      wrap.style.display = inner ? \"\" : \"none\"\n      return inner\n    }\n\n    return {dom: wrap, update}\n  }\n\n  expand(dom, items) {\n    let menuDOM = crel(\"div\", {class: prefix + \"-dropdown-menu \" + (this.options.class || \"\")}, items)\n\n    let done = false\n    function close() {\n      if (done) return\n      done = true\n      dom.removeChild(menuDOM)\n      return true\n    }\n    dom.appendChild(menuDOM)\n    return {close, node: menuDOM}\n  }\n}\n\nfunction renderDropdownItems(items, view) {\n  let rendered = [], updates = []\n  for (let i = 0; i < items.length; i++) {\n    let {dom, update} = items[i].render(view)\n    rendered.push(crel(\"div\", {class: prefix + \"-dropdown-item\"}, dom))\n    updates.push(update)\n  }\n  return {dom: rendered, update: combineUpdates(updates, rendered)}\n}\n\nfunction combineUpdates(updates, nodes) {\n  return state => {\n    let something = false\n    for (let i = 0; i < updates.length; i++) {\n      let up = updates[i](state)\n      nodes[i].style.display = up ? \"\" : \"none\"\n      if (up) something = true\n    }\n    return something\n  }\n}\n\n// ::- Represents a submenu wrapping a group of elements that start\n// hidden and expand to the right when hovered over or tapped.\nexport class DropdownSubmenu {\n  // :: ([MenuElement], ?Object)\n  // Creates a submenu for the given group of menu elements. The\n  // following options are recognized:\n  //\n  // **`label`**`: string`\n  //   : The label to show on the submenu.\n  constructor(content, options) {\n    this.options = options || {}\n    this.content = Array.isArray(content) ? content : [content]\n  }\n\n  // :: (EditorView) → {dom: dom.Node, update: (EditorState) → bool}\n  // Renders the submenu.\n  render(view) {\n    let items = renderDropdownItems(this.content, view)\n\n    let label = crel(\"div\", {class: prefix + \"-submenu-label\"}, translate(view, this.options.label))\n    let wrap = crel(\"div\", {class: prefix + \"-submenu-wrap\"}, label,\n                   crel(\"div\", {class: prefix + \"-submenu\"}, items.dom))\n    let listeningOnClose = null\n    label.addEventListener(\"mousedown\", e => {\n      e.preventDefault()\n      markMenuEvent(e)\n      setClass(wrap, prefix + \"-submenu-wrap-active\")\n      if (!listeningOnClose)\n        window.addEventListener(\"mousedown\", listeningOnClose = () => {\n          if (!isMenuEvent(wrap)) {\n            wrap.classList.remove(prefix + \"-submenu-wrap-active\")\n            window.removeEventListener(\"mousedown\", listeningOnClose)\n            listeningOnClose = null\n          }\n        })\n    })\n\n    function update(state) {\n      let inner = items.update(state)\n      wrap.style.display = inner ? \"\" : \"none\"\n      return inner\n    }\n    return {dom: wrap, update}\n  }\n}\n\n// :: (EditorView, [union<MenuElement, [MenuElement]>]) → {dom: ?dom.DocumentFragment, update: (EditorState) → bool}\n// Render the given, possibly nested, array of menu elements into a\n// document fragment, placing separators between them (and ensuring no\n// superfluous separators appear when some of the groups turn out to\n// be empty).\nexport function renderGrouped(view, content) {\n  let result = document.createDocumentFragment()\n  let updates = [], separators = []\n  for (let i = 0; i < content.length; i++) {\n    let items = content[i], localUpdates = [], localNodes = []\n    for (let j = 0; j < items.length; j++) {\n      let {dom, update} = items[j].render(view)\n      let span = crel(\"span\", {class: prefix + \"item\"}, dom)\n      result.appendChild(span)\n      localNodes.push(span)\n      localUpdates.push(update)\n    }\n    if (localUpdates.length) {\n      updates.push(combineUpdates(localUpdates, localNodes))\n      if (i < content.length - 1)\n        separators.push(result.appendChild(separator()))\n    }\n  }\n\n  function update(state) {\n    let something = false, needSep = false\n    for (let i = 0; i < updates.length; i++) {\n      let hasContent = updates[i](state)\n      if (i) separators[i - 1].style.display = needSep && hasContent ? \"\" : \"none\"\n      needSep = hasContent\n      if (hasContent) something = true\n    }\n    return something\n  }\n  return {dom: result, update}\n}\n\nfunction separator() {\n  return crel(\"span\", {class: prefix + \"separator\"})\n}\n\n// :: Object\n// A set of basic editor-related icons. Contains the properties\n// `join`, `lift`, `selectParentNode`, `undo`, `redo`, `strong`, `em`,\n// `code`, `link`, `bulletList`, `orderedList`, and `blockquote`, each\n// holding an object that can be used as the `icon` option to\n// `MenuItem`.\nexport const icons = {\n  join: {\n    width: 800, height: 900,\n    path: \"M0 75h800v125h-800z M0 825h800v-125h-800z M250 400h100v-100h100v100h100v100h-100v100h-100v-100h-100z\"\n  },\n  lift: {\n    width: 1024, height: 1024,\n    path: \"M219 310v329q0 7-5 12t-12 5q-8 0-13-5l-164-164q-5-5-5-13t5-13l164-164q5-5 13-5 7 0 12 5t5 12zM1024 749v109q0 7-5 12t-12 5h-987q-7 0-12-5t-5-12v-109q0-7 5-12t12-5h987q7 0 12 5t5 12zM1024 530v109q0 7-5 12t-12 5h-621q-7 0-12-5t-5-12v-109q0-7 5-12t12-5h621q7 0 12 5t5 12zM1024 310v109q0 7-5 12t-12 5h-621q-7 0-12-5t-5-12v-109q0-7 5-12t12-5h621q7 0 12 5t5 12zM1024 91v109q0 7-5 12t-12 5h-987q-7 0-12-5t-5-12v-109q0-7 5-12t12-5h987q7 0 12 5t5 12z\"\n  },\n  selectParentNode: {text: \"\\u2b1a\", css: \"font-weight: bold\"},\n  undo: {\n    width: 1024, height: 1024,\n    path: \"M761 1024c113-206 132-520-313-509v253l-384-384 384-384v248c534-13 594 472 313 775z\"\n  },\n  redo: {\n    width: 1024, height: 1024,\n    path: \"M576 248v-248l384 384-384 384v-253c-446-10-427 303-313 509-280-303-221-789 313-775z\"\n  },\n  strong: {\n    width: 805, height: 1024,\n    path: \"M317 869q42 18 80 18 214 0 214-191 0-65-23-102-15-25-35-42t-38-26-46-14-48-6-54-1q-41 0-57 5 0 30-0 90t-0 90q0 4-0 38t-0 55 2 47 6 38zM309 442q24 4 62 4 46 0 81-7t62-25 42-51 14-81q0-40-16-70t-45-46-61-24-70-8q-28 0-74 7 0 28 2 86t2 86q0 15-0 45t-0 45q0 26 0 39zM0 950l1-53q8-2 48-9t60-15q4-6 7-15t4-19 3-18 1-21 0-19v-37q0-561-12-585-2-4-12-8t-25-6-28-4-27-2-17-1l-2-47q56-1 194-6t213-5q13 0 39 0t38 0q40 0 78 7t73 24 61 40 42 59 16 78q0 29-9 54t-22 41-36 32-41 25-48 22q88 20 146 76t58 141q0 57-20 102t-53 74-78 48-93 27-100 8q-25 0-75-1t-75-1q-60 0-175 6t-132 6z\"\n  },\n  em: {\n    width: 585, height: 1024,\n    path: \"M0 949l9-48q3-1 46-12t63-21q16-20 23-57 0-4 35-165t65-310 29-169v-14q-13-7-31-10t-39-4-33-3l10-58q18 1 68 3t85 4 68 1q27 0 56-1t69-4 56-3q-2 22-10 50-17 5-58 16t-62 19q-4 10-8 24t-5 22-4 26-3 24q-15 84-50 239t-44 203q-1 5-7 33t-11 51-9 47-3 32l0 10q9 2 105 17-1 25-9 56-6 0-18 0t-18 0q-16 0-49-5t-49-5q-78-1-117-1-29 0-81 5t-69 6z\"\n  },\n  code: {\n    width: 896, height: 1024,\n    path: \"M608 192l-96 96 224 224-224 224 96 96 288-320-288-320zM288 192l-288 320 288 320 96-96-224-224 224-224-96-96z\"\n  },\n  link: {\n    width: 951, height: 1024,\n    path: \"M832 694q0-22-16-38l-118-118q-16-16-38-16-24 0-41 18 1 1 10 10t12 12 8 10 7 14 2 15q0 22-16 38t-38 16q-8 0-15-2t-14-7-10-8-12-12-10-10q-18 17-18 41 0 22 16 38l117 118q15 15 38 15 22 0 38-14l84-83q16-16 16-38zM430 292q0-22-16-38l-117-118q-16-16-38-16-22 0-38 15l-84 83q-16 16-16 38 0 22 16 38l118 118q15 15 38 15 24 0 41-17-1-1-10-10t-12-12-8-10-7-14-2-15q0-22 16-38t38-16q8 0 15 2t14 7 10 8 12 12 10 10q18-17 18-41zM941 694q0 68-48 116l-84 83q-47 47-116 47-69 0-116-48l-117-118q-47-47-47-116 0-70 50-119l-50-50q-49 50-118 50-68 0-116-48l-118-118q-48-48-48-116t48-116l84-83q47-47 116-47 69 0 116 48l117 118q47 47 47 116 0 70-50 119l50 50q49-50 118-50 68 0 116 48l118 118q48 48 48 116z\"\n  },\n  bulletList: {\n    width: 768, height: 896,\n    path: \"M0 512h128v-128h-128v128zM0 256h128v-128h-128v128zM0 768h128v-128h-128v128zM256 512h512v-128h-512v128zM256 256h512v-128h-512v128zM256 768h512v-128h-512v128z\"\n  },\n  orderedList: {\n    width: 768, height: 896,\n    path: \"M320 512h448v-128h-448v128zM320 768h448v-128h-448v128zM320 128v128h448v-128h-448zM79 384h78v-256h-36l-85 23v50l43-2v185zM189 590c0-36-12-78-96-78-33 0-64 6-83 16l1 66c21-10 42-15 67-15s32 11 32 28c0 26-30 58-110 112v50h192v-67l-91 2c49-30 87-66 87-113l1-1z\"\n  },\n  blockquote: {\n    width: 640, height: 896,\n    path: \"M0 448v256h256v-256h-128c0 0 0-128 128-128v-128c0 0-256 0-256 256zM640 320v-128c0 0-256 0-256 256v256h256v-256h-128c0 0 0-128 128-128z\"\n  }\n}\n\n// :: MenuItem\n// Menu item for the `joinUp` command.\nexport const joinUpItem = new MenuItem({\n  title: \"Join with above block\",\n  run: joinUp,\n  select: state => joinUp(state),\n  icon: icons.join\n})\n\n// :: MenuItem\n// Menu item for the `lift` command.\nexport const liftItem = new MenuItem({\n  title: \"Lift out of enclosing block\",\n  run: lift,\n  select: state => lift(state),\n  icon: icons.lift\n})\n\n// :: MenuItem\n// Menu item for the `selectParentNode` command.\nexport const selectParentNodeItem = new MenuItem({\n  title: \"Select parent node\",\n  run: selectParentNode,\n  select: state => selectParentNode(state),\n  icon: icons.selectParentNode\n})\n\n// :: MenuItem\n// Menu item for the `undo` command.\nexport let undoItem = new MenuItem({\n  title: \"Undo last change\",\n  run: undo,\n  enable: state => undo(state),\n  icon: icons.undo\n})\n\n// :: MenuItem\n// Menu item for the `redo` command.\nexport let redoItem = new MenuItem({\n  title: \"Redo last undone change\",\n  run: redo,\n  enable: state => redo(state),\n  icon: icons.redo\n})\n\n// :: (NodeType, Object) → MenuItem\n// Build a menu item for wrapping the selection in a given node type.\n// Adds `run` and `select` properties to the ones present in\n// `options`. `options.attrs` may be an object or a function.\nexport function wrapItem(nodeType, options) {\n  let passedOptions = {\n    run(state, dispatch) {\n      // FIXME if (options.attrs instanceof Function) options.attrs(state, attrs => wrapIn(nodeType, attrs)(state))\n      return wrapIn(nodeType, options.attrs)(state, dispatch)\n    },\n    select(state) {\n      return wrapIn(nodeType, options.attrs instanceof Function ? null : options.attrs)(state)\n    }\n  }\n  for (let prop in options) passedOptions[prop] = options[prop]\n  return new MenuItem(passedOptions)\n}\n\n// :: (NodeType, Object) → MenuItem\n// Build a menu item for changing the type of the textblock around the\n// selection to the given type. Provides `run`, `active`, and `select`\n// properties. Others must be given in `options`. `options.attrs` may\n// be an object to provide the attributes for the textblock node.\nexport function blockTypeItem(nodeType, options) {\n  let command = setBlockType(nodeType, options.attrs)\n  let passedOptions = {\n    run: command,\n    enable(state) { return command(state) },\n    active(state) {\n      let {$from, to, node} = state.selection\n      if (node) return node.hasMarkup(nodeType, options.attrs)\n      return to <= $from.end() && $from.parent.hasMarkup(nodeType, options.attrs)\n    }\n  }\n  for (let prop in options) passedOptions[prop] = options[prop]\n  return new MenuItem(passedOptions)\n}\n\n// Work around classList.toggle being broken in IE11\nfunction setClass(dom, cls, on) {\n  if (on) dom.classList.add(cls)\n  else dom.classList.remove(cls)\n}\n","import crel from \"crelt\"\nimport {Plugin} from \"prosemirror-state\"\n\nimport {renderGrouped} from \"./menu\"\n\nconst prefix = \"ProseMirror-menubar\"\n\nfunction isIOS() {\n  if (typeof navigator == \"undefined\") return false\n  let agent = navigator.userAgent\n  return !/Edge\\/\\d/.test(agent) && /AppleWebKit/.test(agent) && /Mobile\\/\\w+/.test(agent)\n}\n\n// :: (Object) → Plugin\n// A plugin that will place a menu bar above the editor. Note that\n// this involves wrapping the editor in an additional `<div>`.\n//\n//   options::-\n//   Supports the following options:\n//\n//     content:: [[MenuElement]]\n//     Provides the content of the menu, as a nested array to be\n//     passed to `renderGrouped`.\n//\n//     floating:: ?bool\n//     Determines whether the menu floats, i.e. whether it sticks to\n//     the top of the viewport when the editor is partially scrolled\n//     out of view.\nexport function menuBar(options) {\n  return new Plugin({\n    view(editorView) { return new MenuBarView(editorView, options) }\n  })\n}\n\nclass MenuBarView {\n  constructor(editorView, options) {\n    this.editorView = editorView\n    this.options = options\n\n    this.wrapper = crel(\"div\", {class: prefix + \"-wrapper\"})\n    this.menu = this.wrapper.appendChild(crel(\"div\", {class: prefix}))\n    this.menu.className = prefix\n    this.spacer = null\n\n    editorView.dom.parentNode.replaceChild(this.wrapper, editorView.dom)\n    this.wrapper.appendChild(editorView.dom)\n\n    this.maxHeight = 0\n    this.widthForMaxHeight = 0\n    this.floating = false\n\n    let {dom, update} = renderGrouped(this.editorView, this.options.content)\n    this.contentUpdate = update\n    this.menu.appendChild(dom)\n    this.update()\n\n    if (options.floating && !isIOS()) {\n      this.updateFloat()\n      let potentialScrollers = getAllWrapping(this.wrapper)\n      this.scrollFunc = (e) => {\n        let root = this.editorView.root\n        if (!(root.body || root).contains(this.wrapper)) {\n            potentialScrollers.forEach(el => el.removeEventListener(\"scroll\", this.scrollFunc))\n        } else {\n            this.updateFloat(e.target.getBoundingClientRect && e.target)\n        }\n      }\n      potentialScrollers.forEach(el => el.addEventListener('scroll', this.scrollFunc))\n    }\n  }\n\n  update() {\n    this.contentUpdate(this.editorView.state)\n\n    if (this.floating) {\n      this.updateScrollCursor()\n    } else {\n      if (this.menu.offsetWidth != this.widthForMaxHeight) {\n        this.widthForMaxHeight = this.menu.offsetWidth\n        this.maxHeight = 0\n      }\n      if (this.menu.offsetHeight > this.maxHeight) {\n        this.maxHeight = this.menu.offsetHeight\n        this.menu.style.minHeight = this.maxHeight + \"px\"\n      }\n    }\n  }\n\n  updateScrollCursor() {\n    let selection = this.editorView.root.getSelection()\n    if (!selection.focusNode) return\n    let rects = selection.getRangeAt(0).getClientRects()\n    let selRect = rects[selectionIsInverted(selection) ? 0 : rects.length - 1]\n    if (!selRect) return\n    let menuRect = this.menu.getBoundingClientRect()\n    if (selRect.top < menuRect.bottom && selRect.bottom > menuRect.top) {\n      let scrollable = findWrappingScrollable(this.wrapper)\n      if (scrollable) scrollable.scrollTop -= (menuRect.bottom - selRect.top)\n    }\n  }\n\n  updateFloat(scrollAncestor) {\n    let parent = this.wrapper, editorRect = parent.getBoundingClientRect(),\n        top = scrollAncestor ? Math.max(0, scrollAncestor.getBoundingClientRect().top) : 0\n\n    if (this.floating) {\n      if (editorRect.top >= top || editorRect.bottom < this.menu.offsetHeight + 10) {\n        this.floating = false\n        this.menu.style.position = this.menu.style.left = this.menu.style.top = this.menu.style.width = \"\"\n        this.menu.style.display = \"\"\n        this.spacer.parentNode.removeChild(this.spacer)\n        this.spacer = null\n      } else {\n        let border = (parent.offsetWidth - parent.clientWidth) / 2\n        this.menu.style.left = (editorRect.left + border) + \"px\"\n        this.menu.style.display = (editorRect.top > window.innerHeight ? \"none\" : \"\")\n        if (scrollAncestor) this.menu.style.top = top + \"px\"\n      }\n    } else {\n      if (editorRect.top < top && editorRect.bottom >= this.menu.offsetHeight + 10) {\n        this.floating = true\n        let menuRect = this.menu.getBoundingClientRect()\n        this.menu.style.left = menuRect.left + \"px\"\n        this.menu.style.width = menuRect.width + \"px\"\n        if (scrollAncestor) this.menu.style.top = top + \"px\"\n        this.menu.style.position = \"fixed\"\n        this.spacer = crel(\"div\", {class: prefix + \"-spacer\", style: `height: ${menuRect.height}px`})\n        parent.insertBefore(this.spacer, this.menu)\n      }\n    }\n  }\n\n  destroy() {\n    if (this.wrapper.parentNode)\n      this.wrapper.parentNode.replaceChild(this.editorView.dom, this.wrapper)\n  }\n}\n\n// Not precise, but close enough\nfunction selectionIsInverted(selection) {\n  if (selection.anchorNode == selection.focusNode) return selection.anchorOffset > selection.focusOffset\n  return selection.anchorNode.compareDocumentPosition(selection.focusNode) == Node.DOCUMENT_POSITION_FOLLOWING\n}\n\nfunction findWrappingScrollable(node) {\n  for (let cur = node.parentNode; cur; cur = cur.parentNode)\n    if (cur.scrollHeight > cur.clientHeight) return cur\n}\n\nfunction getAllWrapping(node) {\n    let res = [window]\n    for (let cur = node.parentNode; cur; cur = cur.parentNode)\n        res.push(cur)\n    return res\n}\n","export function findDiffStart(a, b, pos) {\n  for (let i = 0;; i++) {\n    if (i == a.childCount || i == b.childCount)\n      return a.childCount == b.childCount ? null : pos\n\n    let childA = a.child(i), childB = b.child(i)\n    if (childA == childB) { pos += childA.nodeSize; continue }\n\n    if (!childA.sameMarkup(childB)) return pos\n\n    if (childA.isText && childA.text != childB.text) {\n      for (let j = 0; childA.text[j] == childB.text[j]; j++)\n        pos++\n      return pos\n    }\n    if (childA.content.size || childB.content.size) {\n      let inner = findDiffStart(childA.content, childB.content, pos + 1)\n      if (inner != null) return inner\n    }\n    pos += childA.nodeSize\n  }\n}\n\nexport function findDiffEnd(a, b, posA, posB) {\n  for (let iA = a.childCount, iB = b.childCount;;) {\n    if (iA == 0 || iB == 0)\n      return iA == iB ? null : {a: posA, b: posB}\n\n    let childA = a.child(--iA), childB = b.child(--iB), size = childA.nodeSize\n    if (childA == childB) {\n      posA -= size; posB -= size\n      continue\n    }\n\n    if (!childA.sameMarkup(childB)) return {a: posA, b: posB}\n\n    if (childA.isText && childA.text != childB.text) {\n      let same = 0, minSize = Math.min(childA.text.length, childB.text.length)\n      while (same < minSize && childA.text[childA.text.length - same - 1] == childB.text[childB.text.length - same - 1]) {\n        same++; posA--; posB--\n      }\n      return {a: posA, b: posB}\n    }\n    if (childA.content.size || childB.content.size) {\n      let inner = findDiffEnd(childA.content, childB.content, posA - 1, posB - 1)\n      if (inner) return inner\n    }\n    posA -= size; posB -= size\n  }\n}\n","import {findDiffStart, findDiffEnd} from \"./diff\"\n\n// ::- A fragment represents a node's collection of child nodes.\n//\n// Like nodes, fragments are persistent data structures, and you\n// should not mutate them or their content. Rather, you create new\n// instances whenever needed. The API tries to make this easy.\nexport class Fragment {\n  constructor(content, size) {\n    this.content = content\n    // :: number\n    // The size of the fragment, which is the total of the size of its\n    // content nodes.\n    this.size = size || 0\n    if (size == null) for (let i = 0; i < content.length; i++)\n      this.size += content[i].nodeSize\n  }\n\n  // :: (number, number, (node: Node, start: number, parent: Node, index: number) → ?bool, ?number)\n  // Invoke a callback for all descendant nodes between the given two\n  // positions (relative to start of this fragment). Doesn't descend\n  // into a node when the callback returns `false`.\n  nodesBetween(from, to, f, nodeStart = 0, parent) {\n    for (let i = 0, pos = 0; pos < to; i++) {\n      let child = this.content[i], end = pos + child.nodeSize\n      if (end > from && f(child, nodeStart + pos, parent, i) !== false && child.content.size) {\n        let start = pos + 1\n        child.nodesBetween(Math.max(0, from - start),\n                           Math.min(child.content.size, to - start),\n                           f, nodeStart + start)\n      }\n      pos = end\n    }\n  }\n\n  // :: ((node: Node, pos: number, parent: Node) → ?bool)\n  // Call the given callback for every descendant node. The callback\n  // may return `false` to prevent traversal of a given node's children.\n  descendants(f) {\n    this.nodesBetween(0, this.size, f)\n  }\n\n  // : (number, number, ?string, ?string) → string\n  textBetween(from, to, blockSeparator, leafText) {\n    let text = \"\", separated = true\n    this.nodesBetween(from, to, (node, pos) => {\n      if (node.isText) {\n        text += node.text.slice(Math.max(from, pos) - pos, to - pos)\n        separated = !blockSeparator\n      } else if (node.isLeaf && leafText) {\n        text += leafText\n        separated = !blockSeparator\n      } else if (!separated && node.isBlock) {\n        text += blockSeparator\n        separated = true\n      }\n    }, 0)\n    return text\n  }\n\n  // :: (Fragment) → Fragment\n  // Create a new fragment containing the combined content of this\n  // fragment and the other.\n  append(other) {\n    if (!other.size) return this\n    if (!this.size) return other\n    let last = this.lastChild, first = other.firstChild, content = this.content.slice(), i = 0\n    if (last.isText && last.sameMarkup(first)) {\n      content[content.length - 1] = last.withText(last.text + first.text)\n      i = 1\n    }\n    for (; i < other.content.length; i++) content.push(other.content[i])\n    return new Fragment(content, this.size + other.size)\n  }\n\n  // :: (number, ?number) → Fragment\n  // Cut out the sub-fragment between the two given positions.\n  cut(from, to) {\n    if (to == null) to = this.size\n    if (from == 0 && to == this.size) return this\n    let result = [], size = 0\n    if (to > from) for (let i = 0, pos = 0; pos < to; i++) {\n      let child = this.content[i], end = pos + child.nodeSize\n      if (end > from) {\n        if (pos < from || end > to) {\n          if (child.isText)\n            child = child.cut(Math.max(0, from - pos), Math.min(child.text.length, to - pos))\n          else\n            child = child.cut(Math.max(0, from - pos - 1), Math.min(child.content.size, to - pos - 1))\n        }\n        result.push(child)\n        size += child.nodeSize\n      }\n      pos = end\n    }\n    return new Fragment(result, size)\n  }\n\n  cutByIndex(from, to) {\n    if (from == to) return Fragment.empty\n    if (from == 0 && to == this.content.length) return this\n    return new Fragment(this.content.slice(from, to))\n  }\n\n  // :: (number, Node) → Fragment\n  // Create a new fragment in which the node at the given index is\n  // replaced by the given node.\n  replaceChild(index, node) {\n    let current = this.content[index]\n    if (current == node) return this\n    let copy = this.content.slice()\n    let size = this.size + node.nodeSize - current.nodeSize\n    copy[index] = node\n    return new Fragment(copy, size)\n  }\n\n  // : (Node) → Fragment\n  // Create a new fragment by prepending the given node to this\n  // fragment.\n  addToStart(node) {\n    return new Fragment([node].concat(this.content), this.size + node.nodeSize)\n  }\n\n  // : (Node) → Fragment\n  // Create a new fragment by appending the given node to this\n  // fragment.\n  addToEnd(node) {\n    return new Fragment(this.content.concat(node), this.size + node.nodeSize)\n  }\n\n  // :: (Fragment) → bool\n  // Compare this fragment to another one.\n  eq(other) {\n    if (this.content.length != other.content.length) return false\n    for (let i = 0; i < this.content.length; i++)\n      if (!this.content[i].eq(other.content[i])) return false\n    return true\n  }\n\n  // :: ?Node\n  // The first child of the fragment, or `null` if it is empty.\n  get firstChild() { return this.content.length ? this.content[0] : null }\n\n  // :: ?Node\n  // The last child of the fragment, or `null` if it is empty.\n  get lastChild() { return this.content.length ? this.content[this.content.length - 1] : null }\n\n  // :: number\n  // The number of child nodes in this fragment.\n  get childCount() { return this.content.length }\n\n  // :: (number) → Node\n  // Get the child node at the given index. Raise an error when the\n  // index is out of range.\n  child(index) {\n    let found = this.content[index]\n    if (!found) throw new RangeError(\"Index \" + index + \" out of range for \" + this)\n    return found\n  }\n\n  // :: (number) → ?Node\n  // Get the child node at the given index, if it exists.\n  maybeChild(index) {\n    return this.content[index]\n  }\n\n  // :: ((node: Node, offset: number, index: number))\n  // Call `f` for every child node, passing the node, its offset\n  // into this parent node, and its index.\n  forEach(f) {\n    for (let i = 0, p = 0; i < this.content.length; i++) {\n      let child = this.content[i]\n      f(child, p, i)\n      p += child.nodeSize\n    }\n  }\n\n  // :: (Fragment) → ?number\n  // Find the first position at which this fragment and another\n  // fragment differ, or `null` if they are the same.\n  findDiffStart(other, pos = 0) {\n    return findDiffStart(this, other, pos)\n  }\n\n  // :: (Fragment) → ?{a: number, b: number}\n  // Find the first position, searching from the end, at which this\n  // fragment and the given fragment differ, or `null` if they are the\n  // same. Since this position will not be the same in both nodes, an\n  // object with two separate positions is returned.\n  findDiffEnd(other, pos = this.size, otherPos = other.size) {\n    return findDiffEnd(this, other, pos, otherPos)\n  }\n\n  // : (number, ?number) → {index: number, offset: number}\n  // Find the index and inner offset corresponding to a given relative\n  // position in this fragment. The result object will be reused\n  // (overwritten) the next time the function is called. (Not public.)\n  findIndex(pos, round = -1) {\n    if (pos == 0) return retIndex(0, pos)\n    if (pos == this.size) return retIndex(this.content.length, pos)\n    if (pos > this.size || pos < 0) throw new RangeError(`Position ${pos} outside of fragment (${this})`)\n    for (let i = 0, curPos = 0;; i++) {\n      let cur = this.child(i), end = curPos + cur.nodeSize\n      if (end >= pos) {\n        if (end == pos || round > 0) return retIndex(i + 1, end)\n        return retIndex(i, curPos)\n      }\n      curPos = end\n    }\n  }\n\n  // :: () → string\n  // Return a debugging string that describes this fragment.\n  toString() { return \"<\" + this.toStringInner() + \">\" }\n\n  toStringInner() { return this.content.join(\", \") }\n\n  // :: () → ?Object\n  // Create a JSON-serializeable representation of this fragment.\n  toJSON() {\n    return this.content.length ? this.content.map(n => n.toJSON()) : null\n  }\n\n  // :: (Schema, ?Object) → Fragment\n  // Deserialize a fragment from its JSON representation.\n  static fromJSON(schema, value) {\n    if (!value) return Fragment.empty\n    if (!Array.isArray(value)) throw new RangeError(\"Invalid input for Fragment.fromJSON\")\n    return new Fragment(value.map(schema.nodeFromJSON))\n  }\n\n  // :: ([Node]) → Fragment\n  // Build a fragment from an array of nodes. Ensures that adjacent\n  // text nodes with the same marks are joined together.\n  static fromArray(array) {\n    if (!array.length) return Fragment.empty\n    let joined, size = 0\n    for (let i = 0; i < array.length; i++) {\n      let node = array[i]\n      size += node.nodeSize\n      if (i && node.isText && array[i - 1].sameMarkup(node)) {\n        if (!joined) joined = array.slice(0, i)\n        joined[joined.length - 1] = node.withText(joined[joined.length - 1].text + node.text)\n      } else if (joined) {\n        joined.push(node)\n      }\n    }\n    return new Fragment(joined || array, size)\n  }\n\n  // :: (?union<Fragment, Node, [Node]>) → Fragment\n  // Create a fragment from something that can be interpreted as a set\n  // of nodes. For `null`, it returns the empty fragment. For a\n  // fragment, the fragment itself. For a node or array of nodes, a\n  // fragment containing those nodes.\n  static from(nodes) {\n    if (!nodes) return Fragment.empty\n    if (nodes instanceof Fragment) return nodes\n    if (Array.isArray(nodes)) return this.fromArray(nodes)\n    if (nodes.attrs) return new Fragment([nodes], nodes.nodeSize)\n    throw new RangeError(\"Can not convert \" + nodes + \" to a Fragment\" +\n                         (nodes.nodesBetween ? \" (looks like multiple versions of prosemirror-model were loaded)\" : \"\"))\n  }\n}\n\nconst found = {index: 0, offset: 0}\nfunction retIndex(index, offset) {\n  found.index = index\n  found.offset = offset\n  return found\n}\n\n// :: Fragment\n// An empty fragment. Intended to be reused whenever a node doesn't\n// contain anything (rather than allocating a new empty fragment for\n// each leaf node).\nFragment.empty = new Fragment([], 0)\n","export function compareDeep(a, b) {\n  if (a === b) return true\n  if (!(a && typeof a == \"object\") ||\n      !(b && typeof b == \"object\")) return false\n  let array = Array.isArray(a)\n  if (Array.isArray(b) != array) return false\n  if (array) {\n    if (a.length != b.length) return false\n    for (let i = 0; i < a.length; i++) if (!compareDeep(a[i], b[i])) return false\n  } else {\n    for (let p in a) if (!(p in b) || !compareDeep(a[p], b[p])) return false\n    for (let p in b) if (!(p in a)) return false\n  }\n  return true\n}\n","import {compareDeep} from \"./comparedeep\"\n\n// ::- A mark is a piece of information that can be attached to a node,\n// such as it being emphasized, in code font, or a link. It has a type\n// and optionally a set of attributes that provide further information\n// (such as the target of the link). Marks are created through a\n// `Schema`, which controls which types exist and which\n// attributes they have.\nexport class Mark {\n  constructor(type, attrs) {\n    // :: MarkType\n    // The type of this mark.\n    this.type = type\n    // :: Object\n    // The attributes associated with this mark.\n    this.attrs = attrs\n  }\n\n  // :: ([Mark]) → [Mark]\n  // Given a set of marks, create a new set which contains this one as\n  // well, in the right position. If this mark is already in the set,\n  // the set itself is returned. If any marks that are set to be\n  // [exclusive](#model.MarkSpec.excludes) with this mark are present,\n  // those are replaced by this one.\n  addToSet(set) {\n    let copy, placed = false\n    for (let i = 0; i < set.length; i++) {\n      let other = set[i]\n      if (this.eq(other)) return set\n      if (this.type.excludes(other.type)) {\n        if (!copy) copy = set.slice(0, i)\n      } else if (other.type.excludes(this.type)) {\n        return set\n      } else {\n        if (!placed && other.type.rank > this.type.rank) {\n          if (!copy) copy = set.slice(0, i)\n          copy.push(this)\n          placed = true\n        }\n        if (copy) copy.push(other)\n      }\n    }\n    if (!copy) copy = set.slice()\n    if (!placed) copy.push(this)\n    return copy\n  }\n\n  // :: ([Mark]) → [Mark]\n  // Remove this mark from the given set, returning a new set. If this\n  // mark is not in the set, the set itself is returned.\n  removeFromSet(set) {\n    for (let i = 0; i < set.length; i++)\n      if (this.eq(set[i]))\n        return set.slice(0, i).concat(set.slice(i + 1))\n    return set\n  }\n\n  // :: ([Mark]) → bool\n  // Test whether this mark is in the given set of marks.\n  isInSet(set) {\n    for (let i = 0; i < set.length; i++)\n      if (this.eq(set[i])) return true\n    return false\n  }\n\n  // :: (Mark) → bool\n  // Test whether this mark has the same type and attributes as\n  // another mark.\n  eq(other) {\n    return this == other ||\n      (this.type == other.type && compareDeep(this.attrs, other.attrs))\n  }\n\n  // :: () → Object\n  // Convert this mark to a JSON-serializeable representation.\n  toJSON() {\n    let obj = {type: this.type.name}\n    for (let _ in this.attrs) {\n      obj.attrs = this.attrs\n      break\n    }\n    return obj\n  }\n\n  // :: (Schema, Object) → Mark\n  static fromJSON(schema, json) {\n    if (!json) throw new RangeError(\"Invalid input for Mark.fromJSON\")\n    let type = schema.marks[json.type]\n    if (!type) throw new RangeError(`There is no mark type ${json.type} in this schema`)\n    return type.create(json.attrs)\n  }\n\n  // :: ([Mark], [Mark]) → bool\n  // Test whether two sets of marks are identical.\n  static sameSet(a, b) {\n    if (a == b) return true\n    if (a.length != b.length) return false\n    for (let i = 0; i < a.length; i++)\n      if (!a[i].eq(b[i])) return false\n    return true\n  }\n\n  // :: (?union<Mark, [Mark]>) → [Mark]\n  // Create a properly sorted mark set from null, a single mark, or an\n  // unsorted array of marks.\n  static setFrom(marks) {\n    if (!marks || marks.length == 0) return Mark.none\n    if (marks instanceof Mark) return [marks]\n    let copy = marks.slice()\n    copy.sort((a, b) => a.type.rank - b.type.rank)\n    return copy\n  }\n}\n\n// :: [Mark] The empty set of marks.\nMark.none = []\n","import {Fragment} from \"./fragment\"\n\n// ReplaceError:: class extends Error\n// Error type raised by [`Node.replace`](#model.Node.replace) when\n// given an invalid replacement.\n\nexport function ReplaceError(message) {\n  let err = Error.call(this, message)\n  err.__proto__ = ReplaceError.prototype\n  return err\n}\n\nReplaceError.prototype = Object.create(Error.prototype)\nReplaceError.prototype.constructor = ReplaceError\nReplaceError.prototype.name = \"ReplaceError\"\n\n// ::- A slice represents a piece cut out of a larger document. It\n// stores not only a fragment, but also the depth up to which nodes on\n// both side are ‘open’ (cut through).\nexport class Slice {\n  // :: (Fragment, number, number)\n  // Create a slice. When specifying a non-zero open depth, you must\n  // make sure that there are nodes of at least that depth at the\n  // appropriate side of the fragment—i.e. if the fragment is an empty\n  // paragraph node, `openStart` and `openEnd` can't be greater than 1.\n  //\n  // It is not necessary for the content of open nodes to conform to\n  // the schema's content constraints, though it should be a valid\n  // start/end/middle for such a node, depending on which sides are\n  // open.\n  constructor(content, openStart, openEnd) {\n    // :: Fragment The slice's content.\n    this.content = content\n    // :: number The open depth at the start.\n    this.openStart = openStart\n    // :: number The open depth at the end.\n    this.openEnd = openEnd\n  }\n\n  // :: number\n  // The size this slice would add when inserted into a document.\n  get size() {\n    return this.content.size - this.openStart - this.openEnd\n  }\n\n  insertAt(pos, fragment) {\n    let content = insertInto(this.content, pos + this.openStart, fragment, null)\n    return content && new Slice(content, this.openStart, this.openEnd)\n  }\n\n  removeBetween(from, to) {\n    return new Slice(removeRange(this.content, from + this.openStart, to + this.openStart), this.openStart, this.openEnd)\n  }\n\n  // :: (Slice) → bool\n  // Tests whether this slice is equal to another slice.\n  eq(other) {\n    return this.content.eq(other.content) && this.openStart == other.openStart && this.openEnd == other.openEnd\n  }\n\n  toString() {\n    return this.content + \"(\" + this.openStart + \",\" + this.openEnd + \")\"\n  }\n\n  // :: () → ?Object\n  // Convert a slice to a JSON-serializable representation.\n  toJSON() {\n    if (!this.content.size) return null\n    let json = {content: this.content.toJSON()}\n    if (this.openStart > 0) json.openStart = this.openStart\n    if (this.openEnd > 0) json.openEnd = this.openEnd\n    return json\n  }\n\n  // :: (Schema, ?Object) → Slice\n  // Deserialize a slice from its JSON representation.\n  static fromJSON(schema, json) {\n    if (!json) return Slice.empty\n    let openStart = json.openStart || 0, openEnd = json.openEnd || 0\n    if (typeof openStart != \"number\" || typeof openEnd != \"number\")\n      throw new RangeError(\"Invalid input for Slice.fromJSON\")\n    return new Slice(Fragment.fromJSON(schema, json.content), openStart, openEnd)\n  }\n\n  // :: (Fragment, ?bool) → Slice\n  // Create a slice from a fragment by taking the maximum possible\n  // open value on both side of the fragment.\n  static maxOpen(fragment, openIsolating=true) {\n    let openStart = 0, openEnd = 0\n    for (let n = fragment.firstChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.firstChild) openStart++\n    for (let n = fragment.lastChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.lastChild) openEnd++\n    return new Slice(fragment, openStart, openEnd)\n  }\n}\n\nfunction removeRange(content, from, to) {\n  let {index, offset} = content.findIndex(from), child = content.maybeChild(index)\n  let {index: indexTo, offset: offsetTo} = content.findIndex(to)\n  if (offset == from || child.isText) {\n    if (offsetTo != to && !content.child(indexTo).isText) throw new RangeError(\"Removing non-flat range\")\n    return content.cut(0, from).append(content.cut(to))\n  }\n  if (index != indexTo) throw new RangeError(\"Removing non-flat range\")\n  return content.replaceChild(index, child.copy(removeRange(child.content, from - offset - 1, to - offset - 1)))\n}\n\nfunction insertInto(content, dist, insert, parent) {\n  let {index, offset} = content.findIndex(dist), child = content.maybeChild(index)\n  if (offset == dist || child.isText) {\n    if (parent && !parent.canReplace(index, index, insert)) return null\n    return content.cut(0, dist).append(insert).append(content.cut(dist))\n  }\n  let inner = insertInto(child.content, dist - offset - 1, insert)\n  return inner && content.replaceChild(index, child.copy(inner))\n}\n\n// :: Slice\n// The empty slice.\nSlice.empty = new Slice(Fragment.empty, 0, 0)\n\nexport function replace($from, $to, slice) {\n  if (slice.openStart > $from.depth)\n    throw new ReplaceError(\"Inserted content deeper than insertion position\")\n  if ($from.depth - slice.openStart != $to.depth - slice.openEnd)\n    throw new ReplaceError(\"Inconsistent open depths\")\n  return replaceOuter($from, $to, slice, 0)\n}\n\nfunction replaceOuter($from, $to, slice, depth) {\n  let index = $from.index(depth), node = $from.node(depth)\n  if (index == $to.index(depth) && depth < $from.depth - slice.openStart) {\n    let inner = replaceOuter($from, $to, slice, depth + 1)\n    return node.copy(node.content.replaceChild(index, inner))\n  } else if (!slice.content.size) {\n    return close(node, replaceTwoWay($from, $to, depth))\n  } else if (!slice.openStart && !slice.openEnd && $from.depth == depth && $to.depth == depth) { // Simple, flat case\n    let parent = $from.parent, content = parent.content\n    return close(parent, content.cut(0, $from.parentOffset).append(slice.content).append(content.cut($to.parentOffset)))\n  } else {\n    let {start, end} = prepareSliceForReplace(slice, $from)\n    return close(node, replaceThreeWay($from, start, end, $to, depth))\n  }\n}\n\nfunction checkJoin(main, sub) {\n  if (!sub.type.compatibleContent(main.type))\n    throw new ReplaceError(\"Cannot join \" + sub.type.name + \" onto \" + main.type.name)\n}\n\nfunction joinable($before, $after, depth) {\n  let node = $before.node(depth)\n  checkJoin(node, $after.node(depth))\n  return node\n}\n\nfunction addNode(child, target) {\n  let last = target.length - 1\n  if (last >= 0 && child.isText && child.sameMarkup(target[last]))\n    target[last] = child.withText(target[last].text + child.text)\n  else\n    target.push(child)\n}\n\nfunction addRange($start, $end, depth, target) {\n  let node = ($end || $start).node(depth)\n  let startIndex = 0, endIndex = $end ? $end.index(depth) : node.childCount\n  if ($start) {\n    startIndex = $start.index(depth)\n    if ($start.depth > depth) {\n      startIndex++\n    } else if ($start.textOffset) {\n      addNode($start.nodeAfter, target)\n      startIndex++\n    }\n  }\n  for (let i = startIndex; i < endIndex; i++) addNode(node.child(i), target)\n  if ($end && $end.depth == depth && $end.textOffset)\n    addNode($end.nodeBefore, target)\n}\n\nfunction close(node, content) {\n  if (!node.type.validContent(content))\n    throw new ReplaceError(\"Invalid content for node \" + node.type.name)\n  return node.copy(content)\n}\n\nfunction replaceThreeWay($from, $start, $end, $to, depth) {\n  let openStart = $from.depth > depth && joinable($from, $start, depth + 1)\n  let openEnd = $to.depth > depth && joinable($end, $to, depth + 1)\n\n  let content = []\n  addRange(null, $from, depth, content)\n  if (openStart && openEnd && $start.index(depth) == $end.index(depth)) {\n    checkJoin(openStart, openEnd)\n    addNode(close(openStart, replaceThreeWay($from, $start, $end, $to, depth + 1)), content)\n  } else {\n    if (openStart)\n      addNode(close(openStart, replaceTwoWay($from, $start, depth + 1)), content)\n    addRange($start, $end, depth, content)\n    if (openEnd)\n      addNode(close(openEnd, replaceTwoWay($end, $to, depth + 1)), content)\n  }\n  addRange($to, null, depth, content)\n  return new Fragment(content)\n}\n\nfunction replaceTwoWay($from, $to, depth) {\n  let content = []\n  addRange(null, $from, depth, content)\n  if ($from.depth > depth) {\n    let type = joinable($from, $to, depth + 1)\n    addNode(close(type, replaceTwoWay($from, $to, depth + 1)), content)\n  }\n  addRange($to, null, depth, content)\n  return new Fragment(content)\n}\n\nfunction prepareSliceForReplace(slice, $along) {\n  let extra = $along.depth - slice.openStart, parent = $along.node(extra)\n  let node = parent.copy(slice.content)\n  for (let i = extra - 1; i >= 0; i--)\n    node = $along.node(i).copy(Fragment.from(node))\n  return {start: node.resolveNoCache(slice.openStart + extra),\n          end: node.resolveNoCache(node.content.size - slice.openEnd - extra)}\n}\n","import {Mark} from \"./mark\"\n\n// ::- You can [_resolve_](#model.Node.resolve) a position to get more\n// information about it. Objects of this class represent such a\n// resolved position, providing various pieces of context information,\n// and some helper methods.\n//\n// Throughout this interface, methods that take an optional `depth`\n// parameter will interpret undefined as `this.depth` and negative\n// numbers as `this.depth + value`.\nexport class ResolvedPos {\n  constructor(pos, path, parentOffset) {\n    // :: number The position that was resolved.\n    this.pos = pos\n    this.path = path\n    // :: number\n    // The number of levels the parent node is from the root. If this\n    // position points directly into the root node, it is 0. If it\n    // points into a top-level paragraph, 1, and so on.\n    this.depth = path.length / 3 - 1\n    // :: number The offset this position has into its parent node.\n    this.parentOffset = parentOffset\n  }\n\n  resolveDepth(val) {\n    if (val == null) return this.depth\n    if (val < 0) return this.depth + val\n    return val\n  }\n\n  // :: Node\n  // The parent node that the position points into. Note that even if\n  // a position points into a text node, that node is not considered\n  // the parent—text nodes are ‘flat’ in this model, and have no content.\n  get parent() { return this.node(this.depth) }\n\n  // :: Node\n  // The root node in which the position was resolved.\n  get doc() { return this.node(0) }\n\n  // :: (?number) → Node\n  // The ancestor node at the given level. `p.node(p.depth)` is the\n  // same as `p.parent`.\n  node(depth) { return this.path[this.resolveDepth(depth) * 3] }\n\n  // :: (?number) → number\n  // The index into the ancestor at the given level. If this points at\n  // the 3rd node in the 2nd paragraph on the top level, for example,\n  // `p.index(0)` is 1 and `p.index(1)` is 2.\n  index(depth) { return this.path[this.resolveDepth(depth) * 3 + 1] }\n\n  // :: (?number) → number\n  // The index pointing after this position into the ancestor at the\n  // given level.\n  indexAfter(depth) {\n    depth = this.resolveDepth(depth)\n    return this.index(depth) + (depth == this.depth && !this.textOffset ? 0 : 1)\n  }\n\n  // :: (?number) → number\n  // The (absolute) position at the start of the node at the given\n  // level.\n  start(depth) {\n    depth = this.resolveDepth(depth)\n    return depth == 0 ? 0 : this.path[depth * 3 - 1] + 1\n  }\n\n  // :: (?number) → number\n  // The (absolute) position at the end of the node at the given\n  // level.\n  end(depth) {\n    depth = this.resolveDepth(depth)\n    return this.start(depth) + this.node(depth).content.size\n  }\n\n  // :: (?number) → number\n  // The (absolute) position directly before the wrapping node at the\n  // given level, or, when `depth` is `this.depth + 1`, the original\n  // position.\n  before(depth) {\n    depth = this.resolveDepth(depth)\n    if (!depth) throw new RangeError(\"There is no position before the top-level node\")\n    return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1]\n  }\n\n  // :: (?number) → number\n  // The (absolute) position directly after the wrapping node at the\n  // given level, or the original position when `depth` is `this.depth + 1`.\n  after(depth) {\n    depth = this.resolveDepth(depth)\n    if (!depth) throw new RangeError(\"There is no position after the top-level node\")\n    return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1] + this.path[depth * 3].nodeSize\n  }\n\n  // :: number\n  // When this position points into a text node, this returns the\n  // distance between the position and the start of the text node.\n  // Will be zero for positions that point between nodes.\n  get textOffset() { return this.pos - this.path[this.path.length - 1] }\n\n  // :: ?Node\n  // Get the node directly after the position, if any. If the position\n  // points into a text node, only the part of that node after the\n  // position is returned.\n  get nodeAfter() {\n    let parent = this.parent, index = this.index(this.depth)\n    if (index == parent.childCount) return null\n    let dOff = this.pos - this.path[this.path.length - 1], child = parent.child(index)\n    return dOff ? parent.child(index).cut(dOff) : child\n  }\n\n  // :: ?Node\n  // Get the node directly before the position, if any. If the\n  // position points into a text node, only the part of that node\n  // before the position is returned.\n  get nodeBefore() {\n    let index = this.index(this.depth)\n    let dOff = this.pos - this.path[this.path.length - 1]\n    if (dOff) return this.parent.child(index).cut(0, dOff)\n    return index == 0 ? null : this.parent.child(index - 1)\n  }\n\n  // :: (number, ?number) → number\n  // Get the position at the given index in the parent node at the\n  // given depth (which defaults to `this.depth`).\n  posAtIndex(index, depth) {\n    depth = this.resolveDepth(depth)\n    let node = this.path[depth * 3], pos = depth == 0 ? 0 : this.path[depth * 3 - 1] + 1\n    for (let i = 0; i < index; i++) pos += node.child(i).nodeSize\n    return pos\n  }\n\n  // :: () → [Mark]\n  // Get the marks at this position, factoring in the surrounding\n  // marks' [`inclusive`](#model.MarkSpec.inclusive) property. If the\n  // position is at the start of a non-empty node, the marks of the\n  // node after it (if any) are returned.\n  marks() {\n    let parent = this.parent, index = this.index()\n\n    // In an empty parent, return the empty array\n    if (parent.content.size == 0) return Mark.none\n\n    // When inside a text node, just return the text node's marks\n    if (this.textOffset) return parent.child(index).marks\n\n    let main = parent.maybeChild(index - 1), other = parent.maybeChild(index)\n    // If the `after` flag is true of there is no node before, make\n    // the node after this position the main reference.\n    if (!main) { let tmp = main; main = other; other = tmp }\n\n    // Use all marks in the main node, except those that have\n    // `inclusive` set to false and are not present in the other node.\n    let marks = main.marks\n    for (var i = 0; i < marks.length; i++)\n      if (marks[i].type.spec.inclusive === false && (!other || !marks[i].isInSet(other.marks)))\n        marks = marks[i--].removeFromSet(marks)\n\n    return marks\n  }\n\n  // :: (ResolvedPos) → ?[Mark]\n  // Get the marks after the current position, if any, except those\n  // that are non-inclusive and not present at position `$end`. This\n  // is mostly useful for getting the set of marks to preserve after a\n  // deletion. Will return `null` if this position is at the end of\n  // its parent node or its parent node isn't a textblock (in which\n  // case no marks should be preserved).\n  marksAcross($end) {\n    let after = this.parent.maybeChild(this.index())\n    if (!after || !after.isInline) return null\n\n    let marks = after.marks, next = $end.parent.maybeChild($end.index())\n    for (var i = 0; i < marks.length; i++)\n      if (marks[i].type.spec.inclusive === false && (!next || !marks[i].isInSet(next.marks)))\n        marks = marks[i--].removeFromSet(marks)\n    return marks\n  }\n\n  // :: (number) → number\n  // The depth up to which this position and the given (non-resolved)\n  // position share the same parent nodes.\n  sharedDepth(pos) {\n    for (let depth = this.depth; depth > 0; depth--)\n      if (this.start(depth) <= pos && this.end(depth) >= pos) return depth\n    return 0\n  }\n\n  // :: (?ResolvedPos, ?(Node) → bool) → ?NodeRange\n  // Returns a range based on the place where this position and the\n  // given position diverge around block content. If both point into\n  // the same textblock, for example, a range around that textblock\n  // will be returned. If they point into different blocks, the range\n  // around those blocks in their shared ancestor is returned. You can\n  // pass in an optional predicate that will be called with a parent\n  // node to see if a range into that parent is acceptable.\n  blockRange(other = this, pred) {\n    if (other.pos < this.pos) return other.blockRange(this)\n    for (let d = this.depth - (this.parent.inlineContent || this.pos == other.pos ? 1 : 0); d >= 0; d--)\n      if (other.pos <= this.end(d) && (!pred || pred(this.node(d))))\n        return new NodeRange(this, other, d)\n  }\n\n  // :: (ResolvedPos) → bool\n  // Query whether the given position shares the same parent node.\n  sameParent(other) {\n    return this.pos - this.parentOffset == other.pos - other.parentOffset\n  }\n\n  // :: (ResolvedPos) → ResolvedPos\n  // Return the greater of this and the given position.\n  max(other) {\n    return other.pos > this.pos ? other : this\n  }\n\n  // :: (ResolvedPos) → ResolvedPos\n  // Return the smaller of this and the given position.\n  min(other) {\n    return other.pos < this.pos ? other : this\n  }\n\n  toString() {\n    let str = \"\"\n    for (let i = 1; i <= this.depth; i++)\n      str += (str ? \"/\" : \"\") + this.node(i).type.name + \"_\" + this.index(i - 1)\n    return str + \":\" + this.parentOffset\n  }\n\n  static resolve(doc, pos) {\n    if (!(pos >= 0 && pos <= doc.content.size)) throw new RangeError(\"Position \" + pos + \" out of range\")\n    let path = []\n    let start = 0, parentOffset = pos\n    for (let node = doc;;) {\n      let {index, offset} = node.content.findIndex(parentOffset)\n      let rem = parentOffset - offset\n      path.push(node, index, start + offset)\n      if (!rem) break\n      node = node.child(index)\n      if (node.isText) break\n      parentOffset = rem - 1\n      start += offset + 1\n    }\n    return new ResolvedPos(pos, path, parentOffset)\n  }\n\n  static resolveCached(doc, pos) {\n    for (let i = 0; i < resolveCache.length; i++) {\n      let cached = resolveCache[i]\n      if (cached.pos == pos && cached.doc == doc) return cached\n    }\n    let result = resolveCache[resolveCachePos] = ResolvedPos.resolve(doc, pos)\n    resolveCachePos = (resolveCachePos + 1) % resolveCacheSize\n    return result\n  }\n}\n\nlet resolveCache = [], resolveCachePos = 0, resolveCacheSize = 12\n\n// ::- Represents a flat range of content, i.e. one that starts and\n// ends in the same node.\nexport class NodeRange {\n  // :: (ResolvedPos, ResolvedPos, number)\n  // Construct a node range. `$from` and `$to` should point into the\n  // same node until at least the given `depth`, since a node range\n  // denotes an adjacent set of nodes in a single parent node.\n  constructor($from, $to, depth) {\n    // :: ResolvedPos A resolved position along the start of the\n    // content. May have a `depth` greater than this object's `depth`\n    // property, since these are the positions that were used to\n    // compute the range, not re-resolved positions directly at its\n    // boundaries.\n    this.$from = $from\n    // :: ResolvedPos A position along the end of the content. See\n    // caveat for [`$from`](#model.NodeRange.$from).\n    this.$to = $to\n    // :: number The depth of the node that this range points into.\n    this.depth = depth\n  }\n\n  // :: number The position at the start of the range.\n  get start() { return this.$from.before(this.depth + 1) }\n  // :: number The position at the end of the range.\n  get end() { return this.$to.after(this.depth + 1) }\n\n  // :: Node The parent node that the range points into.\n  get parent() { return this.$from.node(this.depth) }\n  // :: number The start index of the range in the parent node.\n  get startIndex() { return this.$from.index(this.depth) }\n  // :: number The end index of the range in the parent node.\n  get endIndex() { return this.$to.indexAfter(this.depth) }\n}\n","import {Fragment} from \"./fragment\"\nimport {Mark} from \"./mark\"\nimport {Slice, replace} from \"./replace\"\nimport {ResolvedPos} from \"./resolvedpos\"\nimport {compareDeep} from \"./comparedeep\"\n\nconst emptyAttrs = Object.create(null)\n\n// ::- This class represents a node in the tree that makes up a\n// ProseMirror document. So a document is an instance of `Node`, with\n// children that are also instances of `Node`.\n//\n// Nodes are persistent data structures. Instead of changing them, you\n// create new ones with the content you want. Old ones keep pointing\n// at the old document shape. This is made cheaper by sharing\n// structure between the old and new data as much as possible, which a\n// tree shape like this (without back pointers) makes easy.\n//\n// **Do not** directly mutate the properties of a `Node` object. See\n// [the guide](/docs/guide/#doc) for more information.\nexport class Node {\n  constructor(type, attrs, content, marks) {\n    // :: NodeType\n    // The type of node that this is.\n    this.type = type\n\n    // :: Object\n    // An object mapping attribute names to values. The kind of\n    // attributes allowed and required are\n    // [determined](#model.NodeSpec.attrs) by the node type.\n    this.attrs = attrs\n\n    // :: Fragment\n    // A container holding the node's children.\n    this.content = content || Fragment.empty\n\n    // :: [Mark]\n    // The marks (things like whether it is emphasized or part of a\n    // link) applied to this node.\n    this.marks = marks || Mark.none\n  }\n\n  // text:: ?string\n  // For text nodes, this contains the node's text content.\n\n  // :: number\n  // The size of this node, as defined by the integer-based [indexing\n  // scheme](/docs/guide/#doc.indexing). For text nodes, this is the\n  // amount of characters. For other leaf nodes, it is one. For\n  // non-leaf nodes, it is the size of the content plus two (the start\n  // and end token).\n  get nodeSize() { return this.isLeaf ? 1 : 2 + this.content.size }\n\n  // :: number\n  // The number of children that the node has.\n  get childCount() { return this.content.childCount }\n\n  // :: (number) → Node\n  // Get the child node at the given index. Raises an error when the\n  // index is out of range.\n  child(index) { return this.content.child(index) }\n\n  // :: (number) → ?Node\n  // Get the child node at the given index, if it exists.\n  maybeChild(index) { return this.content.maybeChild(index) }\n\n  // :: ((node: Node, offset: number, index: number))\n  // Call `f` for every child node, passing the node, its offset\n  // into this parent node, and its index.\n  forEach(f) { this.content.forEach(f) }\n\n  // :: (number, number, (node: Node, pos: number, parent: Node, index: number) → ?bool, ?number)\n  // Invoke a callback for all descendant nodes recursively between\n  // the given two positions that are relative to start of this node's\n  // content. The callback is invoked with the node, its\n  // parent-relative position, its parent node, and its child index.\n  // When the callback returns false for a given node, that node's\n  // children will not be recursed over. The last parameter can be\n  // used to specify a starting position to count from.\n  nodesBetween(from, to, f, startPos = 0) {\n    this.content.nodesBetween(from, to, f, startPos, this)\n  }\n\n  // :: ((node: Node, pos: number, parent: Node) → ?bool)\n  // Call the given callback for every descendant node. Doesn't\n  // descend into a node when the callback returns `false`.\n  descendants(f) {\n    this.nodesBetween(0, this.content.size, f)\n  }\n\n  // :: string\n  // Concatenates all the text nodes found in this fragment and its\n  // children.\n  get textContent() { return this.textBetween(0, this.content.size, \"\") }\n\n  // :: (number, number, ?string, ?string) → string\n  // Get all text between positions `from` and `to`. When\n  // `blockSeparator` is given, it will be inserted whenever a new\n  // block node is started. When `leafText` is given, it'll be\n  // inserted for every non-text leaf node encountered.\n  textBetween(from, to, blockSeparator, leafText) {\n    return this.content.textBetween(from, to, blockSeparator, leafText)\n  }\n\n  // :: ?Node\n  // Returns this node's first child, or `null` if there are no\n  // children.\n  get firstChild() { return this.content.firstChild }\n\n  // :: ?Node\n  // Returns this node's last child, or `null` if there are no\n  // children.\n  get lastChild() { return this.content.lastChild }\n\n  // :: (Node) → bool\n  // Test whether two nodes represent the same piece of document.\n  eq(other) {\n    return this == other || (this.sameMarkup(other) && this.content.eq(other.content))\n  }\n\n  // :: (Node) → bool\n  // Compare the markup (type, attributes, and marks) of this node to\n  // those of another. Returns `true` if both have the same markup.\n  sameMarkup(other) {\n    return this.hasMarkup(other.type, other.attrs, other.marks)\n  }\n\n  // :: (NodeType, ?Object, ?[Mark]) → bool\n  // Check whether this node's markup correspond to the given type,\n  // attributes, and marks.\n  hasMarkup(type, attrs, marks) {\n    return this.type == type &&\n      compareDeep(this.attrs, attrs || type.defaultAttrs || emptyAttrs) &&\n      Mark.sameSet(this.marks, marks || Mark.none)\n  }\n\n  // :: (?Fragment) → Node\n  // Create a new node with the same markup as this node, containing\n  // the given content (or empty, if no content is given).\n  copy(content = null) {\n    if (content == this.content) return this\n    return new this.constructor(this.type, this.attrs, content, this.marks)\n  }\n\n  // :: ([Mark]) → Node\n  // Create a copy of this node, with the given set of marks instead\n  // of the node's own marks.\n  mark(marks) {\n    return marks == this.marks ? this : new this.constructor(this.type, this.attrs, this.content, marks)\n  }\n\n  // :: (number, ?number) → Node\n  // Create a copy of this node with only the content between the\n  // given positions. If `to` is not given, it defaults to the end of\n  // the node.\n  cut(from, to) {\n    if (from == 0 && to == this.content.size) return this\n    return this.copy(this.content.cut(from, to))\n  }\n\n  // :: (number, ?number) → Slice\n  // Cut out the part of the document between the given positions, and\n  // return it as a `Slice` object.\n  slice(from, to = this.content.size, includeParents = false) {\n    if (from == to) return Slice.empty\n\n    let $from = this.resolve(from), $to = this.resolve(to)\n    let depth = includeParents ? 0 : $from.sharedDepth(to)\n    let start = $from.start(depth), node = $from.node(depth)\n    let content = node.content.cut($from.pos - start, $to.pos - start)\n    return new Slice(content, $from.depth - depth, $to.depth - depth)\n  }\n\n  // :: (number, number, Slice) → Node\n  // Replace the part of the document between the given positions with\n  // the given slice. The slice must 'fit', meaning its open sides\n  // must be able to connect to the surrounding content, and its\n  // content nodes must be valid children for the node they are placed\n  // into. If any of this is violated, an error of type\n  // [`ReplaceError`](#model.ReplaceError) is thrown.\n  replace(from, to, slice) {\n    return replace(this.resolve(from), this.resolve(to), slice)\n  }\n\n  // :: (number) → ?Node\n  // Find the node directly after the given position.\n  nodeAt(pos) {\n    for (let node = this;;) {\n      let {index, offset} = node.content.findIndex(pos)\n      node = node.maybeChild(index)\n      if (!node) return null\n      if (offset == pos || node.isText) return node\n      pos -= offset + 1\n    }\n  }\n\n  // :: (number) → {node: ?Node, index: number, offset: number}\n  // Find the (direct) child node after the given offset, if any,\n  // and return it along with its index and offset relative to this\n  // node.\n  childAfter(pos) {\n    let {index, offset} = this.content.findIndex(pos)\n    return {node: this.content.maybeChild(index), index, offset}\n  }\n\n  // :: (number) → {node: ?Node, index: number, offset: number}\n  // Find the (direct) child node before the given offset, if any,\n  // and return it along with its index and offset relative to this\n  // node.\n  childBefore(pos) {\n    if (pos == 0) return {node: null, index: 0, offset: 0}\n    let {index, offset} = this.content.findIndex(pos)\n    if (offset < pos) return {node: this.content.child(index), index, offset}\n    let node = this.content.child(index - 1)\n    return {node, index: index - 1, offset: offset - node.nodeSize}\n  }\n\n  // :: (number) → ResolvedPos\n  // Resolve the given position in the document, returning an\n  // [object](#model.ResolvedPos) with information about its context.\n  resolve(pos) { return ResolvedPos.resolveCached(this, pos) }\n\n  resolveNoCache(pos) { return ResolvedPos.resolve(this, pos) }\n\n  // :: (number, number, union<Mark, MarkType>) → bool\n  // Test whether a given mark or mark type occurs in this document\n  // between the two given positions.\n  rangeHasMark(from, to, type) {\n    let found = false\n    if (to > from) this.nodesBetween(from, to, node => {\n      if (type.isInSet(node.marks)) found = true\n      return !found\n    })\n    return found\n  }\n\n  // :: bool\n  // True when this is a block (non-inline node)\n  get isBlock() { return this.type.isBlock }\n\n  // :: bool\n  // True when this is a textblock node, a block node with inline\n  // content.\n  get isTextblock() { return this.type.isTextblock }\n\n  // :: bool\n  // True when this node allows inline content.\n  get inlineContent() { return this.type.inlineContent }\n\n  // :: bool\n  // True when this is an inline node (a text node or a node that can\n  // appear among text).\n  get isInline() { return this.type.isInline }\n\n  // :: bool\n  // True when this is a text node.\n  get isText() { return this.type.isText }\n\n  // :: bool\n  // True when this is a leaf node.\n  get isLeaf() { return this.type.isLeaf }\n\n  // :: bool\n  // True when this is an atom, i.e. when it does not have directly\n  // editable content. This is usually the same as `isLeaf`, but can\n  // be configured with the [`atom` property](#model.NodeSpec.atom) on\n  // a node's spec (typically used when the node is displayed as an\n  // uneditable [node view](#view.NodeView)).\n  get isAtom() { return this.type.isAtom }\n\n  // :: () → string\n  // Return a string representation of this node for debugging\n  // purposes.\n  toString() {\n    if (this.type.spec.toDebugString) return this.type.spec.toDebugString(this)\n    let name = this.type.name\n    if (this.content.size)\n      name += \"(\" + this.content.toStringInner() + \")\"\n    return wrapMarks(this.marks, name)\n  }\n\n  // :: (number) → ContentMatch\n  // Get the content match in this node at the given index.\n  contentMatchAt(index) {\n    let match = this.type.contentMatch.matchFragment(this.content, 0, index)\n    if (!match) throw new Error(\"Called contentMatchAt on a node with invalid content\")\n    return match\n  }\n\n  // :: (number, number, ?Fragment, ?number, ?number) → bool\n  // Test whether replacing the range between `from` and `to` (by\n  // child index) with the given replacement fragment (which defaults\n  // to the empty fragment) would leave the node's content valid. You\n  // can optionally pass `start` and `end` indices into the\n  // replacement fragment.\n  canReplace(from, to, replacement = Fragment.empty, start = 0, end = replacement.childCount) {\n    let one = this.contentMatchAt(from).matchFragment(replacement, start, end)\n    let two = one && one.matchFragment(this.content, to)\n    if (!two || !two.validEnd) return false\n    for (let i = start; i < end; i++) if (!this.type.allowsMarks(replacement.child(i).marks)) return false\n    return true\n  }\n\n  // :: (number, number, NodeType, ?[Mark]) → bool\n  // Test whether replacing the range `from` to `to` (by index) with a\n  // node of the given type would leave the node's content valid.\n  canReplaceWith(from, to, type, marks) {\n    if (marks && !this.type.allowsMarks(marks)) return false\n    let start = this.contentMatchAt(from).matchType(type)\n    let end = start && start.matchFragment(this.content, to)\n    return end ? end.validEnd : false\n  }\n\n  // :: (Node) → bool\n  // Test whether the given node's content could be appended to this\n  // node. If that node is empty, this will only return true if there\n  // is at least one node type that can appear in both nodes (to avoid\n  // merging completely incompatible nodes).\n  canAppend(other) {\n    if (other.content.size) return this.canReplace(this.childCount, this.childCount, other.content)\n    else return this.type.compatibleContent(other.type)\n  }\n\n  // :: ()\n  // Check whether this node and its descendants conform to the\n  // schema, and raise error when they do not.\n  check() {\n    if (!this.type.validContent(this.content))\n      throw new RangeError(`Invalid content for node ${this.type.name}: ${this.content.toString().slice(0, 50)}`)\n    this.content.forEach(node => node.check())\n  }\n\n  // :: () → Object\n  // Return a JSON-serializeable representation of this node.\n  toJSON() {\n    let obj = {type: this.type.name}\n    for (let _ in this.attrs) {\n      obj.attrs = this.attrs\n      break\n    }\n    if (this.content.size)\n      obj.content = this.content.toJSON()\n    if (this.marks.length)\n      obj.marks = this.marks.map(n => n.toJSON())\n    return obj\n  }\n\n  // :: (Schema, Object) → Node\n  // Deserialize a node from its JSON representation.\n  static fromJSON(schema, json) {\n    if (!json) throw new RangeError(\"Invalid input for Node.fromJSON\")\n    let marks = null\n    if (json.marks) {\n      if (!Array.isArray(json.marks)) throw new RangeError(\"Invalid mark data for Node.fromJSON\")\n      marks = json.marks.map(schema.markFromJSON)\n    }\n    if (json.type == \"text\") {\n      if (typeof json.text != \"string\") throw new RangeError(\"Invalid text node in JSON\")\n      return schema.text(json.text, marks)\n    }\n    let content = Fragment.fromJSON(schema, json.content)\n    return schema.nodeType(json.type).create(json.attrs, content, marks)\n  }\n}\n\nexport class TextNode extends Node {\n  constructor(type, attrs, content, marks) {\n    super(type, attrs, null, marks)\n\n    if (!content) throw new RangeError(\"Empty text nodes are not allowed\")\n\n    this.text = content\n  }\n\n  toString() {\n    if (this.type.spec.toDebugString) return this.type.spec.toDebugString(this)\n    return wrapMarks(this.marks, JSON.stringify(this.text))\n  }\n\n  get textContent() { return this.text }\n\n  textBetween(from, to) { return this.text.slice(from, to) }\n\n  get nodeSize() { return this.text.length }\n\n  mark(marks) {\n    return marks == this.marks ? this : new TextNode(this.type, this.attrs, this.text, marks)\n  }\n\n  withText(text) {\n    if (text == this.text) return this\n    return new TextNode(this.type, this.attrs, text, this.marks)\n  }\n\n  cut(from = 0, to = this.text.length) {\n    if (from == 0 && to == this.text.length) return this\n    return this.withText(this.text.slice(from, to))\n  }\n\n  eq(other) {\n    return this.sameMarkup(other) && this.text == other.text\n  }\n\n  toJSON() {\n    let base = super.toJSON()\n    base.text = this.text\n    return base\n  }\n}\n\nfunction wrapMarks(marks, str) {\n  for (let i = marks.length - 1; i >= 0; i--)\n    str = marks[i].type.name + \"(\" + str + \")\"\n  return str\n}\n","import {Fragment} from \"./fragment\"\n\n// ::- Instances of this class represent a match state of a node\n// type's [content expression](#model.NodeSpec.content), and can be\n// used to find out whether further content matches here, and whether\n// a given position is a valid end of the node.\nexport class ContentMatch {\n  constructor(validEnd) {\n    // :: bool\n    // True when this match state represents a valid end of the node.\n    this.validEnd = validEnd\n    this.next = []\n    this.wrapCache = []\n  }\n\n  static parse(string, nodeTypes) {\n    let stream = new TokenStream(string, nodeTypes)\n    if (stream.next == null) return ContentMatch.empty\n    let expr = parseExpr(stream)\n    if (stream.next) stream.err(\"Unexpected trailing text\")\n    let match = dfa(nfa(expr))\n    checkForDeadEnds(match, stream)\n    return match\n  }\n\n  // :: (NodeType) → ?ContentMatch\n  // Match a node type, returning a match after that node if\n  // successful.\n  matchType(type) {\n    for (let i = 0; i < this.next.length; i += 2)\n      if (this.next[i] == type) return this.next[i + 1]\n    return null\n  }\n\n  // :: (Fragment, ?number, ?number) → ?ContentMatch\n  // Try to match a fragment. Returns the resulting match when\n  // successful.\n  matchFragment(frag, start = 0, end = frag.childCount) {\n    let cur = this\n    for (let i = start; cur && i < end; i++)\n      cur = cur.matchType(frag.child(i).type)\n    return cur\n  }\n\n  get inlineContent() {\n    let first = this.next[0]\n    return first ? first.isInline : false\n  }\n\n  // :: ?NodeType\n  // Get the first matching node type at this match position that can\n  // be generated.\n  get defaultType() {\n    for (let i = 0; i < this.next.length; i += 2) {\n      let type = this.next[i]\n      if (!(type.isText || type.hasRequiredAttrs())) return type\n    }\n  }\n\n  compatible(other) {\n    for (let i = 0; i < this.next.length; i += 2)\n      for (let j = 0; j < other.next.length; j += 2)\n        if (this.next[i] == other.next[j]) return true\n    return false\n  }\n\n  // :: (Fragment, bool, ?number) → ?Fragment\n  // Try to match the given fragment, and if that fails, see if it can\n  // be made to match by inserting nodes in front of it. When\n  // successful, return a fragment of inserted nodes (which may be\n  // empty if nothing had to be inserted). When `toEnd` is true, only\n  // return a fragment if the resulting match goes to the end of the\n  // content expression.\n  fillBefore(after, toEnd = false, startIndex = 0) {\n    let seen = [this]\n    function search(match, types) {\n      let finished = match.matchFragment(after, startIndex)\n      if (finished && (!toEnd || finished.validEnd))\n        return Fragment.from(types.map(tp => tp.createAndFill()))\n\n      for (let i = 0; i < match.next.length; i += 2) {\n        let type = match.next[i], next = match.next[i + 1]\n        if (!(type.isText || type.hasRequiredAttrs()) && seen.indexOf(next) == -1) {\n          seen.push(next)\n          let found = search(next, types.concat(type))\n          if (found) return found\n        }\n      }\n    }\n\n    return search(this, [])\n  }\n\n  // :: (NodeType) → ?[NodeType]\n  // Find a set of wrapping node types that would allow a node of the\n  // given type to appear at this position. The result may be empty\n  // (when it fits directly) and will be null when no such wrapping\n  // exists.\n  findWrapping(target) {\n    for (let i = 0; i < this.wrapCache.length; i += 2)\n      if (this.wrapCache[i] == target) return this.wrapCache[i + 1]\n    let computed = this.computeWrapping(target)\n    this.wrapCache.push(target, computed)\n    return computed\n  }\n\n  computeWrapping(target) {\n    let seen = Object.create(null), active = [{match: this, type: null, via: null}]\n    while (active.length) {\n      let current = active.shift(), match = current.match\n      if (match.matchType(target)) {\n        let result = []\n        for (let obj = current; obj.type; obj = obj.via)\n          result.push(obj.type)\n        return result.reverse()\n      }\n      for (let i = 0; i < match.next.length; i += 2) {\n        let type = match.next[i]\n        if (!type.isLeaf && !type.hasRequiredAttrs() && !(type.name in seen) && (!current.type || match.next[i + 1].validEnd)) {\n          active.push({match: type.contentMatch, type, via: current})\n          seen[type.name] = true\n        }\n      }\n    }\n  }\n\n  // :: number\n  // The number of outgoing edges this node has in the finite\n  // automaton that describes the content expression.\n  get edgeCount() {\n    return this.next.length >> 1\n  }\n\n  // :: (number) → {type: NodeType, next: ContentMatch}\n  // Get the _n_​th outgoing edge from this node in the finite\n  // automaton that describes the content expression.\n  edge(n) {\n    let i = n << 1\n    if (i >= this.next.length) throw new RangeError(`There's no ${n}th edge in this content match`)\n    return {type: this.next[i], next: this.next[i + 1]}\n  }\n\n  toString() {\n    let seen = []\n    function scan(m) {\n      seen.push(m)\n      for (let i = 1; i < m.next.length; i += 2)\n        if (seen.indexOf(m.next[i]) == -1) scan(m.next[i])\n    }\n    scan(this)\n    return seen.map((m, i) => {\n      let out = i + (m.validEnd ? \"*\" : \" \") + \" \"\n      for (let i = 0; i < m.next.length; i += 2)\n        out += (i ? \", \" : \"\") + m.next[i].name + \"->\" + seen.indexOf(m.next[i + 1])\n      return out\n    }).join(\"\\n\")\n  }\n}\n\nContentMatch.empty = new ContentMatch(true)\n\nclass TokenStream {\n  constructor(string, nodeTypes) {\n    this.string = string\n    this.nodeTypes = nodeTypes\n    this.inline = null\n    this.pos = 0\n    this.tokens = string.split(/\\s*(?=\\b|\\W|$)/)\n    if (this.tokens[this.tokens.length - 1] == \"\") this.tokens.pop()\n    if (this.tokens[0] == \"\") this.tokens.shift()\n  }\n\n  get next() { return this.tokens[this.pos] }\n\n  eat(tok) { return this.next == tok && (this.pos++ || true) }\n\n  err(str) { throw new SyntaxError(str + \" (in content expression '\" + this.string + \"')\") }\n}\n\nfunction parseExpr(stream) {\n  let exprs = []\n  do { exprs.push(parseExprSeq(stream)) }\n  while (stream.eat(\"|\"))\n  return exprs.length == 1 ? exprs[0] : {type: \"choice\", exprs}\n}\n\nfunction parseExprSeq(stream) {\n  let exprs = []\n  do { exprs.push(parseExprSubscript(stream)) }\n  while (stream.next && stream.next != \")\" && stream.next != \"|\")\n  return exprs.length == 1 ? exprs[0] : {type: \"seq\", exprs}\n}\n\nfunction parseExprSubscript(stream) {\n  let expr = parseExprAtom(stream)\n  for (;;) {\n    if (stream.eat(\"+\"))\n      expr = {type: \"plus\", expr}\n    else if (stream.eat(\"*\"))\n      expr = {type: \"star\", expr}\n    else if (stream.eat(\"?\"))\n      expr = {type: \"opt\", expr}\n    else if (stream.eat(\"{\"))\n      expr = parseExprRange(stream, expr)\n    else break\n  }\n  return expr\n}\n\nfunction parseNum(stream) {\n  if (/\\D/.test(stream.next)) stream.err(\"Expected number, got '\" + stream.next + \"'\")\n  let result = Number(stream.next)\n  stream.pos++\n  return result\n}\n\nfunction parseExprRange(stream, expr) {\n  let min = parseNum(stream), max = min\n  if (stream.eat(\",\")) {\n    if (stream.next != \"}\") max = parseNum(stream)\n    else max = -1\n  }\n  if (!stream.eat(\"}\")) stream.err(\"Unclosed braced range\")\n  return {type: \"range\", min, max, expr}\n}\n\nfunction resolveName(stream, name) {\n  let types = stream.nodeTypes, type = types[name]\n  if (type) return [type]\n  let result = []\n  for (let typeName in types) {\n    let type = types[typeName]\n    if (type.groups.indexOf(name) > -1) result.push(type)\n  }\n  if (result.length == 0) stream.err(\"No node type or group '\" + name + \"' found\")\n  return result\n}\n\nfunction parseExprAtom(stream) {\n  if (stream.eat(\"(\")) {\n    let expr = parseExpr(stream)\n    if (!stream.eat(\")\")) stream.err(\"Missing closing paren\")\n    return expr\n  } else if (!/\\W/.test(stream.next)) {\n    let exprs = resolveName(stream, stream.next).map(type => {\n      if (stream.inline == null) stream.inline = type.isInline\n      else if (stream.inline != type.isInline) stream.err(\"Mixing inline and block content\")\n      return {type: \"name\", value: type}\n    })\n    stream.pos++\n    return exprs.length == 1 ? exprs[0] : {type: \"choice\", exprs}\n  } else {\n    stream.err(\"Unexpected token '\" + stream.next + \"'\")\n  }\n}\n\n// The code below helps compile a regular-expression-like language\n// into a deterministic finite automaton. For a good introduction to\n// these concepts, see https://swtch.com/~rsc/regexp/regexp1.html\n\n// : (Object) → [[{term: ?any, to: number}]]\n// Construct an NFA from an expression as returned by the parser. The\n// NFA is represented as an array of states, which are themselves\n// arrays of edges, which are `{term, to}` objects. The first state is\n// the entry state and the last node is the success state.\n//\n// Note that unlike typical NFAs, the edge ordering in this one is\n// significant, in that it is used to contruct filler content when\n// necessary.\nfunction nfa(expr) {\n  let nfa = [[]]\n  connect(compile(expr, 0), node())\n  return nfa\n\n  function node() { return nfa.push([]) - 1 }\n  function edge(from, to, term) {\n    let edge = {term, to}\n    nfa[from].push(edge)\n    return edge\n  }\n  function connect(edges, to) { edges.forEach(edge => edge.to = to) }\n\n  function compile(expr, from) {\n    if (expr.type == \"choice\") {\n      return expr.exprs.reduce((out, expr) => out.concat(compile(expr, from)), [])\n    } else if (expr.type == \"seq\") {\n      for (let i = 0;; i++) {\n        let next = compile(expr.exprs[i], from)\n        if (i == expr.exprs.length - 1) return next\n        connect(next, from = node())\n      }\n    } else if (expr.type == \"star\") {\n      let loop = node()\n      edge(from, loop)\n      connect(compile(expr.expr, loop), loop)\n      return [edge(loop)]\n    } else if (expr.type == \"plus\") {\n      let loop = node()\n      connect(compile(expr.expr, from), loop)\n      connect(compile(expr.expr, loop), loop)\n      return [edge(loop)]\n    } else if (expr.type == \"opt\") {\n      return [edge(from)].concat(compile(expr.expr, from))\n    } else if (expr.type == \"range\") {\n      let cur = from\n      for (let i = 0; i < expr.min; i++) {\n        let next = node()\n        connect(compile(expr.expr, cur), next)\n        cur = next\n      }\n      if (expr.max == -1) {\n        connect(compile(expr.expr, cur), cur)\n      } else {\n        for (let i = expr.min; i < expr.max; i++) {\n          let next = node()\n          edge(cur, next)\n          connect(compile(expr.expr, cur), next)\n          cur = next\n        }\n      }\n      return [edge(cur)]\n    } else if (expr.type == \"name\") {\n      return [edge(from, null, expr.value)]\n    }\n  }\n}\n\nfunction cmp(a, b) { return b - a }\n\n// Get the set of nodes reachable by null edges from `node`. Omit\n// nodes with only a single null-out-edge, since they may lead to\n// needless duplicated nodes.\nfunction nullFrom(nfa, node) {\n  let result = []\n  scan(node)\n  return result.sort(cmp)\n\n  function scan(node) {\n    let edges = nfa[node]\n    if (edges.length == 1 && !edges[0].term) return scan(edges[0].to)\n    result.push(node)\n    for (let i = 0; i < edges.length; i++) {\n      let {term, to} = edges[i]\n      if (!term && result.indexOf(to) == -1) scan(to)\n    }\n  }\n}\n\n// : ([[{term: ?any, to: number}]]) → ContentMatch\n// Compiles an NFA as produced by `nfa` into a DFA, modeled as a set\n// of state objects (`ContentMatch` instances) with transitions\n// between them.\nfunction dfa(nfa) {\n  let labeled = Object.create(null)\n  return explore(nullFrom(nfa, 0))\n\n  function explore(states) {\n    let out = []\n    states.forEach(node => {\n      nfa[node].forEach(({term, to}) => {\n        if (!term) return\n        let known = out.indexOf(term), set = known > -1 && out[known + 1]\n        nullFrom(nfa, to).forEach(node => {\n          if (!set) out.push(term, set = [])\n          if (set.indexOf(node) == -1) set.push(node)\n        })\n      })\n    })\n    let state = labeled[states.join(\",\")] = new ContentMatch(states.indexOf(nfa.length - 1) > -1)\n    for (let i = 0; i < out.length; i += 2) {\n      let states = out[i + 1].sort(cmp)\n      state.next.push(out[i], labeled[states.join(\",\")] || explore(states))\n    }\n    return state\n  }\n}\n\nfunction checkForDeadEnds(match, stream) {\n  for (let i = 0, work = [match]; i < work.length; i++) {\n    let state = work[i], dead = !state.validEnd, nodes = []\n    for (let j = 0; j < state.next.length; j += 2) {\n      let node = state.next[j], next = state.next[j + 1]\n      nodes.push(node.name)\n      if (dead && !(node.isText || node.hasRequiredAttrs())) dead = false\n      if (work.indexOf(next) == -1) work.push(next)\n    }\n    if (dead) stream.err(\"Only non-generatable nodes (\" + nodes.join(\", \") + \") in a required position (see https://prosemirror.net/docs/guide/#generatable)\")\n  }\n}\n","import OrderedMap from \"orderedmap\"\n\nimport {Node, TextNode} from \"./node\"\nimport {Fragment} from \"./fragment\"\nimport {Mark} from \"./mark\"\nimport {ContentMatch} from \"./content\"\n\n// For node types where all attrs have a default value (or which don't\n// have any attributes), build up a single reusable default attribute\n// object, and use it for all nodes that don't specify specific\n// attributes.\nfunction defaultAttrs(attrs) {\n  let defaults = Object.create(null)\n  for (let attrName in attrs) {\n    let attr = attrs[attrName]\n    if (!attr.hasDefault) return null\n    defaults[attrName] = attr.default\n  }\n  return defaults\n}\n\nfunction computeAttrs(attrs, value) {\n  let built = Object.create(null)\n  for (let name in attrs) {\n    let given = value && value[name]\n    if (given === undefined) {\n      let attr = attrs[name]\n      if (attr.hasDefault) given = attr.default\n      else throw new RangeError(\"No value supplied for attribute \" + name)\n    }\n    built[name] = given\n  }\n  return built\n}\n\nfunction initAttrs(attrs) {\n  let result = Object.create(null)\n  if (attrs) for (let name in attrs) result[name] = new Attribute(attrs[name])\n  return result\n}\n\n// ::- Node types are objects allocated once per `Schema` and used to\n// [tag](#model.Node.type) `Node` instances. They contain information\n// about the node type, such as its name and what kind of node it\n// represents.\nexport class NodeType {\n  constructor(name, schema, spec) {\n    // :: string\n    // The name the node type has in this schema.\n    this.name = name\n\n    // :: Schema\n    // A link back to the `Schema` the node type belongs to.\n    this.schema = schema\n\n    // :: NodeSpec\n    // The spec that this type is based on\n    this.spec = spec\n\n    this.groups = spec.group ? spec.group.split(\" \") : []\n    this.attrs = initAttrs(spec.attrs)\n\n    this.defaultAttrs = defaultAttrs(this.attrs)\n\n    // :: ContentMatch\n    // The starting match of the node type's content expression.\n    this.contentMatch = null\n\n    // : ?[MarkType]\n    // The set of marks allowed in this node. `null` means all marks\n    // are allowed.\n    this.markSet = null\n\n    // :: bool\n    // True if this node type has inline content.\n    this.inlineContent = null\n\n    // :: bool\n    // True if this is a block type\n    this.isBlock = !(spec.inline || name == \"text\")\n\n    // :: bool\n    // True if this is the text node type.\n    this.isText = name == \"text\"\n  }\n\n  // :: bool\n  // True if this is an inline type.\n  get isInline() { return !this.isBlock }\n\n  // :: bool\n  // True if this is a textblock type, a block that contains inline\n  // content.\n  get isTextblock() { return this.isBlock && this.inlineContent }\n\n  // :: bool\n  // True for node types that allow no content.\n  get isLeaf() { return this.contentMatch == ContentMatch.empty }\n\n  // :: bool\n  // True when this node is an atom, i.e. when it does not have\n  // directly editable content.\n  get isAtom() { return this.isLeaf || this.spec.atom }\n\n  // :: () → bool\n  // Tells you whether this node type has any required attributes.\n  hasRequiredAttrs() {\n    for (let n in this.attrs) if (this.attrs[n].isRequired) return true\n    return false\n  }\n\n  compatibleContent(other) {\n    return this == other || this.contentMatch.compatible(other.contentMatch)\n  }\n\n  computeAttrs(attrs) {\n    if (!attrs && this.defaultAttrs) return this.defaultAttrs\n    else return computeAttrs(this.attrs, attrs)\n  }\n\n  // :: (?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → Node\n  // Create a `Node` of this type. The given attributes are\n  // checked and defaulted (you can pass `null` to use the type's\n  // defaults entirely, if no required attributes exist). `content`\n  // may be a `Fragment`, a node, an array of nodes, or\n  // `null`. Similarly `marks` may be `null` to default to the empty\n  // set of marks.\n  create(attrs, content, marks) {\n    if (this.isText) throw new Error(\"NodeType.create can't construct text nodes\")\n    return new Node(this, this.computeAttrs(attrs), Fragment.from(content), Mark.setFrom(marks))\n  }\n\n  // :: (?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → Node\n  // Like [`create`](#model.NodeType.create), but check the given content\n  // against the node type's content restrictions, and throw an error\n  // if it doesn't match.\n  createChecked(attrs, content, marks) {\n    content = Fragment.from(content)\n    if (!this.validContent(content))\n      throw new RangeError(\"Invalid content for node \" + this.name)\n    return new Node(this, this.computeAttrs(attrs), content, Mark.setFrom(marks))\n  }\n\n  // :: (?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → ?Node\n  // Like [`create`](#model.NodeType.create), but see if it is necessary to\n  // add nodes to the start or end of the given fragment to make it\n  // fit the node. If no fitting wrapping can be found, return null.\n  // Note that, due to the fact that required nodes can always be\n  // created, this will always succeed if you pass null or\n  // `Fragment.empty` as content.\n  createAndFill(attrs, content, marks) {\n    attrs = this.computeAttrs(attrs)\n    content = Fragment.from(content)\n    if (content.size) {\n      let before = this.contentMatch.fillBefore(content)\n      if (!before) return null\n      content = before.append(content)\n    }\n    let after = this.contentMatch.matchFragment(content).fillBefore(Fragment.empty, true)\n    if (!after) return null\n    return new Node(this, attrs, content.append(after), Mark.setFrom(marks))\n  }\n\n  // :: (Fragment) → bool\n  // Returns true if the given fragment is valid content for this node\n  // type with the given attributes.\n  validContent(content) {\n    let result = this.contentMatch.matchFragment(content)\n    if (!result || !result.validEnd) return false\n    for (let i = 0; i < content.childCount; i++)\n      if (!this.allowsMarks(content.child(i).marks)) return false\n    return true\n  }\n\n  // :: (MarkType) → bool\n  // Check whether the given mark type is allowed in this node.\n  allowsMarkType(markType) {\n    return this.markSet == null || this.markSet.indexOf(markType) > -1\n  }\n\n  // :: ([Mark]) → bool\n  // Test whether the given set of marks are allowed in this node.\n  allowsMarks(marks) {\n    if (this.markSet == null) return true\n    for (let i = 0; i < marks.length; i++) if (!this.allowsMarkType(marks[i].type)) return false\n    return true\n  }\n\n  // :: ([Mark]) → [Mark]\n  // Removes the marks that are not allowed in this node from the given set.\n  allowedMarks(marks) {\n    if (this.markSet == null) return marks\n    let copy\n    for (let i = 0; i < marks.length; i++) {\n      if (!this.allowsMarkType(marks[i].type)) {\n        if (!copy) copy = marks.slice(0, i)\n      } else if (copy) {\n        copy.push(marks[i])\n      }\n    }\n    return !copy ? marks : copy.length ? copy : Mark.empty\n  }\n\n  static compile(nodes, schema) {\n    let result = Object.create(null)\n    nodes.forEach((name, spec) => result[name] = new NodeType(name, schema, spec))\n\n    let topType = schema.spec.topNode || \"doc\"\n    if (!result[topType]) throw new RangeError(\"Schema is missing its top node type ('\" + topType + \"')\")\n    if (!result.text) throw new RangeError(\"Every schema needs a 'text' type\")\n    for (let _ in result.text.attrs) throw new RangeError(\"The text node type should not have attributes\")\n\n    return result\n  }\n}\n\n// Attribute descriptors\n\nclass Attribute {\n  constructor(options) {\n    this.hasDefault = Object.prototype.hasOwnProperty.call(options, \"default\")\n    this.default = options.default\n  }\n\n  get isRequired() {\n    return !this.hasDefault\n  }\n}\n\n// Marks\n\n// ::- Like nodes, marks (which are associated with nodes to signify\n// things like emphasis or being part of a link) are\n// [tagged](#model.Mark.type) with type objects, which are\n// instantiated once per `Schema`.\nexport class MarkType {\n  constructor(name, rank, schema, spec) {\n    // :: string\n    // The name of the mark type.\n    this.name = name\n\n    // :: Schema\n    // The schema that this mark type instance is part of.\n    this.schema = schema\n\n    // :: MarkSpec\n    // The spec on which the type is based.\n    this.spec = spec\n\n    this.attrs = initAttrs(spec.attrs)\n\n    this.rank = rank\n    this.excluded = null\n    let defaults = defaultAttrs(this.attrs)\n    this.instance = defaults && new Mark(this, defaults)\n  }\n\n  // :: (?Object) → Mark\n  // Create a mark of this type. `attrs` may be `null` or an object\n  // containing only some of the mark's attributes. The others, if\n  // they have defaults, will be added.\n  create(attrs) {\n    if (!attrs && this.instance) return this.instance\n    return new Mark(this, computeAttrs(this.attrs, attrs))\n  }\n\n  static compile(marks, schema) {\n    let result = Object.create(null), rank = 0\n    marks.forEach((name, spec) => result[name] = new MarkType(name, rank++, schema, spec))\n    return result\n  }\n\n  // :: ([Mark]) → [Mark]\n  // When there is a mark of this type in the given set, a new set\n  // without it is returned. Otherwise, the input set is returned.\n  removeFromSet(set) {\n    for (var i = 0; i < set.length; i++) if (set[i].type == this) {\n      set = set.slice(0, i).concat(set.slice(i + 1))\n      i--\n    }\n    return set\n  }\n\n  // :: ([Mark]) → ?Mark\n  // Tests whether there is a mark of this type in the given set.\n  isInSet(set) {\n    for (let i = 0; i < set.length; i++)\n      if (set[i].type == this) return set[i]\n  }\n\n  // :: (MarkType) → bool\n  // Queries whether a given mark type is\n  // [excluded](#model.MarkSpec.excludes) by this one.\n  excludes(other) {\n    return this.excluded.indexOf(other) > -1\n  }\n}\n\n// SchemaSpec:: interface\n// An object describing a schema, as passed to the [`Schema`](#model.Schema)\n// constructor.\n//\n//   nodes:: union<Object<NodeSpec>, OrderedMap<NodeSpec>>\n//   The node types in this schema. Maps names to\n//   [`NodeSpec`](#model.NodeSpec) objects that describe the node type\n//   associated with that name. Their order is significant—it\n//   determines which [parse rules](#model.NodeSpec.parseDOM) take\n//   precedence by default, and which nodes come first in a given\n//   [group](#model.NodeSpec.group).\n//\n//   marks:: ?union<Object<MarkSpec>, OrderedMap<MarkSpec>>\n//   The mark types that exist in this schema. The order in which they\n//   are provided determines the order in which [mark\n//   sets](#model.Mark.addToSet) are sorted and in which [parse\n//   rules](#model.MarkSpec.parseDOM) are tried.\n//\n//   topNode:: ?string\n//   The name of the default top-level node for the schema. Defaults\n//   to `\"doc\"`.\n\n// NodeSpec:: interface\n//\n//   content:: ?string\n//   The content expression for this node, as described in the [schema\n//   guide](/docs/guide/#schema.content_expressions). When not given,\n//   the node does not allow any content.\n//\n//   marks:: ?string\n//   The marks that are allowed inside of this node. May be a\n//   space-separated string referring to mark names or groups, `\"_\"`\n//   to explicitly allow all marks, or `\"\"` to disallow marks. When\n//   not given, nodes with inline content default to allowing all\n//   marks, other nodes default to not allowing marks.\n//\n//   group:: ?string\n//   The group or space-separated groups to which this node belongs,\n//   which can be referred to in the content expressions for the\n//   schema.\n//\n//   inline:: ?bool\n//   Should be set to true for inline nodes. (Implied for text nodes.)\n//\n//   atom:: ?bool\n//   Can be set to true to indicate that, though this isn't a [leaf\n//   node](#model.NodeType.isLeaf), it doesn't have directly editable\n//   content and should be treated as a single unit in the view.\n//\n//   attrs:: ?Object<AttributeSpec>\n//   The attributes that nodes of this type get.\n//\n//   selectable:: ?bool\n//   Controls whether nodes of this type can be selected as a [node\n//   selection](#state.NodeSelection). Defaults to true for non-text\n//   nodes.\n//\n//   draggable:: ?bool\n//   Determines whether nodes of this type can be dragged without\n//   being selected. Defaults to false.\n//\n//   code:: ?bool\n//   Can be used to indicate that this node contains code, which\n//   causes some commands to behave differently.\n//\n//   defining:: ?bool\n//   Determines whether this node is considered an important parent\n//   node during replace operations (such as paste). Non-defining (the\n//   default) nodes get dropped when their entire content is replaced,\n//   whereas defining nodes persist and wrap the inserted content.\n//   Likewise, in _inserted_ content the defining parents of the\n//   content are preserved when possible. Typically,\n//   non-default-paragraph textblock types, and possibly list items,\n//   are marked as defining.\n//\n//   isolating:: ?bool\n//   When enabled (default is false), the sides of nodes of this type\n//   count as boundaries that regular editing operations, like\n//   backspacing or lifting, won't cross. An example of a node that\n//   should probably have this enabled is a table cell.\n//\n//   toDOM:: ?(node: Node) → DOMOutputSpec\n//   Defines the default way a node of this type should be serialized\n//   to DOM/HTML (as used by\n//   [`DOMSerializer.fromSchema`](#model.DOMSerializer^fromSchema)).\n//   Should return a DOM node or an [array\n//   structure](#model.DOMOutputSpec) that describes one, with an\n//   optional number zero (“hole”) in it to indicate where the node's\n//   content should be inserted.\n//\n//   For text nodes, the default is to create a text DOM node. Though\n//   it is possible to create a serializer where text is rendered\n//   differently, this is not supported inside the editor, so you\n//   shouldn't override that in your text node spec.\n//\n//   parseDOM:: ?[ParseRule]\n//   Associates DOM parser information with this node, which can be\n//   used by [`DOMParser.fromSchema`](#model.DOMParser^fromSchema) to\n//   automatically derive a parser. The `node` field in the rules is\n//   implied (the name of this node will be filled in automatically).\n//   If you supply your own parser, you do not need to also specify\n//   parsing rules in your schema.\n//\n//   toDebugString:: ?(node: Node) -> string\n//   Defines the default way a node of this type should be serialized\n//   to a string representation for debugging (e.g. in error messages).\n\n// MarkSpec:: interface\n//\n//   attrs:: ?Object<AttributeSpec>\n//   The attributes that marks of this type get.\n//\n//   inclusive:: ?bool\n//   Whether this mark should be active when the cursor is positioned\n//   at its end (or at its start when that is also the start of the\n//   parent node). Defaults to true.\n//\n//   excludes:: ?string\n//   Determines which other marks this mark can coexist with. Should\n//   be a space-separated strings naming other marks or groups of marks.\n//   When a mark is [added](#model.Mark.addToSet) to a set, all marks\n//   that it excludes are removed in the process. If the set contains\n//   any mark that excludes the new mark but is not, itself, excluded\n//   by the new mark, the mark can not be added an the set. You can\n//   use the value `\"_\"` to indicate that the mark excludes all\n//   marks in the schema.\n//\n//   Defaults to only being exclusive with marks of the same type. You\n//   can set it to an empty string (or any string not containing the\n//   mark's own name) to allow multiple marks of a given type to\n//   coexist (as long as they have different attributes).\n//\n//   group:: ?string\n//   The group or space-separated groups to which this mark belongs.\n//\n//   spanning:: ?bool\n//   Determines whether marks of this type can span multiple adjacent\n//   nodes when serialized to DOM/HTML. Defaults to true.\n//\n//   toDOM:: ?(mark: Mark, inline: bool) → DOMOutputSpec\n//   Defines the default way marks of this type should be serialized\n//   to DOM/HTML. When the resulting spec contains a hole, that is\n//   where the marked content is placed. Otherwise, it is appended to\n//   the top node.\n//\n//   parseDOM:: ?[ParseRule]\n//   Associates DOM parser information with this mark (see the\n//   corresponding [node spec field](#model.NodeSpec.parseDOM)). The\n//   `mark` field in the rules is implied.\n\n// AttributeSpec:: interface\n//\n// Used to [define](#model.NodeSpec.attrs) attributes on nodes or\n// marks.\n//\n//   default:: ?any\n//   The default value for this attribute, to use when no explicit\n//   value is provided. Attributes that have no default must be\n//   provided whenever a node or mark of a type that has them is\n//   created.\n\n// ::- A document schema. Holds [node](#model.NodeType) and [mark\n// type](#model.MarkType) objects for the nodes and marks that may\n// occur in conforming documents, and provides functionality for\n// creating and deserializing such documents.\nexport class Schema {\n  // :: (SchemaSpec)\n  // Construct a schema from a schema [specification](#model.SchemaSpec).\n  constructor(spec) {\n    // :: SchemaSpec\n    // The [spec](#model.SchemaSpec) on which the schema is based,\n    // with the added guarantee that its `nodes` and `marks`\n    // properties are\n    // [`OrderedMap`](https://github.com/marijnh/orderedmap) instances\n    // (not raw objects).\n    this.spec = {}\n    for (let prop in spec) this.spec[prop] = spec[prop]\n    this.spec.nodes = OrderedMap.from(spec.nodes)\n    this.spec.marks = OrderedMap.from(spec.marks)\n\n    // :: Object<NodeType>\n    // An object mapping the schema's node names to node type objects.\n    this.nodes = NodeType.compile(this.spec.nodes, this)\n\n    // :: Object<MarkType>\n    // A map from mark names to mark type objects.\n    this.marks = MarkType.compile(this.spec.marks, this)\n\n    let contentExprCache = Object.create(null)\n    for (let prop in this.nodes) {\n      if (prop in this.marks)\n        throw new RangeError(prop + \" can not be both a node and a mark\")\n      let type = this.nodes[prop], contentExpr = type.spec.content || \"\", markExpr = type.spec.marks\n      type.contentMatch = contentExprCache[contentExpr] ||\n        (contentExprCache[contentExpr] = ContentMatch.parse(contentExpr, this.nodes))\n      type.inlineContent = type.contentMatch.inlineContent\n      type.markSet = markExpr == \"_\" ? null :\n        markExpr ? gatherMarks(this, markExpr.split(\" \")) :\n        markExpr == \"\" || !type.inlineContent ? [] : null\n    }\n    for (let prop in this.marks) {\n      let type = this.marks[prop], excl = type.spec.excludes\n      type.excluded = excl == null ? [type] : excl == \"\" ? [] : gatherMarks(this, excl.split(\" \"))\n    }\n\n    this.nodeFromJSON = this.nodeFromJSON.bind(this)\n    this.markFromJSON = this.markFromJSON.bind(this)\n\n    // :: NodeType\n    // The type of the [default top node](#model.SchemaSpec.topNode)\n    // for this schema.\n    this.topNodeType = this.nodes[this.spec.topNode || \"doc\"]\n\n    // :: Object\n    // An object for storing whatever values modules may want to\n    // compute and cache per schema. (If you want to store something\n    // in it, try to use property names unlikely to clash.)\n    this.cached = Object.create(null)\n    this.cached.wrappings = Object.create(null)\n  }\n\n  // :: (union<string, NodeType>, ?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → Node\n  // Create a node in this schema. The `type` may be a string or a\n  // `NodeType` instance. Attributes will be extended\n  // with defaults, `content` may be a `Fragment`,\n  // `null`, a `Node`, or an array of nodes.\n  node(type, attrs, content, marks) {\n    if (typeof type == \"string\")\n      type = this.nodeType(type)\n    else if (!(type instanceof NodeType))\n      throw new RangeError(\"Invalid node type: \" + type)\n    else if (type.schema != this)\n      throw new RangeError(\"Node type from different schema used (\" + type.name + \")\")\n\n    return type.createChecked(attrs, content, marks)\n  }\n\n  // :: (string, ?[Mark]) → Node\n  // Create a text node in the schema. Empty text nodes are not\n  // allowed.\n  text(text, marks) {\n    let type = this.nodes.text\n    return new TextNode(type, type.defaultAttrs, text, Mark.setFrom(marks))\n  }\n\n  // :: (union<string, MarkType>, ?Object) → Mark\n  // Create a mark with the given type and attributes.\n  mark(type, attrs) {\n    if (typeof type == \"string\") type = this.marks[type]\n    return type.create(attrs)\n  }\n\n  // :: (Object) → Node\n  // Deserialize a node from its JSON representation. This method is\n  // bound.\n  nodeFromJSON(json) {\n    return Node.fromJSON(this, json)\n  }\n\n  // :: (Object) → Mark\n  // Deserialize a mark from its JSON representation. This method is\n  // bound.\n  markFromJSON(json) {\n    return Mark.fromJSON(this, json)\n  }\n\n  nodeType(name) {\n    let found = this.nodes[name]\n    if (!found) throw new RangeError(\"Unknown node type: \" + name)\n    return found\n  }\n}\n\nfunction gatherMarks(schema, marks) {\n  let found = []\n  for (let i = 0; i < marks.length; i++) {\n    let name = marks[i], mark = schema.marks[name], ok = mark\n    if (mark) {\n      found.push(mark)\n    } else {\n      for (let prop in schema.marks) {\n        let mark = schema.marks[prop]\n        if (name == \"_\" || (mark.spec.group && mark.spec.group.split(\" \").indexOf(name) > -1))\n          found.push(ok = mark)\n      }\n    }\n    if (!ok) throw new SyntaxError(\"Unknown mark type: '\" + marks[i] + \"'\")\n  }\n  return found\n}\n","import {Fragment} from \"./fragment\"\nimport {Slice} from \"./replace\"\nimport {Mark} from \"./mark\"\n\n// ParseOptions:: interface\n// These are the options recognized by the\n// [`parse`](#model.DOMParser.parse) and\n// [`parseSlice`](#model.DOMParser.parseSlice) methods.\n//\n//   preserveWhitespace:: ?union<bool, \"full\">\n//   By default, whitespace is collapsed as per HTML's rules. Pass\n//   `true` to preserve whitespace, but normalize newlines to\n//   spaces, and `\"full\"` to preserve whitespace entirely.\n//\n//   findPositions:: ?[{node: dom.Node, offset: number}]\n//   When given, the parser will, beside parsing the content,\n//   record the document positions of the given DOM positions. It\n//   will do so by writing to the objects, adding a `pos` property\n//   that holds the document position. DOM positions that are not\n//   in the parsed content will not be written to.\n//\n//   from:: ?number\n//   The child node index to start parsing from.\n//\n//   to:: ?number\n//   The child node index to stop parsing at.\n//\n//   topNode:: ?Node\n//   By default, the content is parsed into the schema's default\n//   [top node type](#model.Schema.topNodeType). You can pass this\n//   option to use the type and attributes from a different node\n//   as the top container.\n//\n//   topMatch:: ?ContentMatch\n//   Provide the starting content match that content parsed into the\n//   top node is matched against.\n//\n//   context:: ?ResolvedPos\n//   A set of additional nodes to count as\n//   [context](#model.ParseRule.context) when parsing, above the\n//   given [top node](#model.ParseOptions.topNode).\n\n// ParseRule:: interface\n// A value that describes how to parse a given DOM node or inline\n// style as a ProseMirror node or mark.\n//\n//   tag:: ?string\n//   A CSS selector describing the kind of DOM elements to match. A\n//   single rule should have _either_ a `tag` or a `style` property.\n//\n//   namespace:: ?string\n//   The namespace to match. This should be used with `tag`.\n//   Nodes are only matched when the namespace matches or this property\n//   is null.\n//\n//   style:: ?string\n//   A CSS property name to match. When given, this rule matches\n//   inline styles that list that property. May also have the form\n//   `\"property=value\"`, in which case the rule only matches if the\n//   property's value exactly matches the given value. (For more\n//   complicated filters, use [`getAttrs`](#model.ParseRule.getAttrs)\n//   and return false to indicate that the match failed.) Rules\n//   matching styles may only produce [marks](#model.ParseRule.mark),\n//   not nodes.\n//\n//   priority:: ?number\n//   Can be used to change the order in which the parse rules in a\n//   schema are tried. Those with higher priority come first. Rules\n//   without a priority are counted as having priority 50. This\n//   property is only meaningful in a schema—when directly\n//   constructing a parser, the order of the rule array is used.\n//\n//   consuming:: ?boolean\n//   By default, when a rule matches an element or style, no further\n//   rules get a chance to match it. By setting this to `false`, you\n//   indicate that even when this rule matches, other rules that come\n//   after it should also run.\n//\n//   context:: ?string\n//   When given, restricts this rule to only match when the current\n//   context—the parent nodes into which the content is being\n//   parsed—matches this expression. Should contain one or more node\n//   names or node group names followed by single or double slashes.\n//   For example `\"paragraph/\"` means the rule only matches when the\n//   parent node is a paragraph, `\"blockquote/paragraph/\"` restricts\n//   it to be in a paragraph that is inside a blockquote, and\n//   `\"section//\"` matches any position inside a section—a double\n//   slash matches any sequence of ancestor nodes. To allow multiple\n//   different contexts, they can be separated by a pipe (`|`)\n//   character, as in `\"blockquote/|list_item/\"`.\n//\n//   node:: ?string\n//   The name of the node type to create when this rule matches. Only\n//   valid for rules with a `tag` property, not for style rules. Each\n//   rule should have one of a `node`, `mark`, or `ignore` property\n//   (except when it appears in a [node](#model.NodeSpec.parseDOM) or\n//   [mark spec](#model.MarkSpec.parseDOM), in which case the `node`\n//   or `mark` property will be derived from its position).\n//\n//   mark:: ?string\n//   The name of the mark type to wrap the matched content in.\n//\n//   ignore:: ?bool\n//   When true, ignore content that matches this rule.\n//\n//   closeParent:: ?bool\n//   When true, finding an element that matches this rule will close\n//   the current node.\n//\n//   skip:: ?bool\n//   When true, ignore the node that matches this rule, but do parse\n//   its content.\n//\n//   attrs:: ?Object\n//   Attributes for the node or mark created by this rule. When\n//   `getAttrs` is provided, it takes precedence.\n//\n//   getAttrs:: ?(union<dom.Node, string>) → ?union<Object, false>\n//   A function used to compute the attributes for the node or mark\n//   created by this rule. Can also be used to describe further\n//   conditions the DOM element or style must match. When it returns\n//   `false`, the rule won't match. When it returns null or undefined,\n//   that is interpreted as an empty/default set of attributes.\n//\n//   Called with a DOM Element for `tag` rules, and with a string (the\n//   style's value) for `style` rules.\n//\n//   contentElement:: ?union<string, (dom.Node) → dom.Node>\n//   For `tag` rules that produce non-leaf nodes or marks, by default\n//   the content of the DOM element is parsed as content of the mark\n//   or node. If the child nodes are in a descendent node, this may be\n//   a CSS selector string that the parser must use to find the actual\n//   content element, or a function that returns the actual content\n//   element to the parser.\n//\n//   getContent:: ?(dom.Node, schema: Schema) → Fragment\n//   Can be used to override the content of a matched node. When\n//   present, instead of parsing the node's child nodes, the result of\n//   this function is used.\n//\n//   preserveWhitespace:: ?union<bool, \"full\">\n//   Controls whether whitespace should be preserved when parsing the\n//   content inside the matched element. `false` means whitespace may\n//   be collapsed, `true` means that whitespace should be preserved\n//   but newlines normalized to spaces, and `\"full\"` means that\n//   newlines should also be preserved.\n\n// ::- A DOM parser represents a strategy for parsing DOM content into\n// a ProseMirror document conforming to a given schema. Its behavior\n// is defined by an array of [rules](#model.ParseRule).\nexport class DOMParser {\n  // :: (Schema, [ParseRule])\n  // Create a parser that targets the given schema, using the given\n  // parsing rules.\n  constructor(schema, rules) {\n    // :: Schema\n    // The schema into which the parser parses.\n    this.schema = schema\n    // :: [ParseRule]\n    // The set of [parse rules](#model.ParseRule) that the parser\n    // uses, in order of precedence.\n    this.rules = rules\n    this.tags = []\n    this.styles = []\n\n    rules.forEach(rule => {\n      if (rule.tag) this.tags.push(rule)\n      else if (rule.style) this.styles.push(rule)\n    })\n\n    // Only normalize list elements when lists in the schema can't directly contain themselves\n    this.normalizeLists = !this.tags.some(r => {\n      if (!/^(ul|ol)\\b/.test(r.tag) || !r.node) return false\n      let node = schema.nodes[r.node]\n      return node.contentMatch.matchType(node)\n    })\n  }\n\n  // :: (dom.Node, ?ParseOptions) → Node\n  // Parse a document from the content of a DOM node.\n  parse(dom, options = {}) {\n    let context = new ParseContext(this, options, false)\n    context.addAll(dom, null, options.from, options.to)\n    return context.finish()\n  }\n\n  // :: (dom.Node, ?ParseOptions) → Slice\n  // Parses the content of the given DOM node, like\n  // [`parse`](#model.DOMParser.parse), and takes the same set of\n  // options. But unlike that method, which produces a whole node,\n  // this one returns a slice that is open at the sides, meaning that\n  // the schema constraints aren't applied to the start of nodes to\n  // the left of the input and the end of nodes at the end.\n  parseSlice(dom, options = {}) {\n    let context = new ParseContext(this, options, true)\n    context.addAll(dom, null, options.from, options.to)\n    return Slice.maxOpen(context.finish())\n  }\n\n  matchTag(dom, context, after) {\n    for (let i = after ? this.tags.indexOf(after) + 1 : 0; i < this.tags.length; i++) {\n      let rule = this.tags[i]\n      if (matches(dom, rule.tag) &&\n          (rule.namespace === undefined || dom.namespaceURI == rule.namespace) &&\n          (!rule.context || context.matchesContext(rule.context))) {\n        if (rule.getAttrs) {\n          let result = rule.getAttrs(dom)\n          if (result === false) continue\n          rule.attrs = result\n        }\n        return rule\n      }\n    }\n  }\n\n  matchStyle(prop, value, context, after) {\n    for (let i = after ? this.styles.indexOf(after) + 1 : 0; i < this.styles.length; i++) {\n      let rule = this.styles[i]\n      if (rule.style.indexOf(prop) != 0 ||\n          rule.context && !context.matchesContext(rule.context) ||\n          // Test that the style string either precisely matches the prop,\n          // or has an '=' sign after the prop, followed by the given\n          // value.\n          rule.style.length > prop.length &&\n          (rule.style.charCodeAt(prop.length) != 61 || rule.style.slice(prop.length + 1) != value))\n        continue\n      if (rule.getAttrs) {\n        let result = rule.getAttrs(value)\n        if (result === false) continue\n        rule.attrs = result\n      }\n      return rule\n    }\n  }\n\n  // : (Schema) → [ParseRule]\n  static schemaRules(schema) {\n    let result = []\n    function insert(rule) {\n      let priority = rule.priority == null ? 50 : rule.priority, i = 0\n      for (; i < result.length; i++) {\n        let next = result[i], nextPriority = next.priority == null ? 50 : next.priority\n        if (nextPriority < priority) break\n      }\n      result.splice(i, 0, rule)\n    }\n\n    for (let name in schema.marks) {\n      let rules = schema.marks[name].spec.parseDOM\n      if (rules) rules.forEach(rule => {\n        insert(rule = copy(rule))\n        rule.mark = name\n      })\n    }\n    for (let name in schema.nodes) {\n      let rules = schema.nodes[name].spec.parseDOM\n      if (rules) rules.forEach(rule => {\n        insert(rule = copy(rule))\n        rule.node = name\n      })\n    }\n    return result\n  }\n\n  // :: (Schema) → DOMParser\n  // Construct a DOM parser using the parsing rules listed in a\n  // schema's [node specs](#model.NodeSpec.parseDOM), reordered by\n  // [priority](#model.ParseRule.priority).\n  static fromSchema(schema) {\n    return schema.cached.domParser ||\n      (schema.cached.domParser = new DOMParser(schema, DOMParser.schemaRules(schema)))\n  }\n}\n\n// : Object<bool> The block-level tags in HTML5\nconst blockTags = {\n  address: true, article: true, aside: true, blockquote: true, canvas: true,\n  dd: true, div: true, dl: true, fieldset: true, figcaption: true, figure: true,\n  footer: true, form: true, h1: true, h2: true, h3: true, h4: true, h5: true,\n  h6: true, header: true, hgroup: true, hr: true, li: true, noscript: true, ol: true,\n  output: true, p: true, pre: true, section: true, table: true, tfoot: true, ul: true\n}\n\n// : Object<bool> The tags that we normally ignore.\nconst ignoreTags = {\n  head: true, noscript: true, object: true, script: true, style: true, title: true\n}\n\n// : Object<bool> List tags.\nconst listTags = {ol: true, ul: true}\n\n// Using a bitfield for node context options\nconst OPT_PRESERVE_WS = 1, OPT_PRESERVE_WS_FULL = 2, OPT_OPEN_LEFT = 4\n\nfunction wsOptionsFor(preserveWhitespace) {\n  return (preserveWhitespace ? OPT_PRESERVE_WS : 0) | (preserveWhitespace === \"full\" ? OPT_PRESERVE_WS_FULL : 0)\n}\n\nclass NodeContext {\n  constructor(type, attrs, marks, pendingMarks, solid, match, options) {\n    this.type = type\n    this.attrs = attrs\n    this.solid = solid\n    this.match = match || (options & OPT_OPEN_LEFT ? null : type.contentMatch)\n    this.options = options\n    this.content = []\n    // Marks applied to this node itself\n    this.marks = marks\n    // Marks applied to its children\n    this.activeMarks = Mark.none\n    // Marks that can't apply here, but will be used in children if possible\n    this.pendingMarks = pendingMarks\n    // Nested Marks with same type\n    this.stashMarks = []\n  }\n\n  findWrapping(node) {\n    if (!this.match) {\n      if (!this.type) return []\n      let fill = this.type.contentMatch.fillBefore(Fragment.from(node))\n      if (fill) {\n        this.match = this.type.contentMatch.matchFragment(fill)\n      } else {\n        let start = this.type.contentMatch, wrap\n        if (wrap = start.findWrapping(node.type)) {\n          this.match = start\n          return wrap\n        } else {\n          return null\n        }\n      }\n    }\n    return this.match.findWrapping(node.type)\n  }\n\n  finish(openEnd) {\n    if (!(this.options & OPT_PRESERVE_WS)) { // Strip trailing whitespace\n      let last = this.content[this.content.length - 1], m\n      if (last && last.isText && (m = /[ \\t\\r\\n\\u000c]+$/.exec(last.text))) {\n        if (last.text.length == m[0].length) this.content.pop()\n        else this.content[this.content.length - 1] = last.withText(last.text.slice(0, last.text.length - m[0].length))\n      }\n    }\n    let content = Fragment.from(this.content)\n    if (!openEnd && this.match)\n      content = content.append(this.match.fillBefore(Fragment.empty, true))\n    return this.type ? this.type.create(this.attrs, content, this.marks) : content\n  }\n\n  popFromStashMark(mark) {\n    for (let i = this.stashMarks.length - 1; i >= 0; i--)\n      if (mark.eq(this.stashMarks[i])) return this.stashMarks.splice(i, 1)[0]\n  }\n\n  applyPending(nextType) {\n    for (let i = 0, pending = this.pendingMarks; i < pending.length; i++) {\n      let mark = pending[i]\n      if ((this.type ? this.type.allowsMarkType(mark.type) : markMayApply(mark.type, nextType)) &&\n          !mark.isInSet(this.activeMarks)) {\n        this.activeMarks = mark.addToSet(this.activeMarks)\n        this.pendingMarks = mark.removeFromSet(this.pendingMarks)\n      }\n    }\n  }\n}\n\nclass ParseContext {\n  // : (DOMParser, Object)\n  constructor(parser, options, open) {\n    // : DOMParser The parser we are using.\n    this.parser = parser\n    // : Object The options passed to this parse.\n    this.options = options\n    this.isOpen = open\n    let topNode = options.topNode, topContext\n    let topOptions = wsOptionsFor(options.preserveWhitespace) | (open ? OPT_OPEN_LEFT : 0)\n    if (topNode)\n      topContext = new NodeContext(topNode.type, topNode.attrs, Mark.none, Mark.none, true,\n                                   options.topMatch || topNode.type.contentMatch, topOptions)\n    else if (open)\n      topContext = new NodeContext(null, null, Mark.none, Mark.none, true, null, topOptions)\n    else\n      topContext = new NodeContext(parser.schema.topNodeType, null, Mark.none, Mark.none, true, null, topOptions)\n    this.nodes = [topContext]\n    // : [Mark] The current set of marks\n    this.open = 0\n    this.find = options.findPositions\n    this.needsBlock = false\n  }\n\n  get top() {\n    return this.nodes[this.open]\n  }\n\n  // : (dom.Node)\n  // Add a DOM node to the content. Text is inserted as text node,\n  // otherwise, the node is passed to `addElement` or, if it has a\n  // `style` attribute, `addElementWithStyles`.\n  addDOM(dom) {\n    if (dom.nodeType == 3) {\n      this.addTextNode(dom)\n    } else if (dom.nodeType == 1) {\n      let style = dom.getAttribute(\"style\")\n      let marks = style ? this.readStyles(parseStyles(style)) : null, top = this.top\n      if (marks != null) for (let i = 0; i < marks.length; i++) this.addPendingMark(marks[i])\n      this.addElement(dom)\n      if (marks != null) for (let i = 0; i < marks.length; i++) this.removePendingMark(marks[i], top)\n    }\n  }\n\n  addTextNode(dom) {\n    let value = dom.nodeValue\n    let top = this.top\n    if ((top.type ? top.type.inlineContent : top.content.length && top.content[0].isInline) || /[^ \\t\\r\\n\\u000c]/.test(value)) {\n      if (!(top.options & OPT_PRESERVE_WS)) {\n        value = value.replace(/[ \\t\\r\\n\\u000c]+/g, \" \")\n        // If this starts with whitespace, and there is no node before it, or\n        // a hard break, or a text node that ends with whitespace, strip the\n        // leading space.\n        if (/^[ \\t\\r\\n\\u000c]/.test(value) && this.open == this.nodes.length - 1) {\n          let nodeBefore = top.content[top.content.length - 1]\n          let domNodeBefore = dom.previousSibling\n          if (!nodeBefore ||\n              (domNodeBefore && domNodeBefore.nodeName == 'BR') ||\n              (nodeBefore.isText && /[ \\t\\r\\n\\u000c]$/.test(nodeBefore.text)))\n            value = value.slice(1)\n        }\n      } else if (!(top.options & OPT_PRESERVE_WS_FULL)) {\n        value = value.replace(/\\r?\\n|\\r/g, \" \")\n      }\n      if (value) this.insertNode(this.parser.schema.text(value))\n      this.findInText(dom)\n    } else {\n      this.findInside(dom)\n    }\n  }\n\n  // : (dom.Element, ?ParseRule)\n  // Try to find a handler for the given tag and use that to parse. If\n  // none is found, the element's content nodes are added directly.\n  addElement(dom, matchAfter) {\n    let name = dom.nodeName.toLowerCase(), ruleID\n    if (listTags.hasOwnProperty(name) && this.parser.normalizeLists) normalizeList(dom)\n    let rule = (this.options.ruleFromNode && this.options.ruleFromNode(dom)) ||\n        (ruleID = this.parser.matchTag(dom, this, matchAfter))\n    if (rule ? rule.ignore : ignoreTags.hasOwnProperty(name)) {\n      this.findInside(dom)\n    } else if (!rule || rule.skip || rule.closeParent) {\n      if (rule && rule.closeParent) this.open = Math.max(0, this.open - 1)\n      else if (rule && rule.skip.nodeType) dom = rule.skip\n      let sync, top = this.top, oldNeedsBlock = this.needsBlock\n      if (blockTags.hasOwnProperty(name)) {\n        sync = true\n        if (!top.type) this.needsBlock = true\n      } else if (!dom.firstChild) {\n        this.leafFallback(dom)\n        return\n      }\n      this.addAll(dom)\n      if (sync) this.sync(top)\n      this.needsBlock = oldNeedsBlock\n    } else {\n      this.addElementByRule(dom, rule, rule.consuming === false ? ruleID : null)\n    }\n  }\n\n  // Called for leaf DOM nodes that would otherwise be ignored\n  leafFallback(dom) {\n    if (dom.nodeName == \"BR\" && this.top.type && this.top.type.inlineContent)\n      this.addTextNode(dom.ownerDocument.createTextNode(\"\\n\"))\n  }\n\n  // Run any style parser associated with the node's styles. Either\n  // return an array of marks, or null to indicate some of the styles\n  // had a rule with `ignore` set.\n  readStyles(styles) {\n    let marks = Mark.none\n    style: for (let i = 0; i < styles.length; i += 2) {\n      for (let after = null;;) {\n        let rule = this.parser.matchStyle(styles[i], styles[i + 1], this, after)\n        if (!rule) continue style\n        if (rule.ignore) return null\n        marks = this.parser.schema.marks[rule.mark].create(rule.attrs).addToSet(marks)\n        if (rule.consuming === false) after = rule\n        else break\n      }\n    }\n    return marks\n  }\n\n  // : (dom.Element, ParseRule) → bool\n  // Look up a handler for the given node. If none are found, return\n  // false. Otherwise, apply it, use its return value to drive the way\n  // the node's content is wrapped, and return true.\n  addElementByRule(dom, rule, continueAfter) {\n    let sync, nodeType, markType, mark\n    if (rule.node) {\n      nodeType = this.parser.schema.nodes[rule.node]\n      if (!nodeType.isLeaf) {\n        sync = this.enter(nodeType, rule.attrs, rule.preserveWhitespace)\n      } else if (!this.insertNode(nodeType.create(rule.attrs))) {\n        this.leafFallback(dom)\n      }\n    } else {\n      markType = this.parser.schema.marks[rule.mark]\n      mark = markType.create(rule.attrs)\n      this.addPendingMark(mark)\n    }\n    let startIn = this.top\n\n    if (nodeType && nodeType.isLeaf) {\n      this.findInside(dom)\n    } else if (continueAfter) {\n      this.addElement(dom, continueAfter)\n    } else if (rule.getContent) {\n      this.findInside(dom)\n      rule.getContent(dom, this.parser.schema).forEach(node => this.insertNode(node))\n    } else {\n      let contentDOM = rule.contentElement\n      if (typeof contentDOM == \"string\") contentDOM = dom.querySelector(contentDOM)\n      else if (typeof contentDOM == \"function\") contentDOM = contentDOM(dom)\n      if (!contentDOM) contentDOM = dom\n      this.findAround(dom, contentDOM, true)\n      this.addAll(contentDOM, sync)\n    }\n    if (sync) { this.sync(startIn); this.open-- }\n    if (mark) this.removePendingMark(mark, startIn)\n  }\n\n  // : (dom.Node, ?NodeBuilder, ?number, ?number)\n  // Add all child nodes between `startIndex` and `endIndex` (or the\n  // whole node, if not given). If `sync` is passed, use it to\n  // synchronize after every block element.\n  addAll(parent, sync, startIndex, endIndex) {\n    let index = startIndex || 0\n    for (let dom = startIndex ? parent.childNodes[startIndex] : parent.firstChild,\n             end = endIndex == null ? null : parent.childNodes[endIndex];\n         dom != end; dom = dom.nextSibling, ++index) {\n      this.findAtPoint(parent, index)\n      this.addDOM(dom)\n      if (sync && blockTags.hasOwnProperty(dom.nodeName.toLowerCase()))\n        this.sync(sync)\n    }\n    this.findAtPoint(parent, index)\n  }\n\n  // Try to find a way to fit the given node type into the current\n  // context. May add intermediate wrappers and/or leave non-solid\n  // nodes that we're in.\n  findPlace(node) {\n    let route, sync\n    for (let depth = this.open; depth >= 0; depth--) {\n      let cx = this.nodes[depth]\n      let found = cx.findWrapping(node)\n      if (found && (!route || route.length > found.length)) {\n        route = found\n        sync = cx\n        if (!found.length) break\n      }\n      if (cx.solid) break\n    }\n    if (!route) return false\n    this.sync(sync)\n    for (let i = 0; i < route.length; i++)\n      this.enterInner(route[i], null, false)\n    return true\n  }\n\n  // : (Node) → ?Node\n  // Try to insert the given node, adjusting the context when needed.\n  insertNode(node) {\n    if (node.isInline && this.needsBlock && !this.top.type) {\n      let block = this.textblockFromContext()\n      if (block) this.enterInner(block)\n    }\n    if (this.findPlace(node)) {\n      this.closeExtra()\n      let top = this.top\n      top.applyPending(node.type)\n      if (top.match) top.match = top.match.matchType(node.type)\n      let marks = top.activeMarks\n      for (let i = 0; i < node.marks.length; i++)\n        if (!top.type || top.type.allowsMarkType(node.marks[i].type))\n          marks = node.marks[i].addToSet(marks)\n      top.content.push(node.mark(marks))\n      return true\n    }\n    return false\n  }\n\n  // : (NodeType, ?Object) → bool\n  // Try to start a node of the given type, adjusting the context when\n  // necessary.\n  enter(type, attrs, preserveWS) {\n    let ok = this.findPlace(type.create(attrs))\n    if (ok) this.enterInner(type, attrs, true, preserveWS)\n    return ok\n  }\n\n  // Open a node of the given type\n  enterInner(type, attrs, solid, preserveWS) {\n    this.closeExtra()\n    let top = this.top\n    top.applyPending(type)\n    top.match = top.match && top.match.matchType(type, attrs)\n    let options = preserveWS == null ? top.options & ~OPT_OPEN_LEFT : wsOptionsFor(preserveWS)\n    if ((top.options & OPT_OPEN_LEFT) && top.content.length == 0) options |= OPT_OPEN_LEFT\n    this.nodes.push(new NodeContext(type, attrs, top.activeMarks, top.pendingMarks, solid, null, options))\n    this.open++\n  }\n\n  // Make sure all nodes above this.open are finished and added to\n  // their parents\n  closeExtra(openEnd) {\n    let i = this.nodes.length - 1\n    if (i > this.open) {\n      for (; i > this.open; i--) this.nodes[i - 1].content.push(this.nodes[i].finish(openEnd))\n      this.nodes.length = this.open + 1\n    }\n  }\n\n  finish() {\n    this.open = 0\n    this.closeExtra(this.isOpen)\n    return this.nodes[0].finish(this.isOpen || this.options.topOpen)\n  }\n\n  sync(to) {\n    for (let i = this.open; i >= 0; i--) if (this.nodes[i] == to) {\n      this.open = i\n      return\n    }\n  }\n\n  get currentPos() {\n    this.closeExtra()\n    let pos = 0\n    for (let i = this.open; i >= 0; i--) {\n      let content = this.nodes[i].content\n      for (let j = content.length - 1; j >= 0; j--)\n        pos += content[j].nodeSize\n      if (i) pos++\n    }\n    return pos\n  }\n\n  findAtPoint(parent, offset) {\n    if (this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].node == parent && this.find[i].offset == offset)\n        this.find[i].pos = this.currentPos\n    }\n  }\n\n  findInside(parent) {\n    if (this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node))\n        this.find[i].pos = this.currentPos\n    }\n  }\n\n  findAround(parent, content, before) {\n    if (parent != content && this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node)) {\n        let pos = content.compareDocumentPosition(this.find[i].node)\n        if (pos & (before ? 2 : 4))\n          this.find[i].pos = this.currentPos\n      }\n    }\n  }\n\n  findInText(textNode) {\n    if (this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].node == textNode)\n        this.find[i].pos = this.currentPos - (textNode.nodeValue.length - this.find[i].offset)\n    }\n  }\n\n  // : (string) → bool\n  // Determines whether the given [context\n  // string](#ParseRule.context) matches this context.\n  matchesContext(context) {\n    if (context.indexOf(\"|\") > -1)\n      return context.split(/\\s*\\|\\s*/).some(this.matchesContext, this)\n\n    let parts = context.split(\"/\")\n    let option = this.options.context\n    let useRoot = !this.isOpen && (!option || option.parent.type == this.nodes[0].type)\n    let minDepth = -(option ? option.depth + 1 : 0) + (useRoot ? 0 : 1)\n    let match = (i, depth) => {\n      for (; i >= 0; i--) {\n        let part = parts[i]\n        if (part == \"\") {\n          if (i == parts.length - 1 || i == 0) continue\n          for (; depth >= minDepth; depth--)\n            if (match(i - 1, depth)) return true\n          return false\n        } else {\n          let next = depth > 0 || (depth == 0 && useRoot) ? this.nodes[depth].type\n              : option && depth >= minDepth ? option.node(depth - minDepth).type\n              : null\n          if (!next || (next.name != part && next.groups.indexOf(part) == -1))\n            return false\n          depth--\n        }\n      }\n      return true\n    }\n    return match(parts.length - 1, this.open)\n  }\n\n  textblockFromContext() {\n    let $context = this.options.context\n    if ($context) for (let d = $context.depth; d >= 0; d--) {\n      let deflt = $context.node(d).contentMatchAt($context.indexAfter(d)).defaultType\n      if (deflt && deflt.isTextblock && deflt.defaultAttrs) return deflt\n    }\n    for (let name in this.parser.schema.nodes) {\n      let type = this.parser.schema.nodes[name]\n      if (type.isTextblock && type.defaultAttrs) return type\n    }\n  }\n\n  addPendingMark(mark) {\n    let found = findSameMarkInSet(mark, this.top.pendingMarks)\n    if (found) this.top.stashMarks.push(found)\n    this.top.pendingMarks = mark.addToSet(this.top.pendingMarks)\n  }\n\n  removePendingMark(mark, upto) {\n    for (let depth = this.open; depth >= 0; depth--) {\n      let level = this.nodes[depth]\n      let found = level.pendingMarks.lastIndexOf(mark)\n      if (found > -1) {\n        level.pendingMarks = mark.removeFromSet(level.pendingMarks)\n      } else {\n        level.activeMarks = mark.removeFromSet(level.activeMarks)\n        let stashMark = level.popFromStashMark(mark)\n        if (stashMark && level.type && level.type.allowsMarkType(stashMark.type))\n          level.activeMarks = stashMark.addToSet(level.activeMarks)\n      }\n      if (level == upto) break\n    }\n  }\n}\n\n// Kludge to work around directly nested list nodes produced by some\n// tools and allowed by browsers to mean that the nested list is\n// actually part of the list item above it.\nfunction normalizeList(dom) {\n  for (let child = dom.firstChild, prevItem = null; child; child = child.nextSibling) {\n    let name = child.nodeType == 1 ? child.nodeName.toLowerCase() : null\n    if (name && listTags.hasOwnProperty(name) && prevItem) {\n      prevItem.appendChild(child)\n      child = prevItem\n    } else if (name == \"li\") {\n      prevItem = child\n    } else if (name) {\n      prevItem = null\n    }\n  }\n}\n\n// Apply a CSS selector.\nfunction matches(dom, selector) {\n  return (dom.matches || dom.msMatchesSelector || dom.webkitMatchesSelector || dom.mozMatchesSelector).call(dom, selector)\n}\n\n// : (string) → [string]\n// Tokenize a style attribute into property/value pairs.\nfunction parseStyles(style) {\n  let re = /\\s*([\\w-]+)\\s*:\\s*([^;]+)/g, m, result = []\n  while (m = re.exec(style)) result.push(m[1], m[2].trim())\n  return result\n}\n\nfunction copy(obj) {\n  let copy = {}\n  for (let prop in obj) copy[prop] = obj[prop]\n  return copy\n}\n\n// Used when finding a mark at the top level of a fragment parse.\n// Checks whether it would be reasonable to apply a given mark type to\n// a given node, by looking at the way the mark occurs in the schema.\nfunction markMayApply(markType, nodeType) {\n  let nodes = nodeType.schema.nodes\n  for (let name in nodes) {\n    let parent = nodes[name]\n    if (!parent.allowsMarkType(markType)) continue\n    let seen = [], scan = match => {\n      seen.push(match)\n      for (let i = 0; i < match.edgeCount; i++) {\n        let {type, next} = match.edge(i)\n        if (type == nodeType) return true\n        if (seen.indexOf(next) < 0 && scan(next)) return true\n      }\n    }\n    if (scan(parent.contentMatch)) return true\n  }\n}\n\nfunction findSameMarkInSet(mark, set) {\n  for (let i = 0; i < set.length; i++) {\n    if (mark.eq(set[i])) return set[i]\n  }\n}\n","// DOMOutputSpec:: interface\n// A description of a DOM structure. Can be either a string, which is\n// interpreted as a text node, a DOM node, which is interpreted as\n// itself, a `{dom: Node, contentDOM: ?Node}` object, or an array.\n//\n// An array describes a DOM element. The first value in the array\n// should be a string—the name of the DOM element, optionally prefixed\n// by a namespace URL and a space. If the second element is plain\n// object, it is interpreted as a set of attributes for the element.\n// Any elements after that (including the 2nd if it's not an attribute\n// object) are interpreted as children of the DOM elements, and must\n// either be valid `DOMOutputSpec` values, or the number zero.\n//\n// The number zero (pronounced “hole”) is used to indicate the place\n// where a node's child nodes should be inserted. If it occurs in an\n// output spec, it should be the only child element in its parent\n// node.\n\n// ::- A DOM serializer knows how to convert ProseMirror nodes and\n// marks of various types to DOM nodes.\nexport class DOMSerializer {\n  // :: (Object<(node: Node) → DOMOutputSpec>, Object<?(mark: Mark, inline: bool) → DOMOutputSpec>)\n  // Create a serializer. `nodes` should map node names to functions\n  // that take a node and return a description of the corresponding\n  // DOM. `marks` does the same for mark names, but also gets an\n  // argument that tells it whether the mark's content is block or\n  // inline content (for typical use, it'll always be inline). A mark\n  // serializer may be `null` to indicate that marks of that type\n  // should not be serialized.\n  constructor(nodes, marks) {\n    // :: Object<(node: Node) → DOMOutputSpec>\n    // The node serialization functions.\n    this.nodes = nodes || {}\n    // :: Object<?(mark: Mark, inline: bool) → DOMOutputSpec>\n    // The mark serialization functions.\n    this.marks = marks || {}\n  }\n\n  // :: (Fragment, ?Object) → dom.DocumentFragment\n  // Serialize the content of this fragment to a DOM fragment. When\n  // not in the browser, the `document` option, containing a DOM\n  // document, should be passed so that the serializer can create\n  // nodes.\n  serializeFragment(fragment, options = {}, target) {\n    if (!target) target = doc(options).createDocumentFragment()\n\n    let top = target, active = null\n    fragment.forEach(node => {\n      if (active || node.marks.length) {\n        if (!active) active = []\n        let keep = 0, rendered = 0\n        while (keep < active.length && rendered < node.marks.length) {\n          let next = node.marks[rendered]\n          if (!this.marks[next.type.name]) { rendered++; continue }\n          if (!next.eq(active[keep]) || next.type.spec.spanning === false) break\n          keep += 2; rendered++\n        }\n        while (keep < active.length) {\n          top = active.pop()\n          active.pop()\n        }\n        while (rendered < node.marks.length) {\n          let add = node.marks[rendered++]\n          let markDOM = this.serializeMark(add, node.isInline, options)\n          if (markDOM) {\n            active.push(add, top)\n            top.appendChild(markDOM.dom)\n            top = markDOM.contentDOM || markDOM.dom\n          }\n        }\n      }\n      top.appendChild(this.serializeNode(node, options))\n    })\n\n    return target\n  }\n\n  // :: (Node, ?Object) → dom.Node\n  // Serialize this node to a DOM node. This can be useful when you\n  // need to serialize a part of a document, as opposed to the whole\n  // document. To serialize a whole document, use\n  // [`serializeFragment`](#model.DOMSerializer.serializeFragment) on\n  // its [content](#model.Node.content).\n  serializeNode(node, options = {}) {\n    let {dom, contentDOM} =\n        DOMSerializer.renderSpec(doc(options), this.nodes[node.type.name](node))\n    if (contentDOM) {\n      if (node.isLeaf)\n        throw new RangeError(\"Content hole not allowed in a leaf node spec\")\n      if (options.onContent)\n        options.onContent(node, contentDOM, options)\n      else\n        this.serializeFragment(node.content, options, contentDOM)\n    }\n    return dom\n  }\n\n  serializeNodeAndMarks(node, options = {}) {\n    let dom = this.serializeNode(node, options)\n    for (let i = node.marks.length - 1; i >= 0; i--) {\n      let wrap = this.serializeMark(node.marks[i], node.isInline, options)\n      if (wrap) {\n        ;(wrap.contentDOM || wrap.dom).appendChild(dom)\n        dom = wrap.dom\n      }\n    }\n    return dom\n  }\n\n  serializeMark(mark, inline, options = {}) {\n    let toDOM = this.marks[mark.type.name]\n    return toDOM && DOMSerializer.renderSpec(doc(options), toDOM(mark, inline))\n  }\n\n  // :: (dom.Document, DOMOutputSpec) → {dom: dom.Node, contentDOM: ?dom.Node}\n  // Render an [output spec](#model.DOMOutputSpec) to a DOM node. If\n  // the spec has a hole (zero) in it, `contentDOM` will point at the\n  // node with the hole.\n  static renderSpec(doc, structure, xmlNS = null) {\n    if (typeof structure == \"string\")\n      return {dom: doc.createTextNode(structure)}\n    if (structure.nodeType != null)\n      return {dom: structure}\n    if (structure.dom && structure.dom.nodeType != null)\n      return structure\n    let tagName = structure[0], space = tagName.indexOf(\" \")\n    if (space > 0) {\n      xmlNS = tagName.slice(0, space)\n      tagName = tagName.slice(space + 1)\n    }\n    let contentDOM = null, dom = xmlNS ? doc.createElementNS(xmlNS, tagName) : doc.createElement(tagName)\n    let attrs = structure[1], start = 1\n    if (attrs && typeof attrs == \"object\" && attrs.nodeType == null && !Array.isArray(attrs)) {\n      start = 2\n      for (let name in attrs) if (attrs[name] != null) {\n        let space = name.indexOf(\" \")\n        if (space > 0) dom.setAttributeNS(name.slice(0, space), name.slice(space + 1), attrs[name])\n        else dom.setAttribute(name, attrs[name])\n      }\n    }\n    for (let i = start; i < structure.length; i++) {\n      let child = structure[i]\n      if (child === 0) {\n        if (i < structure.length - 1 || i > start)\n          throw new RangeError(\"Content hole must be the only child of its parent node\")\n        return {dom, contentDOM: dom}\n      } else {\n        let {dom: inner, contentDOM: innerContent} = DOMSerializer.renderSpec(doc, child, xmlNS)\n        dom.appendChild(inner)\n        if (innerContent) {\n          if (contentDOM) throw new RangeError(\"Multiple content holes\")\n          contentDOM = innerContent\n        }\n      }\n    }\n    return {dom, contentDOM}\n  }\n\n  // :: (Schema) → DOMSerializer\n  // Build a serializer using the [`toDOM`](#model.NodeSpec.toDOM)\n  // properties in a schema's node and mark specs.\n  static fromSchema(schema) {\n    return schema.cached.domSerializer ||\n      (schema.cached.domSerializer = new DOMSerializer(this.nodesFromSchema(schema), this.marksFromSchema(schema)))\n  }\n\n  // : (Schema) → Object<(node: Node) → DOMOutputSpec>\n  // Gather the serializers in a schema's node specs into an object.\n  // This can be useful as a base to build a custom serializer from.\n  static nodesFromSchema(schema) {\n    let result = gatherToDOM(schema.nodes)\n    if (!result.text) result.text = node => node.text\n    return result\n  }\n\n  // : (Schema) → Object<(mark: Mark) → DOMOutputSpec>\n  // Gather the serializers in a schema's mark specs into an object.\n  static marksFromSchema(schema) {\n    return gatherToDOM(schema.marks)\n  }\n}\n\nfunction gatherToDOM(obj) {\n  let result = {}\n  for (let name in obj) {\n    let toDOM = obj[name].spec.toDOM\n    if (toDOM) result[name] = toDOM\n  }\n  return result\n}\n\nfunction doc(options) {\n  // declare global: window\n  return options.document || window.document\n}\n","import {Schema} from \"prosemirror-model\"\n\nconst pDOM = [\"p\", 0], blockquoteDOM = [\"blockquote\", 0], hrDOM = [\"hr\"],\n      preDOM = [\"pre\", [\"code\", 0]], brDOM = [\"br\"]\n\n// :: Object\n// [Specs](#model.NodeSpec) for the nodes defined in this schema.\nexport const nodes = {\n  // :: NodeSpec The top level document node.\n  doc: {\n    content: \"block+\"\n  },\n\n  // :: NodeSpec A plain paragraph textblock. Represented in the DOM\n  // as a `<p>` element.\n  paragraph: {\n    content: \"inline*\",\n    group: \"block\",\n    parseDOM: [{tag: \"p\"}],\n    toDOM() { return pDOM }\n  },\n\n  // :: NodeSpec A blockquote (`<blockquote>`) wrapping one or more blocks.\n  blockquote: {\n    content: \"block+\",\n    group: \"block\",\n    defining: true,\n    parseDOM: [{tag: \"blockquote\"}],\n    toDOM() { return blockquoteDOM }\n  },\n\n  // :: NodeSpec A horizontal rule (`<hr>`).\n  horizontal_rule: {\n    group: \"block\",\n    parseDOM: [{tag: \"hr\"}],\n    toDOM() { return hrDOM }\n  },\n\n  // :: NodeSpec A heading textblock, with a `level` attribute that\n  // should hold the number 1 to 6. Parsed and serialized as `<h1>` to\n  // `<h6>` elements.\n  heading: {\n    attrs: {level: {default: 1}},\n    content: \"inline*\",\n    group: \"block\",\n    defining: true,\n    parseDOM: [{tag: \"h1\", attrs: {level: 1}},\n               {tag: \"h2\", attrs: {level: 2}},\n               {tag: \"h3\", attrs: {level: 3}},\n               {tag: \"h4\", attrs: {level: 4}},\n               {tag: \"h5\", attrs: {level: 5}},\n               {tag: \"h6\", attrs: {level: 6}}],\n    toDOM(node) { return [\"h\" + node.attrs.level, 0] }\n  },\n\n  // :: NodeSpec A code listing. Disallows marks or non-text inline\n  // nodes by default. Represented as a `<pre>` element with a\n  // `<code>` element inside of it.\n  code_block: {\n    content: \"text*\",\n    marks: \"\",\n    group: \"block\",\n    code: true,\n    defining: true,\n    parseDOM: [{tag: \"pre\", preserveWhitespace: \"full\"}],\n    toDOM() { return preDOM }\n  },\n\n  // :: NodeSpec The text node.\n  text: {\n    group: \"inline\"\n  },\n\n  // :: NodeSpec An inline image (`<img>`) node. Supports `src`,\n  // `alt`, and `href` attributes. The latter two default to the empty\n  // string.\n  image: {\n    inline: true,\n    attrs: {\n      src: {},\n      alt: {default: null},\n      title: {default: null}\n    },\n    group: \"inline\",\n    draggable: true,\n    parseDOM: [{tag: \"img[src]\", getAttrs(dom) {\n      return {\n        src: dom.getAttribute(\"src\"),\n        title: dom.getAttribute(\"title\"),\n        alt: dom.getAttribute(\"alt\")\n      }\n    }}],\n    toDOM(node) { let {src, alt, title} = node.attrs; return [\"img\", {src, alt, title}] }\n  },\n\n  // :: NodeSpec A hard line break, represented in the DOM as `<br>`.\n  hard_break: {\n    inline: true,\n    group: \"inline\",\n    selectable: false,\n    parseDOM: [{tag: \"br\"}],\n    toDOM() { return brDOM }\n  }\n}\n\nconst emDOM = [\"em\", 0], strongDOM = [\"strong\", 0], codeDOM = [\"code\", 0]\n\n// :: Object [Specs](#model.MarkSpec) for the marks in the schema.\nexport const marks = {\n  // :: MarkSpec A link. Has `href` and `title` attributes. `title`\n  // defaults to the empty string. Rendered and parsed as an `<a>`\n  // element.\n  link: {\n    attrs: {\n      href: {},\n      title: {default: null}\n    },\n    inclusive: false,\n    parseDOM: [{tag: \"a[href]\", getAttrs(dom) {\n      return {href: dom.getAttribute(\"href\"), title: dom.getAttribute(\"title\")}\n    }}],\n    toDOM(node) { let {href, title} = node.attrs; return [\"a\", {href, title}, 0] }\n  },\n\n  // :: MarkSpec An emphasis mark. Rendered as an `<em>` element.\n  // Has parse rules that also match `<i>` and `font-style: italic`.\n  em: {\n    parseDOM: [{tag: \"i\"}, {tag: \"em\"}, {style: \"font-style=italic\"}],\n    toDOM() { return emDOM }\n  },\n\n  // :: MarkSpec A strong mark. Rendered as `<strong>`, parse rules\n  // also match `<b>` and `font-weight: bold`.\n  strong: {\n    parseDOM: [{tag: \"strong\"},\n               // This works around a Google Docs misbehavior where\n               // pasted content will be inexplicably wrapped in `<b>`\n               // tags with a font-weight normal.\n               {tag: \"b\", getAttrs: node => node.style.fontWeight != \"normal\" && null},\n               {style: \"font-weight\", getAttrs: value => /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null}],\n    toDOM() { return strongDOM }\n  },\n\n  // :: MarkSpec Code font mark. Represented as a `<code>` element.\n  code: {\n    parseDOM: [{tag: \"code\"}],\n    toDOM() { return codeDOM }\n  }\n}\n\n// :: Schema\n// This schema roughly corresponds to the document schema used by\n// [CommonMark](http://commonmark.org/), minus the list elements,\n// which are defined in the [`prosemirror-schema-list`](#schema-list)\n// module.\n//\n// To reuse elements from this schema, extend or read from its\n// `spec.nodes` and `spec.marks` [properties](#model.Schema.spec).\nexport const schema = new Schema({nodes, marks})\n","import {findWrapping, liftTarget, canSplit, ReplaceAroundStep} from \"prosemirror-transform\"\nimport {Slice, Fragment, NodeRange} from \"prosemirror-model\"\n\nconst olDOM = [\"ol\", 0], ulDOM = [\"ul\", 0], liDOM = [\"li\", 0]\n\n// :: NodeSpec\n// An ordered list [node spec](#model.NodeSpec). Has a single\n// attribute, `order`, which determines the number at which the list\n// starts counting, and defaults to 1. Represented as an `<ol>`\n// element.\nexport const orderedList = {\n  attrs: {order: {default: 1}},\n  parseDOM: [{tag: \"ol\", getAttrs(dom) {\n    return {order: dom.hasAttribute(\"start\") ? +dom.getAttribute(\"start\") : 1}\n  }}],\n  toDOM(node) {\n    return node.attrs.order == 1 ? olDOM : [\"ol\", {start: node.attrs.order}, 0]\n  }\n}\n\n// :: NodeSpec\n// A bullet list node spec, represented in the DOM as `<ul>`.\nexport const bulletList = {\n  parseDOM: [{tag: \"ul\"}],\n  toDOM() { return ulDOM }\n}\n\n// :: NodeSpec\n// A list item (`<li>`) spec.\nexport const listItem = {\n  parseDOM: [{tag: \"li\"}],\n  toDOM() { return liDOM },\n  defining: true\n}\n\nfunction add(obj, props) {\n  let copy = {}\n  for (let prop in obj) copy[prop] = obj[prop]\n  for (let prop in props) copy[prop] = props[prop]\n  return copy\n}\n\n// :: (OrderedMap<NodeSpec>, string, ?string) → OrderedMap<NodeSpec>\n// Convenience function for adding list-related node types to a map\n// specifying the nodes for a schema. Adds\n// [`orderedList`](#schema-list.orderedList) as `\"ordered_list\"`,\n// [`bulletList`](#schema-list.bulletList) as `\"bullet_list\"`, and\n// [`listItem`](#schema-list.listItem) as `\"list_item\"`.\n//\n// `itemContent` determines the content expression for the list items.\n// If you want the commands defined in this module to apply to your\n// list structure, it should have a shape like `\"paragraph block*\"` or\n// `\"paragraph (ordered_list | bullet_list)*\"`. `listGroup` can be\n// given to assign a group name to the list node types, for example\n// `\"block\"`.\nexport function addListNodes(nodes, itemContent, listGroup) {\n  return nodes.append({\n    ordered_list: add(orderedList, {content: \"list_item+\", group: listGroup}),\n    bullet_list: add(bulletList, {content: \"list_item+\", group: listGroup}),\n    list_item: add(listItem, {content: itemContent})\n  })\n}\n\n// :: (NodeType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Returns a command function that wraps the selection in a list with\n// the given type an attributes. If `dispatch` is null, only return a\n// value to indicate whether this is possible, but don't actually\n// perform the change.\nexport function wrapInList(listType, attrs) {\n  return function(state, dispatch) {\n    let {$from, $to} = state.selection\n    let range = $from.blockRange($to), doJoin = false, outerRange = range\n    if (!range) return false\n    // This is at the top of an existing list item\n    if (range.depth >= 2 && $from.node(range.depth - 1).type.compatibleContent(listType) && range.startIndex == 0) {\n      // Don't do anything if this is the top of the list\n      if ($from.index(range.depth - 1) == 0) return false\n      let $insert = state.doc.resolve(range.start - 2)\n      outerRange = new NodeRange($insert, $insert, range.depth)\n      if (range.endIndex < range.parent.childCount)\n        range = new NodeRange($from, state.doc.resolve($to.end(range.depth)), range.depth)\n      doJoin = true\n    }\n    let wrap = findWrapping(outerRange, listType, attrs, range)\n    if (!wrap) return false\n    if (dispatch) dispatch(doWrapInList(state.tr, range, wrap, doJoin, listType).scrollIntoView())\n    return true\n  }\n}\n\nfunction doWrapInList(tr, range, wrappers, joinBefore, listType) {\n  let content = Fragment.empty\n  for (let i = wrappers.length - 1; i >= 0; i--)\n    content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content))\n\n  tr.step(new ReplaceAroundStep(range.start - (joinBefore ? 2 : 0), range.end, range.start, range.end,\n                                new Slice(content, 0, 0), wrappers.length, true))\n\n  let found = 0\n  for (let i = 0; i < wrappers.length; i++) if (wrappers[i].type == listType) found = i + 1\n  let splitDepth = wrappers.length - found\n\n  let splitPos = range.start + wrappers.length - (joinBefore ? 2 : 0), parent = range.parent\n  for (let i = range.startIndex, e = range.endIndex, first = true; i < e; i++, first = false) {\n    if (!first && canSplit(tr.doc, splitPos, splitDepth)) {\n      tr.split(splitPos, splitDepth)\n      splitPos += 2 * splitDepth\n    }\n    splitPos += parent.child(i).nodeSize\n  }\n  return tr\n}\n\n// :: (NodeType) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Build a command that splits a non-empty textblock at the top level\n// of a list item by also splitting that list item.\nexport function splitListItem(itemType) {\n  return function(state, dispatch) {\n    let {$from, $to, node} = state.selection\n    if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to)) return false\n    let grandParent = $from.node(-1)\n    if (grandParent.type != itemType) return false\n    if ($from.parent.content.size == 0 && $from.node(-1).childCount == $from.indexAfter(-1)) {\n      // In an empty block. If this is a nested list, the wrapping\n      // list item should be split. Otherwise, bail out and let next\n      // command handle lifting.\n      if ($from.depth == 2 || $from.node(-3).type != itemType ||\n          $from.index(-2) != $from.node(-2).childCount - 1) return false\n      if (dispatch) {\n        let wrap = Fragment.empty, keepItem = $from.index(-1) > 0\n        // Build a fragment containing empty versions of the structure\n        // from the outer list item to the parent node of the cursor\n        for (let d = $from.depth - (keepItem ? 1 : 2); d >= $from.depth - 3; d--)\n          wrap = Fragment.from($from.node(d).copy(wrap))\n        // Add a second list item with an empty default start node\n        wrap = wrap.append(Fragment.from(itemType.createAndFill()))\n        let tr = state.tr.replace($from.before(keepItem ? null : -1), $from.after(-3), new Slice(wrap, keepItem ? 3 : 2, 2))\n        tr.setSelection(state.selection.constructor.near(tr.doc.resolve($from.pos + (keepItem ? 3 : 2))))\n        dispatch(tr.scrollIntoView())\n      }\n      return true\n    }\n    let nextType = $to.pos == $from.end() ? grandParent.contentMatchAt(0).defaultType : null\n    let tr = state.tr.delete($from.pos, $to.pos)\n    let types = nextType && [null, {type: nextType}]\n    if (!canSplit(tr.doc, $from.pos, 2, types)) return false\n    if (dispatch) dispatch(tr.split($from.pos, 2, types).scrollIntoView())\n    return true\n  }\n}\n\n// :: (NodeType) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Create a command to lift the list item around the selection up into\n// a wrapping list.\nexport function liftListItem(itemType) {\n  return function(state, dispatch) {\n    let {$from, $to} = state.selection\n    let range = $from.blockRange($to, node => node.childCount && node.firstChild.type == itemType)\n    if (!range) return false\n    if (!dispatch) return true\n    if ($from.node(range.depth - 1).type == itemType) // Inside a parent list\n      return liftToOuterList(state, dispatch, itemType, range)\n    else // Outer list node\n      return liftOutOfList(state, dispatch, range)\n  }\n}\n\nfunction liftToOuterList(state, dispatch, itemType, range) {\n  let tr = state.tr, end = range.end, endOfList = range.$to.end(range.depth)\n  if (end < endOfList) {\n    // There are siblings after the lifted items, which must become\n    // children of the last item\n    tr.step(new ReplaceAroundStep(end - 1, endOfList, end, endOfList,\n                                  new Slice(Fragment.from(itemType.create(null, range.parent.copy())), 1, 0), 1, true))\n    range = new NodeRange(tr.doc.resolve(range.$from.pos), tr.doc.resolve(endOfList), range.depth)\n  }\n  dispatch(tr.lift(range, liftTarget(range)).scrollIntoView())\n  return true\n}\n\nfunction liftOutOfList(state, dispatch, range) {\n  let tr = state.tr, list = range.parent\n  // Merge the list items into a single big item\n  for (let pos = range.end, i = range.endIndex - 1, e = range.startIndex; i > e; i--) {\n    pos -= list.child(i).nodeSize\n    tr.delete(pos - 1, pos + 1)\n  }\n  let $start = tr.doc.resolve(range.start), item = $start.nodeAfter\n  let atStart = range.startIndex == 0, atEnd = range.endIndex == list.childCount\n  let parent = $start.node(-1), indexBefore = $start.index(-1)\n  if (!parent.canReplace(indexBefore + (atStart ? 0 : 1), indexBefore + 1,\n                         item.content.append(atEnd ? Fragment.empty : Fragment.from(list))))\n    return false\n  let start = $start.pos, end = start + item.nodeSize\n  // Strip off the surrounding list. At the sides where we're not at\n  // the end of the list, the existing list is closed. At sides where\n  // this is the end, it is overwritten to its end.\n  tr.step(new ReplaceAroundStep(start - (atStart ? 1 : 0), end + (atEnd ? 1 : 0), start + 1, end - 1,\n                                new Slice((atStart ? Fragment.empty : Fragment.from(list.copy(Fragment.empty)))\n                                          .append(atEnd ? Fragment.empty : Fragment.from(list.copy(Fragment.empty))),\n                                          atStart ? 0 : 1, atEnd ? 0 : 1), atStart ? 0 : 1))\n  dispatch(tr.scrollIntoView())\n  return true\n}\n\n// :: (NodeType) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Create a command to sink the list item around the selection down\n// into an inner list.\nexport function sinkListItem(itemType) {\n  return function(state, dispatch) {\n    let {$from, $to} = state.selection\n    let range = $from.blockRange($to, node => node.childCount && node.firstChild.type == itemType)\n    if (!range) return false\n    let startIndex = range.startIndex\n    if (startIndex == 0) return false\n    let parent = range.parent, nodeBefore = parent.child(startIndex - 1)\n    if (nodeBefore.type != itemType) return false\n\n    if (dispatch) {\n      let nestedBefore = nodeBefore.lastChild && nodeBefore.lastChild.type == parent.type\n      let inner = Fragment.from(nestedBefore ? itemType.create() : null)\n      let slice = new Slice(Fragment.from(itemType.create(null, Fragment.from(parent.type.create(null, inner)))),\n                            nestedBefore ? 3 : 1, 0)\n      let before = range.start, after = range.end\n      dispatch(state.tr.step(new ReplaceAroundStep(before - (nestedBefore ? 3 : 1), after,\n                                                   before, after, slice, 1, true))\n               .scrollIntoView())\n    }\n    return true\n  }\n}\n","import {Slice, Fragment} from \"prosemirror-model\"\nimport {ReplaceStep, ReplaceAroundStep} from \"prosemirror-transform\"\n\nconst classesById = Object.create(null)\n\n// ::- Superclass for editor selections. Every selection type should\n// extend this. Should not be instantiated directly.\nexport class Selection {\n  // :: (ResolvedPos, ResolvedPos, ?[SelectionRange])\n  // Initialize a selection with the head and anchor and ranges. If no\n  // ranges are given, constructs a single range across `$anchor` and\n  // `$head`.\n  constructor($anchor, $head, ranges) {\n    // :: [SelectionRange]\n    // The ranges covered by the selection.\n    this.ranges = ranges || [new SelectionRange($anchor.min($head), $anchor.max($head))]\n    // :: ResolvedPos\n    // The resolved anchor of the selection (the side that stays in\n    // place when the selection is modified).\n    this.$anchor = $anchor\n    // :: ResolvedPos\n    // The resolved head of the selection (the side that moves when\n    // the selection is modified).\n    this.$head = $head\n  }\n\n  // :: number\n  // The selection's anchor, as an unresolved position.\n  get anchor() { return this.$anchor.pos }\n\n  // :: number\n  // The selection's head.\n  get head() { return this.$head.pos }\n\n  // :: number\n  // The lower bound of the selection's main range.\n  get from() { return this.$from.pos }\n\n  // :: number\n  // The upper bound of the selection's main range.\n  get to() { return this.$to.pos }\n\n  // :: ResolvedPos\n  // The resolved lower  bound of the selection's main range.\n  get $from() {\n    return this.ranges[0].$from\n  }\n\n  // :: ResolvedPos\n  // The resolved upper bound of the selection's main range.\n  get $to() {\n    return this.ranges[0].$to\n  }\n\n  // :: bool\n  // Indicates whether the selection contains any content.\n  get empty() {\n    let ranges = this.ranges\n    for (let i = 0; i < ranges.length; i++)\n      if (ranges[i].$from.pos != ranges[i].$to.pos) return false\n    return true\n  }\n\n  // eq:: (Selection) → bool\n  // Test whether the selection is the same as another selection.\n\n  // map:: (doc: Node, mapping: Mappable) → Selection\n  // Map this selection through a [mappable](#transform.Mappable) thing. `doc`\n  // should be the new document to which we are mapping.\n\n  // :: () → Slice\n  // Get the content of this selection as a slice.\n  content() {\n    return this.$from.node(0).slice(this.from, this.to, true)\n  }\n\n  // :: (Transaction, ?Slice)\n  // Replace the selection with a slice or, if no slice is given,\n  // delete the selection. Will append to the given transaction.\n  replace(tr, content = Slice.empty) {\n    // Put the new selection at the position after the inserted\n    // content. When that ended in an inline node, search backwards,\n    // to get the position after that node. If not, search forward.\n    let lastNode = content.content.lastChild, lastParent = null\n    for (let i = 0; i < content.openEnd; i++) {\n      lastParent = lastNode\n      lastNode = lastNode.lastChild\n    }\n\n    let mapFrom = tr.steps.length, ranges = this.ranges\n    for (let i = 0; i < ranges.length; i++) {\n      let {$from, $to} = ranges[i], mapping = tr.mapping.slice(mapFrom)\n      tr.replaceRange(mapping.map($from.pos), mapping.map($to.pos), i ? Slice.empty : content)\n      if (i == 0)\n        selectionToInsertionEnd(tr, mapFrom, (lastNode ? lastNode.isInline : lastParent && lastParent.isTextblock) ? -1 : 1)\n    }\n  }\n\n  // :: (Transaction, Node)\n  // Replace the selection with the given node, appending the changes\n  // to the given transaction.\n  replaceWith(tr, node) {\n    let mapFrom = tr.steps.length, ranges = this.ranges\n    for (let i = 0; i < ranges.length; i++) {\n      let {$from, $to} = ranges[i], mapping = tr.mapping.slice(mapFrom)\n      let from = mapping.map($from.pos), to = mapping.map($to.pos)\n      if (i) {\n        tr.deleteRange(from, to)\n      } else {\n        tr.replaceRangeWith(from, to, node)\n        selectionToInsertionEnd(tr, mapFrom, node.isInline ? -1 : 1)\n      }\n    }\n  }\n\n  // toJSON:: () → Object\n  // Convert the selection to a JSON representation. When implementing\n  // this for a custom selection class, make sure to give the object a\n  // `type` property whose value matches the ID under which you\n  // [registered](#state.Selection^jsonID) your class.\n\n  // :: (ResolvedPos, number, ?bool) → ?Selection\n  // Find a valid cursor or leaf node selection starting at the given\n  // position and searching back if `dir` is negative, and forward if\n  // positive. When `textOnly` is true, only consider cursor\n  // selections. Will return null when no valid selection position is\n  // found.\n  static findFrom($pos, dir, textOnly) {\n    let inner = $pos.parent.inlineContent ? new TextSelection($pos)\n        : findSelectionIn($pos.node(0), $pos.parent, $pos.pos, $pos.index(), dir, textOnly)\n    if (inner) return inner\n\n    for (let depth = $pos.depth - 1; depth >= 0; depth--) {\n      let found = dir < 0\n          ? findSelectionIn($pos.node(0), $pos.node(depth), $pos.before(depth + 1), $pos.index(depth), dir, textOnly)\n          : findSelectionIn($pos.node(0), $pos.node(depth), $pos.after(depth + 1), $pos.index(depth) + 1, dir, textOnly)\n      if (found) return found\n    }\n  }\n\n  // :: (ResolvedPos, ?number) → Selection\n  // Find a valid cursor or leaf node selection near the given\n  // position. Searches forward first by default, but if `bias` is\n  // negative, it will search backwards first.\n  static near($pos, bias = 1) {\n    return this.findFrom($pos, bias) || this.findFrom($pos, -bias) || new AllSelection($pos.node(0))\n  }\n\n  // :: (Node) → Selection\n  // Find the cursor or leaf node selection closest to the start of\n  // the given document. Will return an\n  // [`AllSelection`](#state.AllSelection) if no valid position\n  // exists.\n  static atStart(doc) {\n    return findSelectionIn(doc, doc, 0, 0, 1) || new AllSelection(doc)\n  }\n\n  // :: (Node) → Selection\n  // Find the cursor or leaf node selection closest to the end of the\n  // given document.\n  static atEnd(doc) {\n    return findSelectionIn(doc, doc, doc.content.size, doc.childCount, -1) || new AllSelection(doc)\n  }\n\n  // :: (Node, Object) → Selection\n  // Deserialize the JSON representation of a selection. Must be\n  // implemented for custom classes (as a static class method).\n  static fromJSON(doc, json) {\n    if (!json || !json.type) throw new RangeError(\"Invalid input for Selection.fromJSON\")\n    let cls = classesById[json.type]\n    if (!cls) throw new RangeError(`No selection type ${json.type} defined`)\n    return cls.fromJSON(doc, json)\n  }\n\n  // :: (string, constructor<Selection>)\n  // To be able to deserialize selections from JSON, custom selection\n  // classes must register themselves with an ID string, so that they\n  // can be disambiguated. Try to pick something that's unlikely to\n  // clash with classes from other modules.\n  static jsonID(id, selectionClass) {\n    if (id in classesById) throw new RangeError(\"Duplicate use of selection JSON ID \" + id)\n    classesById[id] = selectionClass\n    selectionClass.prototype.jsonID = id\n    return selectionClass\n  }\n\n  // :: () → SelectionBookmark\n  // Get a [bookmark](#state.SelectionBookmark) for this selection,\n  // which is a value that can be mapped without having access to a\n  // current document, and later resolved to a real selection for a\n  // given document again. (This is used mostly by the history to\n  // track and restore old selections.) The default implementation of\n  // this method just converts the selection to a text selection and\n  // returns the bookmark for that.\n  getBookmark() {\n    return TextSelection.between(this.$anchor, this.$head).getBookmark()\n  }\n}\n\n// :: bool\n// Controls whether, when a selection of this type is active in the\n// browser, the selected range should be visible to the user. Defaults\n// to `true`.\nSelection.prototype.visible = true\n\n// SelectionBookmark:: interface\n// A lightweight, document-independent representation of a selection.\n// You can define a custom bookmark type for a custom selection class\n// to make the history handle it well.\n//\n//   map:: (mapping: Mapping) → SelectionBookmark\n//   Map the bookmark through a set of changes.\n//\n//   resolve:: (doc: Node) → Selection\n//   Resolve the bookmark to a real selection again. This may need to\n//   do some error checking and may fall back to a default (usually\n//   [`TextSelection.between`](#state.TextSelection^between)) if\n//   mapping made the bookmark invalid.\n\n// ::- Represents a selected range in a document.\nexport class SelectionRange {\n  // :: (ResolvedPos, ResolvedPos)\n  constructor($from, $to) {\n    // :: ResolvedPos\n    // The lower bound of the range.\n    this.$from = $from\n    // :: ResolvedPos\n    // The upper bound of the range.\n    this.$to = $to\n  }\n}\n\n// ::- A text selection represents a classical editor selection, with\n// a head (the moving side) and anchor (immobile side), both of which\n// point into textblock nodes. It can be empty (a regular cursor\n// position).\nexport class TextSelection extends Selection {\n  // :: (ResolvedPos, ?ResolvedPos)\n  // Construct a text selection between the given points.\n  constructor($anchor, $head = $anchor) {\n    super($anchor, $head)\n  }\n\n  // :: ?ResolvedPos\n  // Returns a resolved position if this is a cursor selection (an\n  // empty text selection), and null otherwise.\n  get $cursor() { return this.$anchor.pos == this.$head.pos ? this.$head : null }\n\n  map(doc, mapping) {\n    let $head = doc.resolve(mapping.map(this.head))\n    if (!$head.parent.inlineContent) return Selection.near($head)\n    let $anchor = doc.resolve(mapping.map(this.anchor))\n    return new TextSelection($anchor.parent.inlineContent ? $anchor : $head, $head)\n  }\n\n  replace(tr, content = Slice.empty) {\n    super.replace(tr, content)\n    if (content == Slice.empty) {\n      let marks = this.$from.marksAcross(this.$to)\n      if (marks) tr.ensureMarks(marks)\n    }\n  }\n\n  eq(other) {\n    return other instanceof TextSelection && other.anchor == this.anchor && other.head == this.head\n  }\n\n  getBookmark() {\n    return new TextBookmark(this.anchor, this.head)\n  }\n\n  toJSON() {\n    return {type: \"text\", anchor: this.anchor, head: this.head}\n  }\n\n  static fromJSON(doc, json) {\n    if (typeof json.anchor != \"number\" || typeof json.head != \"number\")\n      throw new RangeError(\"Invalid input for TextSelection.fromJSON\")\n    return new TextSelection(doc.resolve(json.anchor), doc.resolve(json.head))\n  }\n\n  // :: (Node, number, ?number) → TextSelection\n  // Create a text selection from non-resolved positions.\n  static create(doc, anchor, head = anchor) {\n    let $anchor = doc.resolve(anchor)\n    return new this($anchor, head == anchor ? $anchor : doc.resolve(head))\n  }\n\n  // :: (ResolvedPos, ResolvedPos, ?number) → Selection\n  // Return a text selection that spans the given positions or, if\n  // they aren't text positions, find a text selection near them.\n  // `bias` determines whether the method searches forward (default)\n  // or backwards (negative number) first. Will fall back to calling\n  // [`Selection.near`](#state.Selection^near) when the document\n  // doesn't contain a valid text position.\n  static between($anchor, $head, bias) {\n    let dPos = $anchor.pos - $head.pos\n    if (!bias || dPos) bias = dPos >= 0 ? 1 : -1\n    if (!$head.parent.inlineContent) {\n      let found = Selection.findFrom($head, bias, true) || Selection.findFrom($head, -bias, true)\n      if (found) $head = found.$head\n      else return Selection.near($head, bias)\n    }\n    if (!$anchor.parent.inlineContent) {\n      if (dPos == 0) {\n        $anchor = $head\n      } else {\n        $anchor = (Selection.findFrom($anchor, -bias, true) || Selection.findFrom($anchor, bias, true)).$anchor\n        if (($anchor.pos < $head.pos) != (dPos < 0)) $anchor = $head\n      }\n    }\n    return new TextSelection($anchor, $head)\n  }\n}\n\nSelection.jsonID(\"text\", TextSelection)\n\nclass TextBookmark {\n  constructor(anchor, head) {\n    this.anchor = anchor\n    this.head = head\n  }\n  map(mapping) {\n    return new TextBookmark(mapping.map(this.anchor), mapping.map(this.head))\n  }\n  resolve(doc) {\n    return TextSelection.between(doc.resolve(this.anchor), doc.resolve(this.head))\n  }\n}\n\n// ::- A node selection is a selection that points at a single node.\n// All nodes marked [selectable](#model.NodeSpec.selectable) can be\n// the target of a node selection. In such a selection, `from` and\n// `to` point directly before and after the selected node, `anchor`\n// equals `from`, and `head` equals `to`..\nexport class NodeSelection extends Selection {\n  // :: (ResolvedPos)\n  // Create a node selection. Does not verify the validity of its\n  // argument.\n  constructor($pos) {\n    let node = $pos.nodeAfter\n    let $end = $pos.node(0).resolve($pos.pos + node.nodeSize)\n    super($pos, $end)\n    // :: Node The selected node.\n    this.node = node\n  }\n\n  map(doc, mapping) {\n    let {deleted, pos} = mapping.mapResult(this.anchor)\n    let $pos = doc.resolve(pos)\n    if (deleted) return Selection.near($pos)\n    return new NodeSelection($pos)\n  }\n\n  content() {\n    return new Slice(Fragment.from(this.node), 0, 0)\n  }\n\n  eq(other) {\n    return other instanceof NodeSelection && other.anchor == this.anchor\n  }\n\n  toJSON() {\n    return {type: \"node\", anchor: this.anchor}\n  }\n\n  getBookmark() { return new NodeBookmark(this.anchor) }\n\n  static fromJSON(doc, json) {\n    if (typeof json.anchor != \"number\")\n      throw new RangeError(\"Invalid input for NodeSelection.fromJSON\")\n    return new NodeSelection(doc.resolve(json.anchor))\n  }\n\n  // :: (Node, number) → NodeSelection\n  // Create a node selection from non-resolved positions.\n  static create(doc, from) {\n    return new this(doc.resolve(from))\n  }\n\n  // :: (Node) → bool\n  // Determines whether the given node may be selected as a node\n  // selection.\n  static isSelectable(node) {\n    return !node.isText && node.type.spec.selectable !== false\n  }\n}\n\nNodeSelection.prototype.visible = false\n\nSelection.jsonID(\"node\", NodeSelection)\n\nclass NodeBookmark {\n  constructor(anchor) {\n    this.anchor = anchor\n  }\n  map(mapping) {\n    let {deleted, pos} = mapping.mapResult(this.anchor)\n    return deleted ? new TextBookmark(pos, pos) : new NodeBookmark(pos)\n  }\n  resolve(doc) {\n    let $pos = doc.resolve(this.anchor), node = $pos.nodeAfter\n    if (node && NodeSelection.isSelectable(node)) return new NodeSelection($pos)\n    return Selection.near($pos)\n  }\n}\n\n// ::- A selection type that represents selecting the whole document\n// (which can not necessarily be expressed with a text selection, when\n// there are for example leaf block nodes at the start or end of the\n// document).\nexport class AllSelection extends Selection {\n  // :: (Node)\n  // Create an all-selection over the given document.\n  constructor(doc) {\n    super(doc.resolve(0), doc.resolve(doc.content.size))\n  }\n\n  replace(tr, content = Slice.empty) {\n    if (content == Slice.empty) {\n      tr.delete(0, tr.doc.content.size)\n      let sel = Selection.atStart(tr.doc)\n      if (!sel.eq(tr.selection)) tr.setSelection(sel)\n    } else {\n      super.replace(tr, content)\n    }\n  }\n\n  toJSON() { return {type: \"all\"} }\n\n  static fromJSON(doc) { return new AllSelection(doc) }\n\n  map(doc) { return new AllSelection(doc) }\n\n  eq(other) { return other instanceof AllSelection }\n\n  getBookmark() { return AllBookmark }\n}\n\nSelection.jsonID(\"all\", AllSelection)\n\nconst AllBookmark = {\n  map() { return this },\n  resolve(doc) { return new AllSelection(doc) }\n}\n\n// FIXME we'll need some awareness of text direction when scanning for selections\n\n// Try to find a selection inside the given node. `pos` points at the\n// position where the search starts. When `text` is true, only return\n// text selections.\nfunction findSelectionIn(doc, node, pos, index, dir, text) {\n  if (node.inlineContent) return TextSelection.create(doc, pos)\n  for (let i = index - (dir > 0 ? 0 : 1); dir > 0 ? i < node.childCount : i >= 0; i += dir) {\n    let child = node.child(i)\n    if (!child.isAtom) {\n      let inner = findSelectionIn(doc, child, pos + dir, dir < 0 ? child.childCount : 0, dir, text)\n      if (inner) return inner\n    } else if (!text && NodeSelection.isSelectable(child)) {\n      return NodeSelection.create(doc, pos - (dir < 0 ? child.nodeSize : 0))\n    }\n    pos += child.nodeSize * dir\n  }\n}\n\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n  let last = tr.steps.length - 1\n  if (last < startLen) return\n  let step = tr.steps[last]\n  if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep)) return\n  let map = tr.mapping.maps[last], end\n  map.forEach((_from, _to, _newFrom, newTo) => { if (end == null) end = newTo })\n  tr.setSelection(Selection.near(tr.doc.resolve(end), bias))\n}\n","import {Transform} from \"prosemirror-transform\"\nimport {Mark} from \"prosemirror-model\"\nimport {Selection} from \"./selection\"\n\nconst UPDATED_SEL = 1, UPDATED_MARKS = 2, UPDATED_SCROLL = 4\n\n// ::- An editor state transaction, which can be applied to a state to\n// create an updated state. Use\n// [`EditorState.tr`](#state.EditorState.tr) to create an instance.\n//\n// Transactions track changes to the document (they are a subclass of\n// [`Transform`](#transform.Transform)), but also other state changes,\n// like selection updates and adjustments of the set of [stored\n// marks](#state.EditorState.storedMarks). In addition, you can store\n// metadata properties in a transaction, which are extra pieces of\n// information that client code or plugins can use to describe what a\n// transacion represents, so that they can update their [own\n// state](#state.StateField) accordingly.\n//\n// The [editor view](#view.EditorView) uses a few metadata properties:\n// it will attach a property `\"pointer\"` with the value `true` to\n// selection transactions directly caused by mouse or touch input, and\n// a `\"uiEvent\"` property of that may be `\"paste\"`, `\"cut\"`, or `\"drop\"`.\nexport class Transaction extends Transform {\n  constructor(state) {\n    super(state.doc)\n    // :: number\n    // The timestamp associated with this transaction, in the same\n    // format as `Date.now()`.\n    this.time = Date.now()\n    this.curSelection = state.selection\n    // The step count for which the current selection is valid.\n    this.curSelectionFor = 0\n    // :: ?[Mark]\n    // The stored marks set by this transaction, if any.\n    this.storedMarks = state.storedMarks\n    // Bitfield to track which aspects of the state were updated by\n    // this transaction.\n    this.updated = 0\n    // Object used to store metadata properties for the transaction.\n    this.meta = Object.create(null)\n  }\n\n  // :: Selection\n  // The transaction's current selection. This defaults to the editor\n  // selection [mapped](#state.Selection.map) through the steps in the\n  // transaction, but can be overwritten with\n  // [`setSelection`](#state.Transaction.setSelection).\n  get selection() {\n    if (this.curSelectionFor < this.steps.length) {\n      this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor))\n      this.curSelectionFor = this.steps.length\n    }\n    return this.curSelection\n  }\n\n  // :: (Selection) → Transaction\n  // Update the transaction's current selection. Will determine the\n  // selection that the editor gets when the transaction is applied.\n  setSelection(selection) {\n    if (selection.$from.doc != this.doc)\n      throw new RangeError(\"Selection passed to setSelection must point at the current document\")\n    this.curSelection = selection\n    this.curSelectionFor = this.steps.length\n    this.updated = (this.updated | UPDATED_SEL) & ~UPDATED_MARKS\n    this.storedMarks = null\n    return this\n  }\n\n  // :: bool\n  // Whether the selection was explicitly updated by this transaction.\n  get selectionSet() {\n    return (this.updated & UPDATED_SEL) > 0\n  }\n\n  // :: (?[Mark]) → Transaction\n  // Set the current stored marks.\n  setStoredMarks(marks) {\n    this.storedMarks = marks\n    this.updated |= UPDATED_MARKS\n    return this\n  }\n\n  // :: ([Mark]) → Transaction\n  // Make sure the current stored marks or, if that is null, the marks\n  // at the selection, match the given set of marks. Does nothing if\n  // this is already the case.\n  ensureMarks(marks) {\n    if (!Mark.sameSet(this.storedMarks || this.selection.$from.marks(), marks))\n      this.setStoredMarks(marks)\n    return this\n  }\n\n  // :: (Mark) → Transaction\n  // Add a mark to the set of stored marks.\n  addStoredMark(mark) {\n    return this.ensureMarks(mark.addToSet(this.storedMarks || this.selection.$head.marks()))\n  }\n\n  // :: (union<Mark, MarkType>) → Transaction\n  // Remove a mark or mark type from the set of stored marks.\n  removeStoredMark(mark) {\n    return this.ensureMarks(mark.removeFromSet(this.storedMarks || this.selection.$head.marks()))\n  }\n\n  // :: bool\n  // Whether the stored marks were explicitly set for this transaction.\n  get storedMarksSet() {\n    return (this.updated & UPDATED_MARKS) > 0\n  }\n\n  addStep(step, doc) {\n    super.addStep(step, doc)\n    this.updated = this.updated & ~UPDATED_MARKS\n    this.storedMarks = null\n  }\n\n  // :: (number) → Transaction\n  // Update the timestamp for the transaction.\n  setTime(time) {\n    this.time = time\n    return this\n  }\n\n  // :: (Slice) → Transaction\n  // Replace the current selection with the given slice.\n  replaceSelection(slice) {\n    this.selection.replace(this, slice)\n    return this\n  }\n\n  // :: (Node, ?bool) → Transaction\n  // Replace the selection with the given node. When `inheritMarks` is\n  // true and the content is inline, it inherits the marks from the\n  // place where it is inserted.\n  replaceSelectionWith(node, inheritMarks) {\n    let selection = this.selection\n    if (inheritMarks !== false)\n      node = node.mark(this.storedMarks || (selection.empty ? selection.$from.marks() : (selection.$from.marksAcross(selection.$to) || Mark.none)))\n    selection.replaceWith(this, node)\n    return this\n  }\n\n  // :: () → Transaction\n  // Delete the selection.\n  deleteSelection() {\n    this.selection.replace(this)\n    return this\n  }\n\n  // :: (string, from: ?number, to: ?number) → Transaction\n  // Replace the given range, or the selection if no range is given,\n  // with a text node containing the given string.\n  insertText(text, from, to = from) {\n    let schema = this.doc.type.schema\n    if (from == null) {\n      if (!text) return this.deleteSelection()\n      return this.replaceSelectionWith(schema.text(text), true)\n    } else {\n      if (!text) return this.deleteRange(from, to)\n      let marks = this.storedMarks\n      if (!marks) {\n        let $from = this.doc.resolve(from)\n        marks = to == from ? $from.marks() : $from.marksAcross(this.doc.resolve(to))\n      }\n      this.replaceRangeWith(from, to, schema.text(text, marks))\n      if (!this.selection.empty) this.setSelection(Selection.near(this.selection.$to))\n      return this\n    }\n  }\n\n  // :: (union<string, Plugin, PluginKey>, any) → Transaction\n  // Store a metadata property in this transaction, keyed either by\n  // name or by plugin.\n  setMeta(key, value) {\n    this.meta[typeof key == \"string\" ? key : key.key] = value\n    return this\n  }\n\n  // :: (union<string, Plugin, PluginKey>) → any\n  // Retrieve a metadata property for a given name or plugin.\n  getMeta(key) {\n    return this.meta[typeof key == \"string\" ? key : key.key]\n  }\n\n  // :: bool\n  // Returns true if this transaction doesn't contain any metadata,\n  // and can thus safely be extended.\n  get isGeneric() {\n    for (let _ in this.meta) return false\n    return true\n  }\n\n  // :: () → Transaction\n  // Indicate that the editor should scroll the selection into view\n  // when updated to the state produced by this transaction.\n  scrollIntoView() {\n    this.updated |= UPDATED_SCROLL\n    return this\n  }\n\n  get scrolledIntoView() {\n    return (this.updated & UPDATED_SCROLL) > 0\n  }\n}\n","import {Node} from \"prosemirror-model\"\n\nimport {Selection} from \"./selection\"\nimport {Transaction} from \"./transaction\"\n\nfunction bind(f, self) {\n  return !self || !f ? f : f.bind(self)\n}\n\nclass FieldDesc {\n  constructor(name, desc, self) {\n    this.name = name\n    this.init = bind(desc.init, self)\n    this.apply = bind(desc.apply, self)\n  }\n}\n\nconst baseFields = [\n  new FieldDesc(\"doc\", {\n    init(config) { return config.doc || config.schema.topNodeType.createAndFill() },\n    apply(tr) { return tr.doc }\n  }),\n\n  new FieldDesc(\"selection\", {\n    init(config, instance) { return config.selection || Selection.atStart(instance.doc) },\n    apply(tr) { return tr.selection }\n  }),\n\n  new FieldDesc(\"storedMarks\", {\n    init(config) { return config.storedMarks || null },\n    apply(tr, _marks, _old, state) { return state.selection.$cursor ? tr.storedMarks : null }\n  }),\n\n  new FieldDesc(\"scrollToSelection\", {\n    init() { return 0 },\n    apply(tr, prev) { return tr.scrolledIntoView ? prev + 1 : prev }\n  })\n]\n\n// Object wrapping the part of a state object that stays the same\n// across transactions. Stored in the state's `config` property.\nclass Configuration {\n  constructor(schema, plugins) {\n    this.schema = schema\n    this.fields = baseFields.concat()\n    this.plugins = []\n    this.pluginsByKey = Object.create(null)\n    if (plugins) plugins.forEach(plugin => {\n      if (this.pluginsByKey[plugin.key])\n        throw new RangeError(\"Adding different instances of a keyed plugin (\" + plugin.key + \")\")\n      this.plugins.push(plugin)\n      this.pluginsByKey[plugin.key] = plugin\n      if (plugin.spec.state)\n        this.fields.push(new FieldDesc(plugin.key, plugin.spec.state, plugin))\n    })\n  }\n}\n\n// ::- The state of a ProseMirror editor is represented by an object\n// of this type. A state is a persistent data structure—it isn't\n// updated, but rather a new state value is computed from an old one\n// using the [`apply`](#state.EditorState.apply) method.\n//\n// A state holds a number of built-in fields, and plugins can\n// [define](#state.PluginSpec.state) additional fields.\nexport class EditorState {\n  constructor(config) {\n    this.config = config\n  }\n\n  // doc:: Node\n  // The current document.\n\n  // selection:: Selection\n  // The selection.\n\n  // storedMarks:: ?[Mark]\n  // A set of marks to apply to the next input. Will be null when\n  // no explicit marks have been set.\n\n  // :: Schema\n  // The schema of the state's document.\n  get schema() {\n    return this.config.schema\n  }\n\n  // :: [Plugin]\n  // The plugins that are active in this state.\n  get plugins() {\n    return this.config.plugins\n  }\n\n  // :: (Transaction) → EditorState\n  // Apply the given transaction to produce a new state.\n  apply(tr) {\n    return this.applyTransaction(tr).state\n  }\n\n  // : (Transaction) → bool\n  filterTransaction(tr, ignore = -1) {\n    for (let i = 0; i < this.config.plugins.length; i++) if (i != ignore) {\n      let plugin = this.config.plugins[i]\n      if (plugin.spec.filterTransaction && !plugin.spec.filterTransaction.call(plugin, tr, this))\n        return false\n    }\n    return true\n  }\n\n  // :: (Transaction) → {state: EditorState, transactions: [Transaction]}\n  // Verbose variant of [`apply`](#state.EditorState.apply) that\n  // returns the precise transactions that were applied (which might\n  // be influenced by the [transaction\n  // hooks](#state.PluginSpec.filterTransaction) of\n  // plugins) along with the new state.\n  applyTransaction(rootTr) {\n    if (!this.filterTransaction(rootTr)) return {state: this, transactions: []}\n\n    let trs = [rootTr], newState = this.applyInner(rootTr), seen = null\n    // This loop repeatedly gives plugins a chance to respond to\n    // transactions as new transactions are added, making sure to only\n    // pass the transactions the plugin did not see before.\n    outer: for (;;) {\n      let haveNew = false\n      for (let i = 0; i < this.config.plugins.length; i++) {\n        let plugin = this.config.plugins[i]\n        if (plugin.spec.appendTransaction) {\n          let n = seen ? seen[i].n : 0, oldState = seen ? seen[i].state : this\n          let tr = n < trs.length &&\n              plugin.spec.appendTransaction.call(plugin, n ? trs.slice(n) : trs, oldState, newState)\n          if (tr && newState.filterTransaction(tr, i)) {\n            tr.setMeta(\"appendedTransaction\", rootTr)\n            if (!seen) {\n              seen = []\n              for (let j = 0; j < this.config.plugins.length; j++)\n                seen.push(j < i ? {state: newState, n: trs.length} : {state: this, n: 0})\n            }\n            trs.push(tr)\n            newState = newState.applyInner(tr)\n            haveNew = true\n          }\n          if (seen) seen[i] = {state: newState, n: trs.length}\n        }\n      }\n      if (!haveNew) return {state: newState, transactions: trs}\n    }\n  }\n\n  // : (Transaction) → EditorState\n  applyInner(tr) {\n    if (!tr.before.eq(this.doc)) throw new RangeError(\"Applying a mismatched transaction\")\n    let newInstance = new EditorState(this.config), fields = this.config.fields\n    for (let i = 0; i < fields.length; i++) {\n      let field = fields[i]\n      newInstance[field.name] = field.apply(tr, this[field.name], this, newInstance)\n    }\n    for (let i = 0; i < applyListeners.length; i++) applyListeners[i](this, tr, newInstance)\n    return newInstance\n  }\n\n  // :: Transaction\n  // Start a [transaction](#state.Transaction) from this state.\n  get tr() { return new Transaction(this) }\n\n  // :: (Object) → EditorState\n  // Create a new state.\n  //\n  //   config::- Configuration options. Must contain `schema` or `doc` (or both).\n  //\n  //      schema:: ?Schema\n  //      The schema to use (only relevant if no `doc` is specified).\n  //\n  //      doc:: ?Node\n  //      The starting document.\n  //\n  //      selection:: ?Selection\n  //      A valid selection in the document.\n  //\n  //      storedMarks:: ?[Mark]\n  //      The initial set of [stored marks](#state.EditorState.storedMarks).\n  //\n  //      plugins:: ?[Plugin]\n  //      The plugins that should be active in this state.\n  static create(config) {\n    let $config = new Configuration(config.doc ? config.doc.type.schema : config.schema, config.plugins)\n    let instance = new EditorState($config)\n    for (let i = 0; i < $config.fields.length; i++)\n      instance[$config.fields[i].name] = $config.fields[i].init(config, instance)\n    return instance\n  }\n\n  // :: (Object) → EditorState\n  // Create a new state based on this one, but with an adjusted set of\n  // active plugins. State fields that exist in both sets of plugins\n  // are kept unchanged. Those that no longer exist are dropped, and\n  // those that are new are initialized using their\n  // [`init`](#state.StateField.init) method, passing in the new\n  // configuration object..\n  //\n  //   config::- configuration options\n  //\n  //     plugins:: [Plugin]\n  //     New set of active plugins.\n  reconfigure(config) {\n    let $config = new Configuration(this.schema, config.plugins)\n    let fields = $config.fields, instance = new EditorState($config)\n    for (let i = 0; i < fields.length; i++) {\n      let name = fields[i].name\n      instance[name] = this.hasOwnProperty(name) ? this[name] : fields[i].init(config, instance)\n    }\n    return instance\n  }\n\n  // :: (?union<Object<Plugin>, string, number>) → Object\n  // Serialize this state to JSON. If you want to serialize the state\n  // of plugins, pass an object mapping property names to use in the\n  // resulting JSON object to plugin objects. The argument may also be\n  // a string or number, in which case it is ignored, to support the\n  // way `JSON.stringify` calls `toString` methods.\n  toJSON(pluginFields) {\n    let result = {doc: this.doc.toJSON(), selection: this.selection.toJSON()}\n    if (this.storedMarks) result.storedMarks = this.storedMarks.map(m => m.toJSON())\n    if (pluginFields && typeof pluginFields == 'object') for (let prop in pluginFields) {\n      if (prop == \"doc\" || prop == \"selection\")\n        throw new RangeError(\"The JSON fields `doc` and `selection` are reserved\")\n      let plugin = pluginFields[prop], state = plugin.spec.state\n      if (state && state.toJSON) result[prop] = state.toJSON.call(plugin, this[plugin.key])\n    }\n    return result\n  }\n\n  // :: (Object, Object, ?Object<Plugin>) → EditorState\n  // Deserialize a JSON representation of a state. `config` should\n  // have at least a `schema` field, and should contain array of\n  // plugins to initialize the state with. `pluginFields` can be used\n  // to deserialize the state of plugins, by associating plugin\n  // instances with the property names they use in the JSON object.\n  //\n  //   config::- configuration options\n  //\n  //     schema:: Schema\n  //     The schema to use.\n  //\n  //     plugins:: ?[Plugin]\n  //     The set of active plugins.\n  static fromJSON(config, json, pluginFields) {\n    if (!json) throw new RangeError(\"Invalid input for EditorState.fromJSON\")\n    if (!config.schema) throw new RangeError(\"Required config field 'schema' missing\")\n    let $config = new Configuration(config.schema, config.plugins)\n    let instance = new EditorState($config)\n    $config.fields.forEach(field => {\n      if (field.name == \"doc\") {\n        instance.doc = Node.fromJSON(config.schema, json.doc)\n      } else if (field.name == \"selection\") {\n        instance.selection = Selection.fromJSON(instance.doc, json.selection)\n      } else if (field.name == \"storedMarks\") {\n        if (json.storedMarks) instance.storedMarks = json.storedMarks.map(config.schema.markFromJSON)\n      } else {\n        if (pluginFields) for (let prop in pluginFields) {\n          let plugin = pluginFields[prop], state = plugin.spec.state\n          if (plugin.key == field.name && state && state.fromJSON &&\n              Object.prototype.hasOwnProperty.call(json, prop)) {\n            // This field belongs to a plugin mapped to a JSON field, read it from there.\n            instance[field.name] = state.fromJSON.call(plugin, config, json[prop], instance)\n            return\n          }\n        }\n        instance[field.name] = field.init(config, instance)\n      }\n    })\n    return instance\n  }\n\n  // Kludge to allow the view to track mappings between different\n  // instances of a state.\n  //\n  // FIXME this is no longer needed as of prosemirror-view 1.9.0,\n  // though due to backwards-compat we should probably keep it around\n  // for a while (if only as a no-op)\n  static addApplyListener(f) {\n    applyListeners.push(f)\n  }\n  static removeApplyListener(f) {\n    let found = applyListeners.indexOf(f)\n    if (found > -1) applyListeners.splice(found, 1)\n  }\n}\n\nconst applyListeners = []\n","// PluginSpec:: interface\n//\n// This is the type passed to the [`Plugin`](#state.Plugin)\n// constructor. It provides a definition for a plugin.\n//\n//   props:: ?EditorProps\n//   The [view props](#view.EditorProps) added by this plugin. Props\n//   that are functions will be bound to have the plugin instance as\n//   their `this` binding.\n//\n//   state:: ?StateField<any>\n//   Allows a plugin to define a [state field](#state.StateField), an\n//   extra slot in the state object in which it can keep its own data.\n//\n//   key:: ?PluginKey\n//   Can be used to make this a keyed plugin. You can have only one\n//   plugin with a given key in a given state, but it is possible to\n//   access the plugin's configuration and state through the key,\n//   without having access to the plugin instance object.\n//\n//   view:: ?(EditorView) → Object\n//   When the plugin needs to interact with the editor view, or\n//   set something up in the DOM, use this field. The function\n//   will be called when the plugin's state is associated with an\n//   editor view.\n//\n//     return::-\n//     Should return an object with the following optional\n//     properties:\n//\n//       update:: ?(view: EditorView, prevState: EditorState)\n//       Called whenever the view's state is updated.\n//\n//       destroy:: ?()\n//       Called when the view is destroyed or receives a state\n//       with different plugins.\n//\n//   filterTransaction:: ?(Transaction, EditorState) → bool\n//   When present, this will be called before a transaction is\n//   applied by the state, allowing the plugin to cancel it (by\n//   returning false).\n//\n//   appendTransaction:: ?(transactions: [Transaction], oldState: EditorState, newState: EditorState) → ?Transaction\n//   Allows the plugin to append another transaction to be applied\n//   after the given array of transactions. When another plugin\n//   appends a transaction after this was called, it is called again\n//   with the new state and new transactions—but only the new\n//   transactions, i.e. it won't be passed transactions that it\n//   already saw.\n\nfunction bindProps(obj, self, target) {\n  for (let prop in obj) {\n    let val = obj[prop]\n    if (val instanceof Function) val = val.bind(self)\n    else if (prop == \"handleDOMEvents\") val = bindProps(val, self, {})\n    target[prop] = val\n  }\n  return target\n}\n\n// ::- Plugins bundle functionality that can be added to an editor.\n// They are part of the [editor state](#state.EditorState) and\n// may influence that state and the view that contains it.\nexport class Plugin {\n  // :: (PluginSpec)\n  // Create a plugin.\n  constructor(spec) {\n    // :: EditorProps\n    // The [props](#view.EditorProps) exported by this plugin.\n    this.props = {}\n    if (spec.props) bindProps(spec.props, this, this.props)\n    // :: Object\n    // The plugin's [spec object](#state.PluginSpec).\n    this.spec = spec\n    this.key = spec.key ? spec.key.key : createKey(\"plugin\")\n  }\n\n  // :: (EditorState) → any\n  // Extract the plugin's state field from an editor state.\n  getState(state) { return state[this.key] }\n}\n\n// StateField:: interface<T>\n// A plugin spec may provide a state field (under its\n// [`state`](#state.PluginSpec.state) property) of this type, which\n// describes the state it wants to keep. Functions provided here are\n// always called with the plugin instance as their `this` binding.\n//\n//   init:: (config: Object, instance: EditorState) → T\n//   Initialize the value of the field. `config` will be the object\n//   passed to [`EditorState.create`](#state.EditorState^create). Note\n//   that `instance` is a half-initialized state instance, and will\n//   not have values for plugin fields initialized after this one.\n//\n//   apply:: (tr: Transaction, value: T, oldState: EditorState, newState: EditorState) → T\n//   Apply the given transaction to this state field, producing a new\n//   field value. Note that the `newState` argument is again a partially\n//   constructed state does not yet contain the state from plugins\n//   coming after this one.\n//\n//   toJSON:: ?(value: T) → *\n//   Convert this field to JSON. Optional, can be left off to disable\n//   JSON serialization for the field.\n//\n//   fromJSON:: ?(config: Object, value: *, state: EditorState) → T\n//   Deserialize the JSON representation of this field. Note that the\n//   `state` argument is again a half-initialized state.\n\nconst keys = Object.create(null)\n\nfunction createKey(name) {\n  if (name in keys) return name + \"$\" + ++keys[name]\n  keys[name] = 0\n  return name + \"$\"\n}\n\n// ::- A key is used to [tag](#state.PluginSpec.key)\n// plugins in a way that makes it possible to find them, given an\n// editor state. Assigning a key does mean only one plugin of that\n// type can be active in a state.\nexport class PluginKey {\n  // :: (?string)\n  // Create a plugin key.\n  constructor(name = \"key\") { this.key = createKey(name) }\n\n  // :: (EditorState) → ?Plugin\n  // Get the active plugin with this key, if any, from an editor\n  // state.\n  get(state) { return state.config.pluginsByKey[this.key] }\n\n  // :: (EditorState) → ?any\n  // Get the plugin's state from an editor state.\n  getState(state) { return state[this.key] }\n}\n","// Mappable:: interface\n// There are several things that positions can be mapped through.\n// Such objects conform to this interface.\n//\n//   map:: (pos: number, assoc: ?number) → number\n//   Map a position through this object. When given, `assoc` (should\n//   be -1 or 1, defaults to 1) determines with which side the\n//   position is associated, which determines in which direction to\n//   move when a chunk of content is inserted at the mapped position.\n//\n//   mapResult:: (pos: number, assoc: ?number) → MapResult\n//   Map a position, and return an object containing additional\n//   information about the mapping. The result's `deleted` field tells\n//   you whether the position was deleted (completely enclosed in a\n//   replaced range) during the mapping. When content on only one side\n//   is deleted, the position itself is only considered deleted when\n//   `assoc` points in the direction of the deleted content.\n\n// Recovery values encode a range index and an offset. They are\n// represented as numbers, because tons of them will be created when\n// mapping, for example, a large number of decorations. The number's\n// lower 16 bits provide the index, the remaining bits the offset.\n//\n// Note: We intentionally don't use bit shift operators to en- and\n// decode these, since those clip to 32 bits, which we might in rare\n// cases want to overflow. A 64-bit float can represent 48-bit\n// integers precisely.\n\nconst lower16 = 0xffff\nconst factor16 = Math.pow(2, 16)\n\nfunction makeRecover(index, offset) { return index + offset * factor16 }\nfunction recoverIndex(value) { return value & lower16 }\nfunction recoverOffset(value) { return (value - (value & lower16)) / factor16 }\n\n// ::- An object representing a mapped position with extra\n// information.\nexport class MapResult {\n  constructor(pos, deleted = false, recover = null) {\n    // :: number The mapped version of the position.\n    this.pos = pos\n    // :: bool Tells you whether the position was deleted, that is,\n    // whether the step removed its surroundings from the document.\n    this.deleted = deleted\n    this.recover = recover\n  }\n}\n\n// :: class extends Mappable\n// A map describing the deletions and insertions made by a step, which\n// can be used to find the correspondence between positions in the\n// pre-step version of a document and the same position in the\n// post-step version.\nexport class StepMap {\n  // :: ([number])\n  // Create a position map. The modifications to the document are\n  // represented as an array of numbers, in which each group of three\n  // represents a modified chunk as `[start, oldSize, newSize]`.\n  constructor(ranges, inverted = false) {\n    this.ranges = ranges\n    this.inverted = inverted\n  }\n\n  recover(value) {\n    let diff = 0, index = recoverIndex(value)\n    if (!this.inverted) for (let i = 0; i < index; i++)\n      diff += this.ranges[i * 3 + 2] - this.ranges[i * 3 + 1]\n    return this.ranges[index * 3] + diff + recoverOffset(value)\n  }\n\n  // : (number, ?number) → MapResult\n  mapResult(pos, assoc = 1) { return this._map(pos, assoc, false) }\n\n  // : (number, ?number) → number\n  map(pos, assoc = 1) { return this._map(pos, assoc, true) }\n\n  _map(pos, assoc, simple) {\n    let diff = 0, oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2\n    for (let i = 0; i < this.ranges.length; i += 3) {\n      let start = this.ranges[i] - (this.inverted ? diff : 0)\n      if (start > pos) break\n      let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex], end = start + oldSize\n      if (pos <= end) {\n        let side = !oldSize ? assoc : pos == start ? -1 : pos == end ? 1 : assoc\n        let result = start + diff + (side < 0 ? 0 : newSize)\n        if (simple) return result\n        let recover = pos == (assoc < 0 ? start : end) ? null : makeRecover(i / 3, pos - start)\n        return new MapResult(result, assoc < 0 ? pos != start : pos != end, recover)\n      }\n      diff += newSize - oldSize\n    }\n    return simple ? pos + diff : new MapResult(pos + diff)\n  }\n\n  touches(pos, recover) {\n    let diff = 0, index = recoverIndex(recover)\n    let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2\n    for (let i = 0; i < this.ranges.length; i += 3) {\n      let start = this.ranges[i] - (this.inverted ? diff : 0)\n      if (start > pos) break\n      let oldSize = this.ranges[i + oldIndex], end = start + oldSize\n      if (pos <= end && i == index * 3) return true\n      diff += this.ranges[i + newIndex] - oldSize\n    }\n    return false\n  }\n\n  // :: ((oldStart: number, oldEnd: number, newStart: number, newEnd: number))\n  // Calls the given function on each of the changed ranges included in\n  // this map.\n  forEach(f) {\n    let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2\n    for (let i = 0, diff = 0; i < this.ranges.length; i += 3) {\n      let start = this.ranges[i], oldStart = start - (this.inverted ? diff : 0), newStart = start + (this.inverted ? 0 : diff)\n      let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex]\n      f(oldStart, oldStart + oldSize, newStart, newStart + newSize)\n      diff += newSize - oldSize\n    }\n  }\n\n  // :: () → StepMap\n  // Create an inverted version of this map. The result can be used to\n  // map positions in the post-step document to the pre-step document.\n  invert() {\n    return new StepMap(this.ranges, !this.inverted)\n  }\n\n  toString() {\n    return (this.inverted ? \"-\" : \"\") + JSON.stringify(this.ranges)\n  }\n\n  // :: (n: number) → StepMap\n  // Create a map that moves all positions by offset `n` (which may be\n  // negative). This can be useful when applying steps meant for a\n  // sub-document to a larger document, or vice-versa.\n  static offset(n) {\n    return n == 0 ? StepMap.empty : new StepMap(n < 0 ? [0, -n, 0] : [0, 0, n])\n  }\n}\n\nStepMap.empty = new StepMap([])\n\n// :: class extends Mappable\n// A mapping represents a pipeline of zero or more [step\n// maps](#transform.StepMap). It has special provisions for losslessly\n// handling mapping positions through a series of steps in which some\n// steps are inverted versions of earlier steps. (This comes up when\n// ‘[rebasing](/docs/guide/#transform.rebasing)’ steps for\n// collaboration or history management.)\nexport class Mapping {\n  // :: (?[StepMap])\n  // Create a new mapping with the given position maps.\n  constructor(maps, mirror, from, to) {\n    // :: [StepMap]\n    // The step maps in this mapping.\n    this.maps = maps || []\n    // :: number\n    // The starting position in the `maps` array, used when `map` or\n    // `mapResult` is called.\n    this.from = from || 0\n    // :: number\n    // The end position in the `maps` array.\n    this.to = to == null ? this.maps.length : to\n    this.mirror = mirror\n  }\n\n  // :: (?number, ?number) → Mapping\n  // Create a mapping that maps only through a part of this one.\n  slice(from = 0, to = this.maps.length) {\n    return new Mapping(this.maps, this.mirror, from, to)\n  }\n\n  copy() {\n    return new Mapping(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to)\n  }\n\n  // :: (StepMap, ?number)\n  // Add a step map to the end of this mapping. If `mirrors` is\n  // given, it should be the index of the step map that is the mirror\n  // image of this one.\n  appendMap(map, mirrors) {\n    this.to = this.maps.push(map)\n    if (mirrors != null) this.setMirror(this.maps.length - 1, mirrors)\n  }\n\n  // :: (Mapping)\n  // Add all the step maps in a given mapping to this one (preserving\n  // mirroring information).\n  appendMapping(mapping) {\n    for (let i = 0, startSize = this.maps.length; i < mapping.maps.length; i++) {\n      let mirr = mapping.getMirror(i)\n      this.appendMap(mapping.maps[i], mirr != null && mirr < i ? startSize + mirr : null)\n    }\n  }\n\n  // :: (number) → ?number\n  // Finds the offset of the step map that mirrors the map at the\n  // given offset, in this mapping (as per the second argument to\n  // `appendMap`).\n  getMirror(n) {\n    if (this.mirror) for (let i = 0; i < this.mirror.length; i++)\n      if (this.mirror[i] == n) return this.mirror[i + (i % 2 ? -1 : 1)]\n  }\n\n  setMirror(n, m) {\n    if (!this.mirror) this.mirror = []\n    this.mirror.push(n, m)\n  }\n\n  // :: (Mapping)\n  // Append the inverse of the given mapping to this one.\n  appendMappingInverted(mapping) {\n    for (let i = mapping.maps.length - 1, totalSize = this.maps.length + mapping.maps.length; i >= 0; i--) {\n      let mirr = mapping.getMirror(i)\n      this.appendMap(mapping.maps[i].invert(), mirr != null && mirr > i ? totalSize - mirr - 1 : null)\n    }\n  }\n\n  // :: () → Mapping\n  // Create an inverted version of this mapping.\n  invert() {\n    let inverse = new Mapping\n    inverse.appendMappingInverted(this)\n    return inverse\n  }\n\n  // : (number, ?number) → number\n  // Map a position through this mapping.\n  map(pos, assoc = 1) {\n    if (this.mirror) return this._map(pos, assoc, true)\n    for (let i = this.from; i < this.to; i++)\n      pos = this.maps[i].map(pos, assoc)\n    return pos\n  }\n\n  // : (number, ?number) → MapResult\n  // Map a position through this mapping, returning a mapping\n  // result.\n  mapResult(pos, assoc = 1) { return this._map(pos, assoc, false) }\n\n  _map(pos, assoc, simple) {\n    let deleted = false\n\n    for (let i = this.from; i < this.to; i++) {\n      let map = this.maps[i], result = map.mapResult(pos, assoc)\n      if (result.recover != null) {\n        let corr = this.getMirror(i)\n        if (corr != null && corr > i && corr < this.to) {\n          i = corr\n          pos = this.maps[corr].recover(result.recover)\n          continue\n        }\n      }\n\n      if (result.deleted) deleted = true\n      pos = result.pos\n    }\n\n    return simple ? pos : new MapResult(pos, deleted)\n  }\n}\n","import {Mapping} from \"./map\"\n\nexport function TransformError(message) {\n  let err = Error.call(this, message)\n  err.__proto__ = TransformError.prototype\n  return err\n}\n\nTransformError.prototype = Object.create(Error.prototype)\nTransformError.prototype.constructor = TransformError\nTransformError.prototype.name = \"TransformError\"\n\n// ::- Abstraction to build up and track an array of\n// [steps](#transform.Step) representing a document transformation.\n//\n// Most transforming methods return the `Transform` object itself, so\n// that they can be chained.\nexport class Transform {\n  // :: (Node)\n  // Create a transform that starts with the given document.\n  constructor(doc) {\n    // :: Node\n    // The current document (the result of applying the steps in the\n    // transform).\n    this.doc = doc\n    // :: [Step]\n    // The steps in this transform.\n    this.steps = []\n    // :: [Node]\n    // The documents before each of the steps.\n    this.docs = []\n    // :: Mapping\n    // A mapping with the maps for each of the steps in this transform.\n    this.mapping = new Mapping\n  }\n\n  // :: Node The starting document.\n  get before() { return this.docs.length ? this.docs[0] : this.doc }\n\n  // :: (step: Step) → this\n  // Apply a new step in this transform, saving the result. Throws an\n  // error when the step fails.\n  step(object) {\n    let result = this.maybeStep(object)\n    if (result.failed) throw new TransformError(result.failed)\n    return this\n  }\n\n  // :: (Step) → StepResult\n  // Try to apply a step in this transformation, ignoring it if it\n  // fails. Returns the step result.\n  maybeStep(step) {\n    let result = step.apply(this.doc)\n    if (!result.failed) this.addStep(step, result.doc)\n    return result\n  }\n\n  // :: bool\n  // True when the document has been changed (when there are any\n  // steps).\n  get docChanged() {\n    return this.steps.length > 0\n  }\n\n  addStep(step, doc) {\n    this.docs.push(this.doc)\n    this.steps.push(step)\n    this.mapping.appendMap(step.getMap())\n    this.doc = doc\n  }\n}\n","import {ReplaceError} from \"prosemirror-model\"\n\nimport {StepMap} from \"./map\"\n\nfunction mustOverride() { throw new Error(\"Override me\") }\n\nconst stepsByID = Object.create(null)\n\n// ::- A step object represents an atomic change. It generally applies\n// only to the document it was created for, since the positions\n// stored in it will only make sense for that document.\n//\n// New steps are defined by creating classes that extend `Step`,\n// overriding the `apply`, `invert`, `map`, `getMap` and `fromJSON`\n// methods, and registering your class with a unique\n// JSON-serialization identifier using\n// [`Step.jsonID`](#transform.Step^jsonID).\nexport class Step {\n  // :: (doc: Node) → StepResult\n  // Applies this step to the given document, returning a result\n  // object that either indicates failure, if the step can not be\n  // applied to this document, or indicates success by containing a\n  // transformed document.\n  apply(_doc) { return mustOverride() }\n\n  // :: () → StepMap\n  // Get the step map that represents the changes made by this step,\n  // and which can be used to transform between positions in the old\n  // and the new document.\n  getMap() { return StepMap.empty }\n\n  // :: (doc: Node) → Step\n  // Create an inverted version of this step. Needs the document as it\n  // was before the step as argument.\n  invert(_doc) { return mustOverride() }\n\n  // :: (mapping: Mappable) → ?Step\n  // Map this step through a mappable thing, returning either a\n  // version of that step with its positions adjusted, or `null` if\n  // the step was entirely deleted by the mapping.\n  map(_mapping) { return mustOverride() }\n\n  // :: (other: Step) → ?Step\n  // Try to merge this step with another one, to be applied directly\n  // after it. Returns the merged step when possible, null if the\n  // steps can't be merged.\n  merge(_other) { return null }\n\n  // :: () → Object\n  // Create a JSON-serializeable representation of this step. When\n  // defining this for a custom subclass, make sure the result object\n  // includes the step type's [JSON id](#transform.Step^jsonID) under\n  // the `stepType` property.\n  toJSON() { return mustOverride() }\n\n  // :: (Schema, Object) → Step\n  // Deserialize a step from its JSON representation. Will call\n  // through to the step class' own implementation of this method.\n  static fromJSON(schema, json) {\n    if (!json || !json.stepType) throw new RangeError(\"Invalid input for Step.fromJSON\")\n    let type = stepsByID[json.stepType]\n    if (!type) throw new RangeError(`No step type ${json.stepType} defined`)\n    return type.fromJSON(schema, json)\n  }\n\n  // :: (string, constructor<Step>)\n  // To be able to serialize steps to JSON, each step needs a string\n  // ID to attach to its JSON representation. Use this method to\n  // register an ID for your step classes. Try to pick something\n  // that's unlikely to clash with steps from other modules.\n  static jsonID(id, stepClass) {\n    if (id in stepsByID) throw new RangeError(\"Duplicate use of step JSON ID \" + id)\n    stepsByID[id] = stepClass\n    stepClass.prototype.jsonID = id\n    return stepClass\n  }\n}\n\n// ::- The result of [applying](#transform.Step.apply) a step. Contains either a\n// new document or a failure value.\nexport class StepResult {\n  // : (?Node, ?string)\n  constructor(doc, failed) {\n    // :: ?Node The transformed document.\n    this.doc = doc\n    // :: ?string Text providing information about a failed step.\n    this.failed = failed\n  }\n\n  // :: (Node) → StepResult\n  // Create a successful step result.\n  static ok(doc) { return new StepResult(doc, null) }\n\n  // :: (string) → StepResult\n  // Create a failed step result.\n  static fail(message) { return new StepResult(null, message) }\n\n  // :: (Node, number, number, Slice) → StepResult\n  // Call [`Node.replace`](#model.Node.replace) with the given\n  // arguments. Create a successful result if it succeeds, and a\n  // failed one if it throws a `ReplaceError`.\n  static fromReplace(doc, from, to, slice) {\n    try {\n      return StepResult.ok(doc.replace(from, to, slice))\n    } catch (e) {\n      if (e instanceof ReplaceError) return StepResult.fail(e.message)\n      throw e\n    }\n  }\n}\n","import {Slice} from \"prosemirror-model\"\n\nimport {Step, StepResult} from \"./step\"\nimport {StepMap} from \"./map\"\n\n// ::- Replace a part of the document with a slice of new content.\nexport class ReplaceStep extends Step {\n  // :: (number, number, Slice, ?bool)\n  // The given `slice` should fit the 'gap' between `from` and\n  // `to`—the depths must line up, and the surrounding nodes must be\n  // able to be joined with the open sides of the slice. When\n  // `structure` is true, the step will fail if the content between\n  // from and to is not just a sequence of closing and then opening\n  // tokens (this is to guard against rebased replace steps\n  // overwriting something they weren't supposed to).\n  constructor(from, to, slice, structure) {\n    super()\n    // :: number\n    // The start position of the replaced range.\n    this.from = from\n    // :: number\n    // The end position of the replaced range.\n    this.to = to\n    // :: Slice\n    // The slice to insert.\n    this.slice = slice\n    this.structure = !!structure\n  }\n\n  apply(doc) {\n    if (this.structure && contentBetween(doc, this.from, this.to))\n      return StepResult.fail(\"Structure replace would overwrite content\")\n    return StepResult.fromReplace(doc, this.from, this.to, this.slice)\n  }\n\n  getMap() {\n    return new StepMap([this.from, this.to - this.from, this.slice.size])\n  }\n\n  invert(doc) {\n    return new ReplaceStep(this.from, this.from + this.slice.size, doc.slice(this.from, this.to))\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    if (from.deleted && to.deleted) return null\n    return new ReplaceStep(from.pos, Math.max(from.pos, to.pos), this.slice)\n  }\n\n  merge(other) {\n    if (!(other instanceof ReplaceStep) || other.structure || this.structure) return null\n\n    if (this.from + this.slice.size == other.from && !this.slice.openEnd && !other.slice.openStart) {\n      let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n          : new Slice(this.slice.content.append(other.slice.content), this.slice.openStart, other.slice.openEnd)\n      return new ReplaceStep(this.from, this.to + (other.to - other.from), slice, this.structure)\n    } else if (other.to == this.from && !this.slice.openStart && !other.slice.openEnd) {\n      let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n          : new Slice(other.slice.content.append(this.slice.content), other.slice.openStart, this.slice.openEnd)\n      return new ReplaceStep(other.from, this.to, slice, this.structure)\n    } else {\n      return null\n    }\n  }\n\n  toJSON() {\n    let json = {stepType: \"replace\", from: this.from, to: this.to}\n    if (this.slice.size) json.slice = this.slice.toJSON()\n    if (this.structure) json.structure = true\n    return json\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      throw new RangeError(\"Invalid input for ReplaceStep.fromJSON\")\n    return new ReplaceStep(json.from, json.to, Slice.fromJSON(schema, json.slice), !!json.structure)\n  }\n}\n\nStep.jsonID(\"replace\", ReplaceStep)\n\n// ::- Replace a part of the document with a slice of content, but\n// preserve a range of the replaced content by moving it into the\n// slice.\nexport class ReplaceAroundStep extends Step {\n  // :: (number, number, number, number, Slice, number, ?bool)\n  // Create a replace-around step with the given range and gap.\n  // `insert` should be the point in the slice into which the content\n  // of the gap should be moved. `structure` has the same meaning as\n  // it has in the [`ReplaceStep`](#transform.ReplaceStep) class.\n  constructor(from, to, gapFrom, gapTo, slice, insert, structure) {\n    super()\n    // :: number\n    // The start position of the replaced range.\n    this.from = from\n    // :: number\n    // The end position of the replaced range.\n    this.to = to\n    // :: number\n    // The start of preserved range.\n    this.gapFrom = gapFrom\n    // :: number\n    // The end of preserved range.\n    this.gapTo = gapTo\n    // :: Slice\n    // The slice to insert.\n    this.slice = slice\n    // :: number\n    // The position in the slice where the preserved range should be\n    // inserted.\n    this.insert = insert\n    this.structure = !!structure\n  }\n\n  apply(doc) {\n    if (this.structure && (contentBetween(doc, this.from, this.gapFrom) ||\n                           contentBetween(doc, this.gapTo, this.to)))\n      return StepResult.fail(\"Structure gap-replace would overwrite content\")\n\n    let gap = doc.slice(this.gapFrom, this.gapTo)\n    if (gap.openStart || gap.openEnd)\n      return StepResult.fail(\"Gap is not a flat range\")\n    let inserted = this.slice.insertAt(this.insert, gap.content)\n    if (!inserted) return StepResult.fail(\"Content does not fit in gap\")\n    return StepResult.fromReplace(doc, this.from, this.to, inserted)\n  }\n\n  getMap() {\n    return new StepMap([this.from, this.gapFrom - this.from, this.insert,\n                        this.gapTo, this.to - this.gapTo, this.slice.size - this.insert])\n  }\n\n  invert(doc) {\n    let gap = this.gapTo - this.gapFrom\n    return new ReplaceAroundStep(this.from, this.from + this.slice.size + gap,\n                                 this.from + this.insert, this.from + this.insert + gap,\n                                 doc.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from),\n                                 this.gapFrom - this.from, this.structure)\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    let gapFrom = mapping.map(this.gapFrom, -1), gapTo = mapping.map(this.gapTo, 1)\n    if ((from.deleted && to.deleted) || gapFrom < from.pos || gapTo > to.pos) return null\n    return new ReplaceAroundStep(from.pos, to.pos, gapFrom, gapTo, this.slice, this.insert, this.structure)\n  }\n\n  toJSON() {\n    let json = {stepType: \"replaceAround\", from: this.from, to: this.to,\n                gapFrom: this.gapFrom, gapTo: this.gapTo, insert: this.insert}\n    if (this.slice.size) json.slice = this.slice.toJSON()\n    if (this.structure) json.structure = true\n    return json\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\" ||\n        typeof json.gapFrom != \"number\" || typeof json.gapTo != \"number\" || typeof json.insert != \"number\")\n      throw new RangeError(\"Invalid input for ReplaceAroundStep.fromJSON\")\n    return new ReplaceAroundStep(json.from, json.to, json.gapFrom, json.gapTo,\n                                 Slice.fromJSON(schema, json.slice), json.insert, !!json.structure)\n  }\n}\n\nStep.jsonID(\"replaceAround\", ReplaceAroundStep)\n\nfunction contentBetween(doc, from, to) {\n  let $from = doc.resolve(from), dist = to - from, depth = $from.depth\n  while (dist > 0 && depth > 0 && $from.indexAfter(depth) == $from.node(depth).childCount) {\n    depth--\n    dist--\n  }\n  if (dist > 0) {\n    let next = $from.node(depth).maybeChild($from.indexAfter(depth))\n    while (dist > 0) {\n      if (!next || next.isLeaf) return true\n      next = next.firstChild\n      dist--\n    }\n  }\n  return false\n}\n","import {Slice, Fragment} from \"prosemirror-model\"\n\nimport {Transform} from \"./transform\"\nimport {ReplaceStep, ReplaceAroundStep} from \"./replace_step\"\n\nfunction canCut(node, start, end) {\n  return (start == 0 || node.canReplace(start, node.childCount)) &&\n    (end == node.childCount || node.canReplace(0, end))\n}\n\n// :: (NodeRange) → ?number\n// Try to find a target depth to which the content in the given range\n// can be lifted. Will not go across\n// [isolating](#model.NodeSpec.isolating) parent nodes.\nexport function liftTarget(range) {\n  let parent = range.parent\n  let content = parent.content.cutByIndex(range.startIndex, range.endIndex)\n  for (let depth = range.depth;; --depth) {\n    let node = range.$from.node(depth)\n    let index = range.$from.index(depth), endIndex = range.$to.indexAfter(depth)\n    if (depth < range.depth && node.canReplace(index, endIndex, content))\n      return depth\n    if (depth == 0 || node.type.spec.isolating || !canCut(node, index, endIndex)) break\n  }\n}\n\n// :: (NodeRange, number) → this\n// Split the content in the given range off from its parent, if there\n// is sibling content before or after it, and move it up the tree to\n// the depth specified by `target`. You'll probably want to use\n// [`liftTarget`](#transform.liftTarget) to compute `target`, to make\n// sure the lift is valid.\nTransform.prototype.lift = function(range, target) {\n  let {$from, $to, depth} = range\n\n  let gapStart = $from.before(depth + 1), gapEnd = $to.after(depth + 1)\n  let start = gapStart, end = gapEnd\n\n  let before = Fragment.empty, openStart = 0\n  for (let d = depth, splitting = false; d > target; d--)\n    if (splitting || $from.index(d) > 0) {\n      splitting = true\n      before = Fragment.from($from.node(d).copy(before))\n      openStart++\n    } else {\n      start--\n    }\n  let after = Fragment.empty, openEnd = 0\n  for (let d = depth, splitting = false; d > target; d--)\n    if (splitting || $to.after(d + 1) < $to.end(d)) {\n      splitting = true\n      after = Fragment.from($to.node(d).copy(after))\n      openEnd++\n    } else {\n      end++\n    }\n\n  return this.step(new ReplaceAroundStep(start, end, gapStart, gapEnd,\n                                         new Slice(before.append(after), openStart, openEnd),\n                                         before.size - openStart, true))\n}\n\n// :: (NodeRange, NodeType, ?Object, ?NodeRange) → ?[{type: NodeType, attrs: ?Object}]\n// Try to find a valid way to wrap the content in the given range in a\n// node of the given type. May introduce extra nodes around and inside\n// the wrapper node, if necessary. Returns null if no valid wrapping\n// could be found. When `innerRange` is given, that range's content is\n// used as the content to fit into the wrapping, instead of the\n// content of `range`.\nexport function findWrapping(range, nodeType, attrs, innerRange = range) {\n  let around = findWrappingOutside(range, nodeType)\n  let inner = around && findWrappingInside(innerRange, nodeType)\n  if (!inner) return null\n  return around.map(withAttrs).concat({type: nodeType, attrs}).concat(inner.map(withAttrs))\n}\n\nfunction withAttrs(type) { return {type, attrs: null} }\n\nfunction findWrappingOutside(range, type) {\n  let {parent, startIndex, endIndex} = range\n  let around = parent.contentMatchAt(startIndex).findWrapping(type)\n  if (!around) return null\n  let outer = around.length ? around[0] : type\n  return parent.canReplaceWith(startIndex, endIndex, outer) ? around : null\n}\n\nfunction findWrappingInside(range, type) {\n  let {parent, startIndex, endIndex} = range\n  let inner = parent.child(startIndex)\n  let inside = type.contentMatch.findWrapping(inner.type)\n  if (!inside) return null\n  let lastType = inside.length ? inside[inside.length - 1] : type\n  let innerMatch = lastType.contentMatch\n  for (let i = startIndex; innerMatch && i < endIndex; i++)\n    innerMatch = innerMatch.matchType(parent.child(i).type)\n  if (!innerMatch || !innerMatch.validEnd) return null\n  return inside\n}\n\n// :: (NodeRange, [{type: NodeType, attrs: ?Object}]) → this\n// Wrap the given [range](#model.NodeRange) in the given set of wrappers.\n// The wrappers are assumed to be valid in this position, and should\n// probably be computed with [`findWrapping`](#transform.findWrapping).\nTransform.prototype.wrap = function(range, wrappers) {\n  let content = Fragment.empty\n  for (let i = wrappers.length - 1; i >= 0; i--)\n    content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content))\n\n  let start = range.start, end = range.end\n  return this.step(new ReplaceAroundStep(start, end, start, end, new Slice(content, 0, 0), wrappers.length, true))\n}\n\n// :: (number, ?number, NodeType, ?Object) → this\n// Set the type of all textblocks (partly) between `from` and `to` to\n// the given node type with the given attributes.\nTransform.prototype.setBlockType = function(from, to = from, type, attrs) {\n  if (!type.isTextblock) throw new RangeError(\"Type given to setBlockType should be a textblock\")\n  let mapFrom = this.steps.length\n  this.doc.nodesBetween(from, to, (node, pos) => {\n    if (node.isTextblock && !node.hasMarkup(type, attrs) && canChangeType(this.doc, this.mapping.slice(mapFrom).map(pos), type)) {\n      // Ensure all markup that isn't allowed in the new node type is cleared\n      this.clearIncompatible(this.mapping.slice(mapFrom).map(pos, 1), type)\n      let mapping = this.mapping.slice(mapFrom)\n      let startM = mapping.map(pos, 1), endM = mapping.map(pos + node.nodeSize, 1)\n      this.step(new ReplaceAroundStep(startM, endM, startM + 1, endM - 1,\n                                      new Slice(Fragment.from(type.create(attrs, null, node.marks)), 0, 0), 1, true))\n      return false\n    }\n  })\n  return this\n}\n\nfunction canChangeType(doc, pos, type) {\n  let $pos = doc.resolve(pos), index = $pos.index()\n  return $pos.parent.canReplaceWith(index, index + 1, type)\n}\n\n// :: (number, ?NodeType, ?Object, ?[Mark]) → this\n// Change the type, attributes, and/or marks of the node at `pos`.\n// When `type` isn't given, the existing node type is preserved,\nTransform.prototype.setNodeMarkup = function(pos, type, attrs, marks) {\n  let node = this.doc.nodeAt(pos)\n  if (!node) throw new RangeError(\"No node at given position\")\n  if (!type) type = node.type\n  let newNode = type.create(attrs, null, marks || node.marks)\n  if (node.isLeaf)\n    return this.replaceWith(pos, pos + node.nodeSize, newNode)\n\n  if (!type.validContent(node.content))\n    throw new RangeError(\"Invalid content for node type \" + type.name)\n\n  return this.step(new ReplaceAroundStep(pos, pos + node.nodeSize, pos + 1, pos + node.nodeSize - 1,\n                                         new Slice(Fragment.from(newNode), 0, 0), 1, true))\n}\n\n// :: (Node, number, number, ?[?{type: NodeType, attrs: ?Object}]) → bool\n// Check whether splitting at the given position is allowed.\nexport function canSplit(doc, pos, depth = 1, typesAfter) {\n  let $pos = doc.resolve(pos), base = $pos.depth - depth\n  let innerType = (typesAfter && typesAfter[typesAfter.length - 1]) || $pos.parent\n  if (base < 0 || $pos.parent.type.spec.isolating ||\n      !$pos.parent.canReplace($pos.index(), $pos.parent.childCount) ||\n      !innerType.type.validContent($pos.parent.content.cutByIndex($pos.index(), $pos.parent.childCount)))\n    return false\n  for (let d = $pos.depth - 1, i = depth - 2; d > base; d--, i--) {\n    let node = $pos.node(d), index = $pos.index(d)\n    if (node.type.spec.isolating) return false\n    let rest = node.content.cutByIndex(index, node.childCount)\n    let after = (typesAfter && typesAfter[i]) || node\n    if (after != node) rest = rest.replaceChild(0, after.type.create(after.attrs))\n    if (!node.canReplace(index + 1, node.childCount) || !after.type.validContent(rest))\n      return false\n  }\n  let index = $pos.indexAfter(base)\n  let baseType = typesAfter && typesAfter[0]\n  return $pos.node(base).canReplaceWith(index, index, baseType ? baseType.type : $pos.node(base + 1).type)\n}\n\n// :: (number, ?number, ?[?{type: NodeType, attrs: ?Object}]) → this\n// Split the node at the given position, and optionally, if `depth` is\n// greater than one, any number of nodes above that. By default, the\n// parts split off will inherit the node type of the original node.\n// This can be changed by passing an array of types and attributes to\n// use after the split.\nTransform.prototype.split = function(pos, depth = 1, typesAfter) {\n  let $pos = this.doc.resolve(pos), before = Fragment.empty, after = Fragment.empty\n  for (let d = $pos.depth, e = $pos.depth - depth, i = depth - 1; d > e; d--, i--) {\n    before = Fragment.from($pos.node(d).copy(before))\n    let typeAfter = typesAfter && typesAfter[i]\n    after = Fragment.from(typeAfter ? typeAfter.type.create(typeAfter.attrs, after) : $pos.node(d).copy(after))\n  }\n  return this.step(new ReplaceStep(pos, pos, new Slice(before.append(after), depth, depth), true))\n}\n\n// :: (Node, number) → bool\n// Test whether the blocks before and after a given position can be\n// joined.\nexport function canJoin(doc, pos) {\n  let $pos = doc.resolve(pos), index = $pos.index()\n  return joinable($pos.nodeBefore, $pos.nodeAfter) &&\n    $pos.parent.canReplace(index, index + 1)\n}\n\nfunction joinable(a, b) {\n  return a && b && !a.isLeaf && a.canAppend(b)\n}\n\n// :: (Node, number, ?number) → ?number\n// Find an ancestor of the given position that can be joined to the\n// block before (or after if `dir` is positive). Returns the joinable\n// point, if any.\nexport function joinPoint(doc, pos, dir = -1) {\n  let $pos = doc.resolve(pos)\n  for (let d = $pos.depth;; d--) {\n    let before, after, index = $pos.index(d)\n    if (d == $pos.depth) {\n      before = $pos.nodeBefore\n      after = $pos.nodeAfter\n    } else if (dir > 0) {\n      before = $pos.node(d + 1)\n      index++\n      after = $pos.node(d).maybeChild(index)\n    } else {\n      before = $pos.node(d).maybeChild(index - 1)\n      after = $pos.node(d + 1)\n    }\n    if (before && !before.isTextblock && joinable(before, after) &&\n        $pos.node(d).canReplace(index, index + 1)) return pos\n    if (d == 0) break\n    pos = dir < 0 ? $pos.before(d) : $pos.after(d)\n  }\n}\n\n// :: (number, ?number) → this\n// Join the blocks around the given position. If depth is 2, their\n// last and first siblings are also joined, and so on.\nTransform.prototype.join = function(pos, depth = 1) {\n  let step = new ReplaceStep(pos - depth, pos + depth, Slice.empty, true)\n  return this.step(step)\n}\n\n// :: (Node, number, NodeType) → ?number\n// Try to find a point where a node of the given type can be inserted\n// near `pos`, by searching up the node hierarchy when `pos` itself\n// isn't a valid place but is at the start or end of a node. Return\n// null if no position was found.\nexport function insertPoint(doc, pos, nodeType) {\n  let $pos = doc.resolve(pos)\n  if ($pos.parent.canReplaceWith($pos.index(), $pos.index(), nodeType)) return pos\n\n  if ($pos.parentOffset == 0)\n    for (let d = $pos.depth - 1; d >= 0; d--) {\n      let index = $pos.index(d)\n      if ($pos.node(d).canReplaceWith(index, index, nodeType)) return $pos.before(d + 1)\n      if (index > 0) return null\n    }\n  if ($pos.parentOffset == $pos.parent.content.size)\n    for (let d = $pos.depth - 1; d >= 0; d--) {\n      let index = $pos.indexAfter(d)\n      if ($pos.node(d).canReplaceWith(index, index, nodeType)) return $pos.after(d + 1)\n      if (index < $pos.node(d).childCount) return null\n    }\n}\n\n// :: (Node, number, Slice) → ?number\n// Finds a position at or around the given position where the given\n// slice can be inserted. Will look at parent nodes' nearest boundary\n// and try there, even if the original position wasn't directly at the\n// start or end of that node. Returns null when no position was found.\nexport function dropPoint(doc, pos, slice) {\n  let $pos = doc.resolve(pos)\n  if (!slice.content.size) return pos\n  let content = slice.content\n  for (let i = 0; i < slice.openStart; i++) content = content.firstChild.content\n  for (let pass = 1; pass <= (slice.openStart == 0 && slice.size ? 2 : 1); pass++) {\n    for (let d = $pos.depth; d >= 0; d--) {\n      let bias = d == $pos.depth ? 0 : $pos.pos <= ($pos.start(d + 1) + $pos.end(d + 1)) / 2 ? -1 : 1\n      let insertPos = $pos.index(d) + (bias > 0 ? 1 : 0)\n      let parent = $pos.node(d), fits = false\n      if (pass == 1) {\n        fits = parent.canReplace(insertPos, insertPos, content)\n      } else {\n        let wrapping = parent.contentMatchAt(insertPos).findWrapping(content.firstChild.type)\n        fits = wrapping && parent.canReplaceWith(insertPos, insertPos, wrapping[0].type)\n      }\n      if (fits)\n        return bias == 0 ? $pos.pos : bias < 0 ? $pos.before(d + 1) : $pos.after(d + 1)\n    }\n  }\n  return null\n}\n","import {Fragment, Slice} from \"prosemirror-model\"\nimport {Step, StepResult} from \"./step\"\n\nfunction mapFragment(fragment, f, parent) {\n  let mapped = []\n  for (let i = 0; i < fragment.childCount; i++) {\n    let child = fragment.child(i)\n    if (child.content.size) child = child.copy(mapFragment(child.content, f, child))\n    if (child.isInline) child = f(child, parent, i)\n    mapped.push(child)\n  }\n  return Fragment.fromArray(mapped)\n}\n\n// ::- Add a mark to all inline content between two positions.\nexport class AddMarkStep extends Step {\n  // :: (number, number, Mark)\n  constructor(from, to, mark) {\n    super()\n    // :: number\n    // The start of the marked range.\n    this.from = from\n    // :: number\n    // The end of the marked range.\n    this.to = to\n    // :: Mark\n    // The mark to add.\n    this.mark = mark\n  }\n\n  apply(doc) {\n    let oldSlice = doc.slice(this.from, this.to), $from = doc.resolve(this.from)\n    let parent = $from.node($from.sharedDepth(this.to))\n    let slice = new Slice(mapFragment(oldSlice.content, (node, parent) => {\n      if (!node.isAtom || !parent.type.allowsMarkType(this.mark.type)) return node\n      return node.mark(this.mark.addToSet(node.marks))\n    }, parent), oldSlice.openStart, oldSlice.openEnd)\n    return StepResult.fromReplace(doc, this.from, this.to, slice)\n  }\n\n  invert() {\n    return new RemoveMarkStep(this.from, this.to, this.mark)\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    if (from.deleted && to.deleted || from.pos >= to.pos) return null\n    return new AddMarkStep(from.pos, to.pos, this.mark)\n  }\n\n  merge(other) {\n    if (other instanceof AddMarkStep &&\n        other.mark.eq(this.mark) &&\n        this.from <= other.to && this.to >= other.from)\n      return new AddMarkStep(Math.min(this.from, other.from),\n                             Math.max(this.to, other.to), this.mark)\n  }\n\n  toJSON() {\n    return {stepType: \"addMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to}\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      throw new RangeError(\"Invalid input for AddMarkStep.fromJSON\")\n    return new AddMarkStep(json.from, json.to, schema.markFromJSON(json.mark))\n  }\n}\n\nStep.jsonID(\"addMark\", AddMarkStep)\n\n// ::- Remove a mark from all inline content between two positions.\nexport class RemoveMarkStep extends Step {\n  // :: (number, number, Mark)\n  constructor(from, to, mark) {\n    super()\n    // :: number\n    // The start of the unmarked range.\n    this.from = from\n    // :: number\n    // The end of the unmarked range.\n    this.to = to\n    // :: Mark\n    // The mark to remove.\n    this.mark = mark\n  }\n\n  apply(doc) {\n    let oldSlice = doc.slice(this.from, this.to)\n    let slice = new Slice(mapFragment(oldSlice.content, node => {\n      return node.mark(this.mark.removeFromSet(node.marks))\n    }), oldSlice.openStart, oldSlice.openEnd)\n    return StepResult.fromReplace(doc, this.from, this.to, slice)\n  }\n\n  invert() {\n    return new AddMarkStep(this.from, this.to, this.mark)\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    if (from.deleted && to.deleted || from.pos >= to.pos) return null\n    return new RemoveMarkStep(from.pos, to.pos, this.mark)\n  }\n\n  merge(other) {\n    if (other instanceof RemoveMarkStep &&\n        other.mark.eq(this.mark) &&\n        this.from <= other.to && this.to >= other.from)\n      return new RemoveMarkStep(Math.min(this.from, other.from),\n                                Math.max(this.to, other.to), this.mark)\n  }\n\n  toJSON() {\n    return {stepType: \"removeMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to}\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      throw new RangeError(\"Invalid input for RemoveMarkStep.fromJSON\")\n    return new RemoveMarkStep(json.from, json.to, schema.markFromJSON(json.mark))\n  }\n}\n\nStep.jsonID(\"removeMark\", RemoveMarkStep)\n","import {MarkType, Slice, Fragment} from \"prosemirror-model\"\n\nimport {Transform} from \"./transform\"\nimport {AddMarkStep, RemoveMarkStep} from \"./mark_step\"\nimport {ReplaceStep} from \"./replace_step\"\n\n// :: (number, number, Mark) → this\n// Add the given mark to the inline content between `from` and `to`.\nTransform.prototype.addMark = function(from, to, mark) {\n  let removed = [], added = [], removing = null, adding = null\n  this.doc.nodesBetween(from, to, (node, pos, parent) => {\n    if (!node.isInline) return\n    let marks = node.marks\n    if (!mark.isInSet(marks) && parent.type.allowsMarkType(mark.type)) {\n      let start = Math.max(pos, from), end = Math.min(pos + node.nodeSize, to)\n      let newSet = mark.addToSet(marks)\n\n      for (let i = 0; i < marks.length; i++) {\n        if (!marks[i].isInSet(newSet)) {\n          if (removing && removing.to == start && removing.mark.eq(marks[i]))\n            removing.to = end\n          else\n            removed.push(removing = new RemoveMarkStep(start, end, marks[i]))\n        }\n      }\n\n      if (adding && adding.to == start)\n        adding.to = end\n      else\n        added.push(adding = new AddMarkStep(start, end, mark))\n    }\n  })\n\n  removed.forEach(s => this.step(s))\n  added.forEach(s => this.step(s))\n  return this\n}\n\n// :: (number, number, ?union<Mark, MarkType>) → this\n// Remove marks from inline nodes between `from` and `to`. When `mark`\n// is a single mark, remove precisely that mark. When it is a mark type,\n// remove all marks of that type. When it is null, remove all marks of\n// any type.\nTransform.prototype.removeMark = function(from, to, mark = null) {\n  let matched = [], step = 0\n  this.doc.nodesBetween(from, to, (node, pos) => {\n    if (!node.isInline) return\n    step++\n    let toRemove = null\n    if (mark instanceof MarkType) {\n      let set = node.marks, found\n      while (found = mark.isInSet(set)) {\n        ;(toRemove || (toRemove = [])).push(found)\n        set = found.removeFromSet(set)\n      }\n    } else if (mark) {\n      if (mark.isInSet(node.marks)) toRemove = [mark]\n    } else {\n      toRemove = node.marks\n    }\n    if (toRemove && toRemove.length) {\n      let end = Math.min(pos + node.nodeSize, to)\n      for (let i = 0; i < toRemove.length; i++) {\n        let style = toRemove[i], found\n        for (let j = 0; j < matched.length; j++) {\n          let m = matched[j]\n          if (m.step == step - 1 && style.eq(matched[j].style)) found = m\n        }\n        if (found) {\n          found.to = end\n          found.step = step\n        } else {\n          matched.push({style, from: Math.max(pos, from), to: end, step})\n        }\n      }\n    }\n  })\n  matched.forEach(m => this.step(new RemoveMarkStep(m.from, m.to, m.style)))\n  return this\n}\n\n// :: (number, NodeType, ?ContentMatch) → this\n// Removes all marks and nodes from the content of the node at `pos`\n// that don't match the given new parent node type. Accepts an\n// optional starting [content match](#model.ContentMatch) as third\n// argument.\nTransform.prototype.clearIncompatible = function(pos, parentType, match = parentType.contentMatch) {\n  let node = this.doc.nodeAt(pos)\n  let delSteps = [], cur = pos + 1\n  for (let i = 0; i < node.childCount; i++) {\n    let child = node.child(i), end = cur + child.nodeSize\n    let allowed = match.matchType(child.type, child.attrs)\n    if (!allowed) {\n      delSteps.push(new ReplaceStep(cur, end, Slice.empty))\n    } else {\n      match = allowed\n      for (let j = 0; j < child.marks.length; j++) if (!parentType.allowsMarkType(child.marks[j].type))\n        this.step(new RemoveMarkStep(cur, end, child.marks[j]))\n    }\n    cur = end\n  }\n  if (!match.validEnd) {\n    let fill = match.fillBefore(Fragment.empty, true)\n    this.replace(cur, cur, new Slice(fill, 0, 0))\n  }\n  for (let i = delSteps.length - 1; i >= 0; i--) this.step(delSteps[i])\n  return this\n}\n","import {Fragment, Slice} from \"prosemirror-model\"\n\nimport {ReplaceStep, ReplaceAroundStep} from \"./replace_step\"\nimport {Transform} from \"./transform\"\nimport {insertPoint} from \"./structure\"\n\n// :: (Node, number, ?number, ?Slice) → ?Step\n// ‘Fit’ a slice into a given position in the document, producing a\n// [step](#transform.Step) that inserts it. Will return null if\n// there's no meaningful way to insert the slice here, or inserting it\n// would be a no-op (an empty slice over an empty range).\nexport function replaceStep(doc, from, to = from, slice = Slice.empty) {\n  if (from == to && !slice.size) return null\n\n  let $from = doc.resolve(from), $to = doc.resolve(to)\n  // Optimization -- avoid work if it's obvious that it's not needed.\n  if (fitsTrivially($from, $to, slice)) return new ReplaceStep(from, to, slice)\n  return new Fitter($from, $to, slice).fit()\n}\n\n// :: (number, ?number, ?Slice) → this\n// Replace the part of the document between `from` and `to` with the\n// given `slice`.\nTransform.prototype.replace = function(from, to = from, slice = Slice.empty) {\n  let step = replaceStep(this.doc, from, to, slice)\n  if (step) this.step(step)\n  return this\n}\n\n// :: (number, number, union<Fragment, Node, [Node]>) → this\n// Replace the given range with the given content, which may be a\n// fragment, node, or array of nodes.\nTransform.prototype.replaceWith = function(from, to, content) {\n  return this.replace(from, to, new Slice(Fragment.from(content), 0, 0))\n}\n\n// :: (number, number) → this\n// Delete the content between the given positions.\nTransform.prototype.delete = function(from, to) {\n  return this.replace(from, to, Slice.empty)\n}\n\n// :: (number, union<Fragment, Node, [Node]>) → this\n// Insert the given content at the given position.\nTransform.prototype.insert = function(pos, content) {\n  return this.replaceWith(pos, pos, content)\n}\n\nfunction fitsTrivially($from, $to, slice) {\n  return !slice.openStart && !slice.openEnd && $from.start() == $to.start() &&\n    $from.parent.canReplace($from.index(), $to.index(), slice.content)\n}\n\n// Algorithm for 'placing' the elements of a slice into a gap:\n//\n// We consider the content of each node that is open to the left to be\n// independently placeable. I.e. in <p(\"foo\"), p(\"bar\")>, when the\n// paragraph on the left is open, \"foo\" can be placed (somewhere on\n// the left side of the replacement gap) independently from p(\"bar\").\n//\n// This class tracks the state of the placement progress in the\n// following properties:\n//\n//  - `frontier` holds a stack of `{type, match}` objects that\n//    represent the open side of the replacement. It starts at\n//    `$from`, then moves forward as content is placed, and is finally\n//    reconciled with `$to`.\n//\n//  - `unplaced` is a slice that represents the content that hasn't\n//    been placed yet.\n//\n//  - `placed` is a fragment of placed content. Its open-start value\n//    is implicit in `$from`, and its open-end value in `frontier`.\nclass Fitter {\n  constructor($from, $to, slice) {\n    this.$to = $to\n    this.$from = $from\n    this.unplaced = slice\n\n    this.frontier = []\n    for (let i = 0; i <= $from.depth; i++) {\n      let node = $from.node(i)\n      this.frontier.push({\n        type: node.type,\n        match: node.contentMatchAt($from.indexAfter(i))\n      })\n    }\n\n    this.placed = Fragment.empty\n    for (let i = $from.depth; i > 0; i--)\n      this.placed = Fragment.from($from.node(i).copy(this.placed))\n  }\n\n  get depth() { return this.frontier.length - 1 }\n\n  fit() {\n    // As long as there's unplaced content, try to place some of it.\n    // If that fails, either increase the open score of the unplaced\n    // slice, or drop nodes from it, and then try again.\n    while (this.unplaced.size) {\n      let fit = this.findFittable()\n      if (fit) this.placeNodes(fit)\n      else this.openMore() || this.dropNode()\n    }\n    // When there's inline content directly after the frontier _and_\n    // directly after `this.$to`, we must generate a `ReplaceAround`\n    // step that pulls that content into the node after the frontier.\n    // That means the fitting must be done to the end of the textblock\n    // node after `this.$to`, not `this.$to` itself.\n    let moveInline = this.mustMoveInline(), placedSize = this.placed.size - this.depth - this.$from.depth\n    let $from = this.$from, $to = this.close(moveInline < 0 ? this.$to : $from.doc.resolve(moveInline))\n    if (!$to) return null\n\n    // If closing to `$to` succeeded, create a step\n    let content = this.placed, openStart = $from.depth, openEnd = $to.depth\n    while (openStart && openEnd && content.childCount == 1) { // Normalize by dropping open parent nodes\n      content = content.firstChild.content\n      openStart--; openEnd--\n    }\n    let slice = new Slice(content, openStart, openEnd)\n    if (moveInline > -1)\n      return new ReplaceAroundStep($from.pos, moveInline, this.$to.pos, this.$to.end(), slice, placedSize)\n    if (slice.size || $from.pos != this.$to.pos) // Don't generate no-op steps\n      return new ReplaceStep($from.pos, $to.pos, slice)\n  }\n\n  // Find a position on the start spine of `this.unplaced` that has\n  // content that can be moved somewhere on the frontier. Returns two\n  // depths, one for the slice and one for the frontier.\n  findFittable() {\n    // Only try wrapping nodes (pass 2) after finding a place without\n    // wrapping failed.\n    for (let pass = 1; pass <= 2; pass++) {\n      for (let sliceDepth = this.unplaced.openStart; sliceDepth >= 0; sliceDepth--) {\n        let fragment, parent\n        if (sliceDepth) {\n          parent = contentAt(this.unplaced.content, sliceDepth - 1).firstChild\n          fragment = parent.content\n        } else {\n          fragment = this.unplaced.content\n        }\n        let first = fragment.firstChild\n        for (let frontierDepth = this.depth; frontierDepth >= 0; frontierDepth--) {\n          let {type, match} = this.frontier[frontierDepth], wrap, inject\n          // In pass 1, if the next node matches, or there is no next\n          // node but the parents look compatible, we've found a\n          // place.\n          if (pass == 1 && (first ? match.matchType(first.type) || (inject = match.fillBefore(Fragment.from(first), false))\n                            : type.compatibleContent(parent.type)))\n            return {sliceDepth, frontierDepth, parent, inject}\n          // In pass 2, look for a set of wrapping nodes that make\n          // `first` fit here.\n          else if (pass == 2 && first && (wrap = match.findWrapping(first.type)))\n            return {sliceDepth, frontierDepth, parent, wrap}\n          // Don't continue looking further up if the parent node\n          // would fit here.\n          if (parent && match.matchType(parent.type)) break\n        }\n      }\n    }\n  }\n\n  openMore() {\n    let {content, openStart, openEnd} = this.unplaced\n    let inner = contentAt(content, openStart)\n    if (!inner.childCount || inner.firstChild.isLeaf) return false\n    this.unplaced = new Slice(content, openStart + 1,\n                              Math.max(openEnd, inner.size + openStart >= content.size - openEnd ? openStart + 1 : 0))\n    return true\n  }\n\n  dropNode() {\n    let {content, openStart, openEnd} = this.unplaced\n    let inner = contentAt(content, openStart)\n    if (inner.childCount <= 1 && openStart > 0) {\n      let openAtEnd = content.size - openStart <= openStart + inner.size\n      this.unplaced = new Slice(dropFromFragment(content, openStart - 1, 1), openStart - 1,\n                                openAtEnd ? openStart - 1 : openEnd)\n    } else {\n      this.unplaced = new Slice(dropFromFragment(content, openStart, 1), openStart, openEnd)\n    }\n  }\n\n  // : ({sliceDepth: number, frontierDepth: number, parent: ?Node, wrap: ?[NodeType], inject: ?Fragment})\n  // Move content from the unplaced slice at `sliceDepth` to the\n  // frontier node at `frontierDepth`. Close that frontier node when\n  // applicable.\n  placeNodes({sliceDepth, frontierDepth, parent, inject, wrap}) {\n    while (this.depth > frontierDepth) this.closeFrontierNode()\n    if (wrap) for (let i = 0; i < wrap.length; i++) this.openFrontierNode(wrap[i])\n\n    let slice = this.unplaced, fragment = parent ? parent.content : slice.content\n    let openStart = slice.openStart - sliceDepth\n    let taken = 0, add = []\n    let {match, type} = this.frontier[frontierDepth]\n    if (inject) {\n      for (let i = 0; i < inject.childCount; i++) add.push(inject.child(i))\n      match = match.matchFragment(inject)\n    }\n    // Computes the amount of (end) open nodes at the end of the\n    // fragment. When 0, the parent is open, but no more. When\n    // negative, nothing is open.\n    let openEndCount = (fragment.size + sliceDepth) - (slice.content.size - slice.openEnd)\n    // Scan over the fragment, fitting as many child nodes as\n    // possible.\n    while (taken < fragment.childCount) {\n      let next = fragment.child(taken), matches = match.matchType(next.type)\n      if (!matches) break\n      taken++\n      if (taken > 1 || openStart == 0 || next.content.size) { // Drop empty open nodes\n        match = matches\n        add.push(closeNodeStart(next.mark(type.allowedMarks(next.marks)), taken == 1 ? openStart : 0,\n                                taken == fragment.childCount ? openEndCount : -1))\n      }\n    }\n    let toEnd = taken == fragment.childCount\n    if (!toEnd) openEndCount = -1\n\n    this.placed = addToFragment(this.placed, frontierDepth, Fragment.from(add))\n    this.frontier[frontierDepth].match = match\n\n    // If the parent types match, and the entire node was moved, and\n    // it's not open, close this frontier node right away.\n    if (toEnd && openEndCount < 0 && parent && parent.type == this.frontier[this.depth].type && this.frontier.length > 1)\n      this.closeFrontierNode()\n\n    // Add new frontier nodes for any open nodes at the end.\n    for (let i = 0, cur = fragment; i < openEndCount; i++) {\n      let node = cur.lastChild\n      this.frontier.push({type: node.type, match: node.contentMatchAt(node.childCount)})\n      cur = node.content\n    }\n\n    // Update `this.unplaced`. Drop the entire node from which we\n    // placed it we got to its end, otherwise just drop the placed\n    // nodes.\n    this.unplaced = !toEnd ? new Slice(dropFromFragment(slice.content, sliceDepth, taken), slice.openStart, slice.openEnd)\n      : sliceDepth == 0 ? Slice.empty\n      : new Slice(dropFromFragment(slice.content, sliceDepth - 1, 1),\n                  sliceDepth - 1, openEndCount < 0 ? slice.openEnd : sliceDepth - 1)\n  }\n\n  mustMoveInline() {\n    if (!this.$to.parent.isTextblock || this.$to.end() == this.$to.pos) return -1\n    let top = this.frontier[this.depth], level\n    if (!top.type.isTextblock || !contentAfterFits(this.$to, this.$to.depth, top.type, top.match, false) ||\n        (this.$to.depth == this.depth && (level = this.findCloseLevel(this.$to)) && level.depth == this.depth)) return -1\n\n    let {depth} = this.$to, after = this.$to.after(depth)\n    while (depth > 1 && after == this.$to.end(--depth)) ++after\n    return after\n  }\n\n  findCloseLevel($to) {\n    scan: for (let i = Math.min(this.depth, $to.depth); i >= 0; i--) {\n      let {match, type} = this.frontier[i]\n      let dropInner = i < $to.depth && $to.end(i + 1) == $to.pos + ($to.depth - (i + 1))\n      let fit = contentAfterFits($to, i, type, match, dropInner)\n      if (!fit) continue\n      for (let d = i - 1; d >= 0; d--) {\n        let {match, type} = this.frontier[d]\n        let matches = contentAfterFits($to, d, type, match, true)\n        if (!matches || matches.childCount) continue scan\n      }\n      return {depth: i, fit, move: dropInner ? $to.doc.resolve($to.after(i + 1)) : $to}\n    }\n  }\n\n  close($to) {\n    let close = this.findCloseLevel($to)\n    if (!close) return null\n\n    while (this.depth > close.depth) this.closeFrontierNode()\n    if (close.fit.childCount) this.placed = addToFragment(this.placed, close.depth, close.fit)\n    $to = close.move\n    for (let d = close.depth + 1; d <= $to.depth; d++) {\n      let node = $to.node(d), add = node.type.contentMatch.fillBefore(node.content, true, $to.index(d))\n      this.openFrontierNode(node.type, node.attrs, add)\n    }\n    return $to\n  }\n\n  openFrontierNode(type, attrs, content) {\n    let top = this.frontier[this.depth]\n    top.match = top.match.matchType(type)\n    this.placed = addToFragment(this.placed, this.depth, Fragment.from(type.create(attrs, content)))\n    this.frontier.push({type, match: type.contentMatch})\n  }\n\n  closeFrontierNode() {\n    let open = this.frontier.pop()\n    let add = open.match.fillBefore(Fragment.empty, true)\n    if (add.childCount) this.placed = addToFragment(this.placed, this.frontier.length, add)\n  }\n}\n\nfunction dropFromFragment(fragment, depth, count) {\n  if (depth == 0) return fragment.cutByIndex(count)\n  return fragment.replaceChild(0, fragment.firstChild.copy(dropFromFragment(fragment.firstChild.content, depth - 1, count)))\n}\n\nfunction addToFragment(fragment, depth, content) {\n  if (depth == 0) return fragment.append(content)\n  return fragment.replaceChild(fragment.childCount - 1,\n                               fragment.lastChild.copy(addToFragment(fragment.lastChild.content, depth - 1, content)))\n}\n\nfunction contentAt(fragment, depth) {\n  for (let i = 0; i < depth; i++) fragment = fragment.firstChild.content\n  return fragment\n}\n\nfunction closeNodeStart(node, openStart, openEnd) {\n  if (openStart <= 0) return node\n  let frag = node.content\n  if (openStart > 1)\n    frag = frag.replaceChild(0, closeNodeStart(frag.firstChild, openStart - 1, frag.childCount == 1 ? openEnd - 1 : 0))\n  if (openStart > 0) {\n    frag = node.type.contentMatch.fillBefore(frag).append(frag)\n    if (openEnd <= 0) frag = frag.append(node.type.contentMatch.matchFragment(frag).fillBefore(Fragment.empty, true))\n  }\n  return node.copy(frag)\n}\n\nfunction contentAfterFits($to, depth, type, match, open) {\n  let node = $to.node(depth), index = open ? $to.indexAfter(depth) : $to.index(depth)\n  if (index == node.childCount && !type.compatibleContent(node.type)) return null\n  let fit = match.fillBefore(node.content, true, index)\n  return fit && !invalidMarks(type, node.content, index) ? fit : null\n}\n\nfunction invalidMarks(type, fragment, start) {\n  for (let i = start; i < fragment.childCount; i++)\n    if (!type.allowsMarks(fragment.child(i).marks)) return true\n  return false\n}\n\n// :: (number, number, Slice) → this\n// Replace a range of the document with a given slice, using `from`,\n// `to`, and the slice's [`openStart`](#model.Slice.openStart) property\n// as hints, rather than fixed start and end points. This method may\n// grow the replaced area or close open nodes in the slice in order to\n// get a fit that is more in line with WYSIWYG expectations, by\n// dropping fully covered parent nodes of the replaced region when\n// they are marked [non-defining](#model.NodeSpec.defining), or\n// including an open parent node from the slice that _is_ marked as\n// [defining](#model.NodeSpec.defining).\n//\n// This is the method, for example, to handle paste. The similar\n// [`replace`](#transform.Transform.replace) method is a more\n// primitive tool which will _not_ move the start and end of its given\n// range, and is useful in situations where you need more precise\n// control over what happens.\nTransform.prototype.replaceRange = function(from, to, slice) {\n  if (!slice.size) return this.deleteRange(from, to)\n\n  let $from = this.doc.resolve(from), $to = this.doc.resolve(to)\n  if (fitsTrivially($from, $to, slice))\n    return this.step(new ReplaceStep(from, to, slice))\n\n  let targetDepths = coveredDepths($from, this.doc.resolve(to))\n  // Can't replace the whole document, so remove 0 if it's present\n  if (targetDepths[targetDepths.length - 1] == 0) targetDepths.pop()\n  // Negative numbers represent not expansion over the whole node at\n  // that depth, but replacing from $from.before(-D) to $to.pos.\n  let preferredTarget = -($from.depth + 1)\n  targetDepths.unshift(preferredTarget)\n  // This loop picks a preferred target depth, if one of the covering\n  // depths is not outside of a defining node, and adds negative\n  // depths for any depth that has $from at its start and does not\n  // cross a defining node.\n  for (let d = $from.depth, pos = $from.pos - 1; d > 0; d--, pos--) {\n    let spec = $from.node(d).type.spec\n    if (spec.defining || spec.isolating) break\n    if (targetDepths.indexOf(d) > -1) preferredTarget = d\n    else if ($from.before(d) == pos) targetDepths.splice(1, 0, -d)\n  }\n  // Try to fit each possible depth of the slice into each possible\n  // target depth, starting with the preferred depths.\n  let preferredTargetIndex = targetDepths.indexOf(preferredTarget)\n\n  let leftNodes = [], preferredDepth = slice.openStart\n  for (let content = slice.content, i = 0;; i++) {\n    let node = content.firstChild\n    leftNodes.push(node)\n    if (i == slice.openStart) break\n    content = node.content\n  }\n  // Back up if the node directly above openStart, or the node above\n  // that separated only by a non-defining textblock node, is defining.\n  if (preferredDepth > 0 && leftNodes[preferredDepth - 1].type.spec.defining &&\n      $from.node(preferredTargetIndex).type != leftNodes[preferredDepth - 1].type)\n    preferredDepth -= 1\n  else if (preferredDepth >= 2 && leftNodes[preferredDepth - 1].isTextblock && leftNodes[preferredDepth - 2].type.spec.defining &&\n           $from.node(preferredTargetIndex).type != leftNodes[preferredDepth - 2].type)\n    preferredDepth -= 2\n\n  for (let j = slice.openStart; j >= 0; j--) {\n    let openDepth = (j + preferredDepth + 1) % (slice.openStart + 1)\n    let insert = leftNodes[openDepth]\n    if (!insert) continue\n    for (let i = 0; i < targetDepths.length; i++) {\n      // Loop over possible expansion levels, starting with the\n      // preferred one\n      let targetDepth = targetDepths[(i + preferredTargetIndex) % targetDepths.length], expand = true\n      if (targetDepth < 0) { expand = false; targetDepth = -targetDepth }\n      let parent = $from.node(targetDepth - 1), index = $from.index(targetDepth - 1)\n      if (parent.canReplaceWith(index, index, insert.type, insert.marks))\n        return this.replace($from.before(targetDepth), expand ? $to.after(targetDepth) : to,\n                            new Slice(closeFragment(slice.content, 0, slice.openStart, openDepth),\n                                      openDepth, slice.openEnd))\n    }\n  }\n\n  let startSteps = this.steps.length\n  for (let i = targetDepths.length - 1; i >= 0; i--) {\n    this.replace(from, to, slice)\n    if (this.steps.length > startSteps) break\n    let depth = targetDepths[i]\n    if (depth < 0) continue\n    from = $from.before(depth); to = $to.after(depth)\n  }\n  return this\n}\n\nfunction closeFragment(fragment, depth, oldOpen, newOpen, parent) {\n  if (depth < oldOpen) {\n    let first = fragment.firstChild\n    fragment = fragment.replaceChild(0, first.copy(closeFragment(first.content, depth + 1, oldOpen, newOpen, first)))\n  }\n  if (depth > newOpen) {\n    let match = parent.contentMatchAt(0)\n    let start = match.fillBefore(fragment).append(fragment)\n    fragment = start.append(match.matchFragment(start).fillBefore(Fragment.empty, true))\n  }\n  return fragment\n}\n\n// :: (number, number, Node) → this\n// Replace the given range with a node, but use `from` and `to` as\n// hints, rather than precise positions. When from and to are the same\n// and are at the start or end of a parent node in which the given\n// node doesn't fit, this method may _move_ them out towards a parent\n// that does allow the given node to be placed. When the given range\n// completely covers a parent node, this method may completely replace\n// that parent node.\nTransform.prototype.replaceRangeWith = function(from, to, node) {\n  if (!node.isInline && from == to && this.doc.resolve(from).parent.content.size) {\n    let point = insertPoint(this.doc, from, node.type)\n    if (point != null) from = to = point\n  }\n  return this.replaceRange(from, to, new Slice(Fragment.from(node), 0, 0))\n}\n\n// :: (number, number) → this\n// Delete the given range, expanding it to cover fully covered\n// parent nodes until a valid replace is found.\nTransform.prototype.deleteRange = function(from, to) {\n  let $from = this.doc.resolve(from), $to = this.doc.resolve(to)\n  let covered = coveredDepths($from, $to)\n  for (let i = 0; i < covered.length; i++) {\n    let depth = covered[i], last = i == covered.length - 1\n    if ((last && depth == 0) || $from.node(depth).type.contentMatch.validEnd)\n      return this.delete($from.start(depth), $to.end(depth))\n    if (depth > 0 && (last || $from.node(depth - 1).canReplace($from.index(depth - 1), $to.indexAfter(depth - 1))))\n      return this.delete($from.before(depth), $to.after(depth))\n  }\n  for (let d = 1; d <= $from.depth && d <= $to.depth; d++) {\n    if (from - $from.start(d) == $from.depth - d && to > $from.end(d) && $to.end(d) - to != $to.depth - d)\n      return this.delete($from.before(d), to)\n  }\n  return this.delete(from, to)\n}\n\n// : (ResolvedPos, ResolvedPos) → [number]\n// Returns an array of all depths for which $from - $to spans the\n// whole content of the nodes at that depth.\nfunction coveredDepths($from, $to) {\n  let result = [], minDepth = Math.min($from.depth, $to.depth)\n  for (let d = minDepth; d >= 0; d--) {\n    let start = $from.start(d)\n    if (start < $from.pos - ($from.depth - d) ||\n        $to.end(d) > $to.pos + ($to.depth - d) ||\n        $from.node(d).type.spec.isolating ||\n        $to.node(d).type.spec.isolating) break\n    if (start == $to.start(d)) result.push(d)\n  }\n  return result\n}\n","const result = {}\nexport default result\n\nif (typeof navigator != \"undefined\" && typeof document != \"undefined\") {\n  const ie_edge = /Edge\\/(\\d+)/.exec(navigator.userAgent)\n  const ie_upto10 = /MSIE \\d/.test(navigator.userAgent)\n  const ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\n\n  result.mac = /Mac/.test(navigator.platform)\n  let ie = result.ie = !!(ie_upto10 || ie_11up || ie_edge)\n  result.ie_version = ie_upto10 ? document.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : null\n  result.gecko = !ie && /gecko\\/(\\d+)/i.test(navigator.userAgent)\n  result.gecko_version = result.gecko && +(/Firefox\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1]\n  let chrome = !ie && /Chrome\\/(\\d+)/.exec(navigator.userAgent)\n  result.chrome = !!chrome\n  result.chrome_version = chrome && +chrome[1]\n  // Is true for both iOS and iPadOS for convenience\n  result.safari = !ie && /Apple Computer/.test(navigator.vendor)\n  result.ios = result.safari && (/Mobile\\/\\w+/.test(navigator.userAgent) || navigator.maxTouchPoints > 2)\n  result.android = /Android \\d/.test(navigator.userAgent)\n  result.webkit = \"webkitFontSmoothing\" in document.documentElement.style\n  result.webkit_version = result.webkit && +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1]\n}\n","import browser from \"./browser\"\n\nexport const domIndex = function(node) {\n  for (var index = 0;; index++) {\n    node = node.previousSibling\n    if (!node) return index\n  }\n}\n\nexport const parentNode = function(node) {\n  let parent = node.parentNode\n  return parent && parent.nodeType == 11 ? parent.host : parent\n}\n\nlet reusedRange = null\n\n// Note that this will always return the same range, because DOM range\n// objects are every expensive, and keep slowing down subsequent DOM\n// updates, for some reason.\nexport const textRange = function(node, from, to) {\n  let range = reusedRange || (reusedRange = document.createRange())\n  range.setEnd(node, to == null ? node.nodeValue.length : to)\n  range.setStart(node, from || 0)\n  return range\n}\n\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nexport const isEquivalentPosition = function(node, off, targetNode, targetOff) {\n  return targetNode && (scanFor(node, off, targetNode, targetOff, -1) ||\n                        scanFor(node, off, targetNode, targetOff, 1))\n}\n\nconst atomElements = /^(img|br|input|textarea|hr)$/i\n\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n  for (;;) {\n    if (node == targetNode && off == targetOff) return true\n    if (off == (dir < 0 ? 0 : nodeSize(node))) {\n      let parent = node.parentNode\n      if (parent.nodeType != 1 || hasBlockDesc(node) || atomElements.test(node.nodeName) || node.contentEditable == \"false\")\n        return false\n      off = domIndex(node) + (dir < 0 ? 0 : 1)\n      node = parent\n    } else if (node.nodeType == 1) {\n      node = node.childNodes[off + (dir < 0 ? -1 : 0)]\n      if (node.contentEditable == \"false\") return false\n      off = dir < 0 ? nodeSize(node) : 0\n    } else {\n      return false\n    }\n  }\n}\n\nexport function nodeSize(node) {\n  return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length\n}\n\nexport function isOnEdge(node, offset, parent) {\n  for (let atStart = offset == 0, atEnd = offset == nodeSize(node); atStart || atEnd;) {\n    if (node == parent) return true\n    let index = domIndex(node)\n    node = node.parentNode\n    if (!node) return false\n    atStart = atStart && index == 0\n    atEnd = atEnd && index == nodeSize(node)\n  }\n}\n\nfunction hasBlockDesc(dom) {\n  let desc\n  for (let cur = dom; cur; cur = cur.parentNode) if (desc = cur.pmViewDesc) break\n  return desc && desc.node && desc.node.isBlock && (desc.dom == dom || desc.contentDOM == dom)\n}\n\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nexport const selectionCollapsed = function(domSel) {\n  let collapsed = domSel.isCollapsed\n  if (collapsed && browser.chrome && domSel.rangeCount && !domSel.getRangeAt(0).collapsed)\n    collapsed = false\n  return collapsed\n}\n\nexport function keyEvent(keyCode, key) {\n  let event = document.createEvent(\"Event\")\n  event.initEvent(\"keydown\", true, true)\n  event.keyCode = keyCode\n  event.key = event.code = key\n  return event\n}\n","import {nodeSize, textRange, parentNode} from \"./dom\"\nimport browser from \"./browser\"\n\nfunction windowRect(doc) {\n  return {left: 0, right: doc.documentElement.clientWidth,\n          top: 0, bottom: doc.documentElement.clientHeight}\n}\n\nfunction getSide(value, side) {\n  return typeof value == \"number\" ? value : value[side]\n}\n\nfunction clientRect(node) {\n  let rect = node.getBoundingClientRect()\n  // Adjust for elements with style \"transform: scale()\"\n  let scaleX = (rect.width / node.offsetWidth) || 1\n  let scaleY = (rect.height / node.offsetHeight) || 1\n  // Make sure scrollbar width isn't included in the rectangle\n  return {left: rect.left, right: rect.left + node.clientWidth * scaleX,\n          top: rect.top, bottom: rect.top + node.clientHeight * scaleY}\n}\n\nexport function scrollRectIntoView(view, rect, startDOM) {\n  let scrollThreshold = view.someProp(\"scrollThreshold\") || 0, scrollMargin = view.someProp(\"scrollMargin\") || 5\n  let doc = view.dom.ownerDocument\n  for (let parent = startDOM || view.dom;; parent = parentNode(parent)) {\n    if (!parent) break\n    if (parent.nodeType != 1) continue\n    let atTop = parent == doc.body || parent.nodeType != 1\n    let bounding = atTop ? windowRect(doc) : clientRect(parent)\n    let moveX = 0, moveY = 0\n    if (rect.top < bounding.top + getSide(scrollThreshold, \"top\"))\n      moveY = -(bounding.top - rect.top + getSide(scrollMargin, \"top\"))\n    else if (rect.bottom > bounding.bottom - getSide(scrollThreshold, \"bottom\"))\n      moveY = rect.bottom - bounding.bottom + getSide(scrollMargin, \"bottom\")\n    if (rect.left < bounding.left + getSide(scrollThreshold, \"left\"))\n      moveX = -(bounding.left - rect.left + getSide(scrollMargin, \"left\"))\n    else if (rect.right > bounding.right - getSide(scrollThreshold, \"right\"))\n      moveX = rect.right - bounding.right + getSide(scrollMargin, \"right\")\n    if (moveX || moveY) {\n      if (atTop) {\n        doc.defaultView.scrollBy(moveX, moveY)\n      } else {\n        let startX = parent.scrollLeft, startY = parent.scrollTop\n        if (moveY) parent.scrollTop += moveY\n        if (moveX) parent.scrollLeft += moveX\n        let dX = parent.scrollLeft - startX, dY = parent.scrollTop - startY\n        rect = {left: rect.left - dX, top: rect.top - dY, right: rect.right - dX, bottom: rect.bottom - dY}\n      }\n    }\n    if (atTop) break\n  }\n}\n\n// Store the scroll position of the editor's parent nodes, along with\n// the top position of an element near the top of the editor, which\n// will be used to make sure the visible viewport remains stable even\n// when the size of the content above changes.\nexport function storeScrollPos(view) {\n  let rect = view.dom.getBoundingClientRect(), startY = Math.max(0, rect.top)\n  let refDOM, refTop\n  for (let x = (rect.left + rect.right) / 2, y = startY + 1;\n       y < Math.min(innerHeight, rect.bottom); y += 5) {\n    let dom = view.root.elementFromPoint(x, y)\n    if (dom == view.dom || !view.dom.contains(dom)) continue\n    let localRect = dom.getBoundingClientRect()\n    if (localRect.top >= startY - 20) {\n      refDOM = dom\n      refTop = localRect.top\n      break\n    }\n  }\n  return {refDOM, refTop, stack: scrollStack(view.dom)}\n}\n\nfunction scrollStack(dom) {\n  let stack = [], doc = dom.ownerDocument\n  for (; dom; dom = parentNode(dom)) {\n    stack.push({dom, top: dom.scrollTop, left: dom.scrollLeft})\n    if (dom == doc) break\n  }\n  return stack\n}\n\n// Reset the scroll position of the editor's parent nodes to that what\n// it was before, when storeScrollPos was called.\nexport function resetScrollPos({refDOM, refTop, stack}) {\n  let newRefTop = refDOM ? refDOM.getBoundingClientRect().top : 0\n  restoreScrollStack(stack, newRefTop == 0 ? 0 : newRefTop - refTop)\n}\n\nfunction restoreScrollStack(stack, dTop) {\n  for (let i = 0; i < stack.length; i++) {\n    let {dom, top, left} = stack[i]\n    if (dom.scrollTop != top + dTop) dom.scrollTop = top + dTop\n    if (dom.scrollLeft != left) dom.scrollLeft = left\n  }\n}\n\nlet preventScrollSupported = null\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nexport function focusPreventScroll(dom) {\n  if (dom.setActive) return dom.setActive() // in IE\n  if (preventScrollSupported) return dom.focus(preventScrollSupported)\n\n  let stored = scrollStack(dom)\n  dom.focus(preventScrollSupported == null ? {\n    get preventScroll() {\n      preventScrollSupported = {preventScroll: true}\n      return true\n    }\n  } : undefined)\n  if (!preventScrollSupported) {\n    preventScrollSupported = false\n    restoreScrollStack(stored, 0)\n  }\n}\n\nfunction findOffsetInNode(node, coords) {\n  let closest, dxClosest = 2e8, coordsClosest, offset = 0\n  let rowBot = coords.top, rowTop = coords.top\n  for (let child = node.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n    let rects\n    if (child.nodeType == 1) rects = child.getClientRects()\n    else if (child.nodeType == 3) rects = textRange(child).getClientRects()\n    else continue\n\n    for (let i = 0; i < rects.length; i++) {\n      let rect = rects[i]\n      if (rect.top <= rowBot && rect.bottom >= rowTop) {\n        rowBot = Math.max(rect.bottom, rowBot)\n        rowTop = Math.min(rect.top, rowTop)\n        let dx = rect.left > coords.left ? rect.left - coords.left\n            : rect.right < coords.left ? coords.left - rect.right : 0\n        if (dx < dxClosest) {\n          closest = child\n          dxClosest = dx\n          coordsClosest = dx && closest.nodeType == 3 ? {left: rect.right < coords.left ? rect.right : rect.left, top: coords.top} : coords\n          if (child.nodeType == 1 && dx)\n            offset = childIndex + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0)\n          continue\n        }\n      }\n      if (!closest && (coords.left >= rect.right && coords.top >= rect.top ||\n                       coords.left >= rect.left && coords.top >= rect.bottom))\n        offset = childIndex + 1\n    }\n  }\n  if (closest && closest.nodeType == 3) return findOffsetInText(closest, coordsClosest)\n  if (!closest || (dxClosest && closest.nodeType == 1)) return {node, offset}\n  return findOffsetInNode(closest, coordsClosest)\n}\n\nfunction findOffsetInText(node, coords) {\n  let len = node.nodeValue.length\n  let range = document.createRange()\n  for (let i = 0; i < len; i++) {\n    range.setEnd(node, i + 1)\n    range.setStart(node, i)\n    let rect = singleRect(range, 1)\n    if (rect.top == rect.bottom) continue\n    if (inRect(coords, rect))\n      return {node, offset: i + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0)}\n  }\n  return {node, offset: 0}\n}\n\nfunction inRect(coords, rect) {\n  return coords.left >= rect.left - 1 && coords.left <= rect.right + 1&&\n    coords.top >= rect.top - 1 && coords.top <= rect.bottom + 1\n}\n\nfunction targetKludge(dom, coords) {\n  let parent = dom.parentNode\n  if (parent && /^li$/i.test(parent.nodeName) && coords.left < dom.getBoundingClientRect().left)\n    return parent\n  return dom\n}\n\nfunction posFromElement(view, elt, coords) {\n  let {node, offset} = findOffsetInNode(elt, coords), bias = -1\n  if (node.nodeType == 1 && !node.firstChild) {\n    let rect = node.getBoundingClientRect()\n    bias = rect.left != rect.right && coords.left > (rect.left + rect.right) / 2 ? 1 : -1\n  }\n  return view.docView.posFromDOM(node, offset, bias)\n}\n\nfunction posFromCaret(view, node, offset, coords) {\n  // Browser (in caretPosition/RangeFromPoint) will agressively\n  // normalize towards nearby inline nodes. Since we are interested in\n  // positions between block nodes too, we first walk up the hierarchy\n  // of nodes to see if there are block nodes that the coordinates\n  // fall outside of. If so, we take the position before/after that\n  // block. If not, we call `posFromDOM` on the raw node/offset.\n  let outside = -1\n  for (let cur = node;;) {\n    if (cur == view.dom) break\n    let desc = view.docView.nearestDesc(cur, true)\n    if (!desc) return null\n    if (desc.node.isBlock && desc.parent) {\n      let rect = desc.dom.getBoundingClientRect()\n      if (rect.left > coords.left || rect.top > coords.top) outside = desc.posBefore\n      else if (rect.right < coords.left || rect.bottom < coords.top) outside = desc.posAfter\n      else break\n    }\n    cur = desc.dom.parentNode\n  }\n  return outside > -1 ? outside : view.docView.posFromDOM(node, offset)\n}\n\nfunction elementFromPoint(element, coords, box) {\n  let len = element.childNodes.length\n  if (len && box.top < box.bottom) {\n    for (let startI = Math.max(0, Math.min(len - 1, Math.floor(len * (coords.top - box.top) / (box.bottom - box.top)) - 2)), i = startI;;) {\n      let child = element.childNodes[i]\n      if (child.nodeType == 1) {\n        let rects = child.getClientRects()\n        for (let j = 0; j < rects.length; j++) {\n          let rect = rects[j]\n          if (inRect(coords, rect)) return elementFromPoint(child, coords, rect)\n        }\n      }\n      if ((i = (i + 1) % len) == startI) break\n    }\n  }\n  return element\n}\n\n// Given an x,y position on the editor, get the position in the document.\nexport function posAtCoords(view, coords) {\n  let root = view.root, node, offset\n  if (root.caretPositionFromPoint) {\n    try { // Firefox throws for this call in hard-to-predict circumstances (#994)\n      let pos = root.caretPositionFromPoint(coords.left, coords.top)\n      if (pos) ({offsetNode: node, offset} = pos)\n    } catch (_) {}\n  }\n  if (!node && root.caretRangeFromPoint) {\n    let range = root.caretRangeFromPoint(coords.left, coords.top)\n    if (range) ({startContainer: node, startOffset: offset} = range)\n  }\n\n  let elt = root.elementFromPoint(coords.left, coords.top + 1), pos\n  if (!elt || !view.dom.contains(elt.nodeType != 1 ? elt.parentNode : elt)) {\n    let box = view.dom.getBoundingClientRect()\n    if (!inRect(coords, box)) return null\n    elt = elementFromPoint(view.dom, coords, box)\n    if (!elt) return null\n  }\n  // Safari's caretRangeFromPoint returns nonsense when on a draggable element\n  if (browser.safari && elt.draggable) node = offset = null\n  elt = targetKludge(elt, coords)\n  if (node) {\n    if (browser.gecko && node.nodeType == 1) {\n      // Firefox will sometimes return offsets into <input> nodes, which\n      // have no actual children, from caretPositionFromPoint (#953)\n      offset = Math.min(offset, node.childNodes.length)\n      // It'll also move the returned position before image nodes,\n      // even if those are behind it.\n      if (offset < node.childNodes.length) {\n        let next = node.childNodes[offset], box\n        if (next.nodeName == \"IMG\" && (box = next.getBoundingClientRect()).right <= coords.left &&\n            box.bottom > coords.top)\n          offset++\n      }\n    }\n    // Suspiciously specific kludge to work around caret*FromPoint\n    // never returning a position at the end of the document\n    if (node == view.dom && offset == node.childNodes.length - 1 && node.lastChild.nodeType == 1 &&\n        coords.top > node.lastChild.getBoundingClientRect().bottom)\n      pos = view.state.doc.content.size\n    // Ignore positions directly after a BR, since caret*FromPoint\n    // 'round up' positions that would be more accurately placed\n    // before the BR node.\n    else if (offset == 0 || node.nodeType != 1 || node.childNodes[offset - 1].nodeName != \"BR\")\n      pos = posFromCaret(view, node, offset, coords)\n  }\n  if (pos == null) pos = posFromElement(view, elt, coords)\n\n  let desc = view.docView.nearestDesc(elt, true)\n  return {pos, inside: desc ? desc.posAtStart - desc.border : -1}\n}\n\nfunction singleRect(object, bias) {\n  let rects = object.getClientRects()\n  return !rects.length ? object.getBoundingClientRect() : rects[bias < 0 ? 0 : rects.length - 1]\n}\n\nconst BIDI = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/\n\n// : (EditorView, number, number) → {left: number, top: number, right: number, bottom: number}\n// Given a position in the document model, get a bounding box of the\n// character at that position, relative to the window.\nexport function coordsAtPos(view, pos, side) {\n  let {node, offset} = view.docView.domFromPos(pos, side < 0 ? -1 : 1)\n\n  let supportEmptyRange = browser.webkit || browser.gecko\n  if (node.nodeType == 3) {\n    // These browsers support querying empty text ranges. Prefer that in\n    // bidi context or when at the end of a node.\n    if (supportEmptyRange && (BIDI.test(node.nodeValue) || (side < 0 ? !offset : offset == node.nodeValue.length))) {\n      let rect = singleRect(textRange(node, offset, offset), side)\n      // Firefox returns bad results (the position before the space)\n      // when querying a position directly after line-broken\n      // whitespace. Detect this situation and and kludge around it\n      if (browser.gecko && offset && /\\s/.test(node.nodeValue[offset - 1]) && offset < node.nodeValue.length) {\n        let rectBefore = singleRect(textRange(node, offset - 1, offset - 1), -1)\n        if (rectBefore.top == rect.top) {\n          let rectAfter = singleRect(textRange(node, offset, offset + 1), -1)\n          if (rectAfter.top != rect.top)\n            return flattenV(rectAfter, rectAfter.left < rectBefore.left)\n        }\n      }\n      return rect\n    } else {\n      let from = offset, to = offset, takeSide = side < 0 ? 1 : -1\n      if (side < 0 && !offset) { to++; takeSide = -1 }\n      else if (side >= 0 && offset == node.nodeValue.length) { from--; takeSide = 1 }\n      else if (side < 0) { from-- }\n      else { to ++ }\n      return flattenV(singleRect(textRange(node, from, to), takeSide), takeSide < 0)\n    }\n  }\n\n  // Return a horizontal line in block context\n  if (!view.state.doc.resolve(pos).parent.inlineContent) {\n    if (offset && (side < 0 || offset == nodeSize(node))) {\n      let before = node.childNodes[offset - 1]\n      if (before.nodeType == 1) return flattenH(before.getBoundingClientRect(), false)\n    }\n    if (offset < nodeSize(node)) {\n      let after = node.childNodes[offset]\n      if (after.nodeType == 1) return flattenH(after.getBoundingClientRect(), true)\n    }\n    return flattenH(node.getBoundingClientRect(), side >= 0)\n  }\n\n  // Inline, not in text node (this is not Bidi-safe)\n  if (offset && (side < 0 || offset == nodeSize(node))) {\n    let before = node.childNodes[offset - 1]\n    let target = before.nodeType == 3 ? textRange(before, nodeSize(before) - (supportEmptyRange ? 0 : 1))\n        // BR nodes tend to only return the rectangle before them.\n        // Only use them if they are the last element in their parent\n        : before.nodeType == 1 && (before.nodeName != \"BR\" || !before.nextSibling) ? before : null\n    if (target) return flattenV(singleRect(target, 1), false)\n  }\n  if (offset < nodeSize(node)) {\n    let after = node.childNodes[offset]\n    let target = after.nodeType == 3 ? textRange(after, 0, (supportEmptyRange ? 0 : 1))\n        : after.nodeType == 1 ? after : null\n    if (target) return flattenV(singleRect(target, -1), true)\n  }\n  // All else failed, just try to get a rectangle for the target node\n  return flattenV(singleRect(node.nodeType == 3 ? textRange(node) : node, -side), side >= 0)\n}\n\nfunction flattenV(rect, left) {\n  if (rect.width == 0) return rect\n  let x = left ? rect.left : rect.right\n  return {top: rect.top, bottom: rect.bottom, left: x, right: x}\n}\n\nfunction flattenH(rect, top) {\n  if (rect.height == 0) return rect\n  let y = top ? rect.top : rect.bottom\n  return {top: y, bottom: y, left: rect.left, right: rect.right}\n}\n\nfunction withFlushedState(view, state, f) {\n  let viewState = view.state, active = view.root.activeElement\n  if (viewState != state) view.updateState(state)\n  if (active != view.dom) view.focus()\n  try {\n    return f()\n  } finally {\n    if (viewState != state) view.updateState(viewState)\n    if (active != view.dom && active) active.focus()\n  }\n}\n\n// : (EditorView, number, number)\n// Whether vertical position motion in a given direction\n// from a position would leave a text block.\nfunction endOfTextblockVertical(view, state, dir) {\n  let sel = state.selection\n  let $pos = dir == \"up\" ? sel.$from : sel.$to\n  return withFlushedState(view, state, () => {\n    let {node: dom} = view.docView.domFromPos($pos.pos, dir == \"up\" ? -1 : 1)\n    for (;;) {\n      let nearest = view.docView.nearestDesc(dom, true)\n      if (!nearest) break\n      if (nearest.node.isBlock) { dom = nearest.dom; break }\n      dom = nearest.dom.parentNode\n    }\n    let coords = coordsAtPos(view, $pos.pos, 1)\n    for (let child = dom.firstChild; child; child = child.nextSibling) {\n      let boxes\n      if (child.nodeType == 1) boxes = child.getClientRects()\n      else if (child.nodeType == 3) boxes = textRange(child, 0, child.nodeValue.length).getClientRects()\n      else continue\n      for (let i = 0; i < boxes.length; i++) {\n        let box = boxes[i]\n        if (box.bottom > box.top && (dir == \"up\" ? box.bottom < coords.top + 1 : box.top > coords.bottom - 1))\n          return false\n      }\n    }\n    return true\n  })\n}\n\nconst maybeRTL = /[\\u0590-\\u08ac]/\n\nfunction endOfTextblockHorizontal(view, state, dir) {\n  let {$head} = state.selection\n  if (!$head.parent.isTextblock) return false\n  let offset = $head.parentOffset, atStart = !offset, atEnd = offset == $head.parent.content.size\n  let sel = getSelection()\n  // If the textblock is all LTR, or the browser doesn't support\n  // Selection.modify (Edge), fall back to a primitive approach\n  if (!maybeRTL.test($head.parent.textContent) || !sel.modify)\n    return dir == \"left\" || dir == \"backward\" ? atStart : atEnd\n\n  return withFlushedState(view, state, () => {\n    // This is a huge hack, but appears to be the best we can\n    // currently do: use `Selection.modify` to move the selection by\n    // one character, and see if that moves the cursor out of the\n    // textblock (or doesn't move it at all, when at the start/end of\n    // the document).\n    let oldRange = sel.getRangeAt(0), oldNode = sel.focusNode, oldOff = sel.focusOffset\n    let oldBidiLevel = sel.caretBidiLevel // Only for Firefox\n    sel.modify(\"move\", dir, \"character\")\n    let parentDOM = $head.depth ? view.docView.domAfterPos($head.before()) : view.dom\n    let result = !parentDOM.contains(sel.focusNode.nodeType == 1 ? sel.focusNode : sel.focusNode.parentNode) ||\n        (oldNode == sel.focusNode && oldOff == sel.focusOffset)\n    // Restore the previous selection\n    sel.removeAllRanges()\n    sel.addRange(oldRange)\n    if (oldBidiLevel != null) sel.caretBidiLevel = oldBidiLevel\n    return result\n  })\n}\n\nlet cachedState = null, cachedDir = null, cachedResult = false\nexport function endOfTextblock(view, state, dir) {\n  if (cachedState == state && cachedDir == dir) return cachedResult\n  cachedState = state; cachedDir = dir\n  return cachedResult = dir == \"up\" || dir == \"down\"\n    ? endOfTextblockVertical(view, state, dir)\n    : endOfTextblockHorizontal(view, state, dir)\n}\n","import {DOMSerializer, Fragment, Mark} from \"prosemirror-model\"\nimport {TextSelection} from \"prosemirror-state\"\n\nimport {domIndex, isEquivalentPosition, nodeSize} from \"./dom\"\nimport browser from \"./browser\"\n\n// NodeView:: interface\n//\n// By default, document nodes are rendered using the result of the\n// [`toDOM`](#model.NodeSpec.toDOM) method of their spec, and managed\n// entirely by the editor. For some use cases, such as embedded\n// node-specific editing interfaces, you want more control over\n// the behavior of a node's in-editor representation, and need to\n// [define](#view.EditorProps.nodeViews) a custom node view.\n//\n// Mark views only support `dom` and `contentDOM`, and don't support\n// any of the node view methods.\n//\n// Objects returned as node views must conform to this interface.\n//\n//   dom:: ?dom.Node\n//   The outer DOM node that represents the document node. When not\n//   given, the default strategy is used to create a DOM node.\n//\n//   contentDOM:: ?dom.Node\n//   The DOM node that should hold the node's content. Only meaningful\n//   if the node view also defines a `dom` property and if its node\n//   type is not a leaf node type. When this is present, ProseMirror\n//   will take care of rendering the node's children into it. When it\n//   is not present, the node view itself is responsible for rendering\n//   (or deciding not to render) its child nodes.\n//\n//   update:: ?(node: Node, decorations: [Decoration], innerDecorations: DecorationSource) → bool\n//   When given, this will be called when the view is updating itself.\n//   It will be given a node (possibly of a different type), an array\n//   of active decorations around the node (which are automatically\n//   drawn, and the node view may ignore if it isn't interested in\n//   them), and a [decoration source](#view.DecorationSource) that\n//   represents any decorations that apply to the content of the node\n//   (which again may be ignored). It should return true if it was\n//   able to update to that node, and false otherwise. If the node\n//   view has a `contentDOM` property (or no `dom` property), updating\n//   its child nodes will be handled by ProseMirror.\n//\n//   selectNode:: ?()\n//   Can be used to override the way the node's selected status (as a\n//   node selection) is displayed.\n//\n//   deselectNode:: ?()\n//   When defining a `selectNode` method, you should also provide a\n//   `deselectNode` method to remove the effect again.\n//\n//   setSelection:: ?(anchor: number, head: number, root: dom.Document)\n//   This will be called to handle setting the selection inside the\n//   node. The `anchor` and `head` positions are relative to the start\n//   of the node. By default, a DOM selection will be created between\n//   the DOM positions corresponding to those positions, but if you\n//   override it you can do something else.\n//\n//   stopEvent:: ?(event: dom.Event) → bool\n//   Can be used to prevent the editor view from trying to handle some\n//   or all DOM events that bubble up from the node view. Events for\n//   which this returns true are not handled by the editor.\n//\n//   ignoreMutation:: ?(dom.MutationRecord) → bool\n//   Called when a DOM\n//   [mutation](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver)\n//   or a selection change happens within the view. When the change is\n//   a selection change, the record will have a `type` property of\n//   `\"selection\"` (which doesn't occur for native mutation records).\n//   Return false if the editor should re-read the selection or\n//   re-parse the range around the mutation, true if it can safely be\n//   ignored.\n//\n//   destroy:: ?()\n//   Called when the node view is removed from the editor or the whole\n//   editor is destroyed. (Not available for marks.)\n\n// View descriptions are data structures that describe the DOM that is\n// used to represent the editor's content. They are used for:\n//\n// - Incremental redrawing when the document changes\n//\n// - Figuring out what part of the document a given DOM position\n//   corresponds to\n//\n// - Wiring in custom implementations of the editing interface for a\n//   given node\n//\n// They form a doubly-linked mutable tree, starting at `view.docView`.\n\nconst NOT_DIRTY = 0, CHILD_DIRTY = 1, CONTENT_DIRTY = 2, NODE_DIRTY = 3\n\n// Superclass for the various kinds of descriptions. Defines their\n// basic structure and shared methods.\nclass ViewDesc {\n  // : (?ViewDesc, [ViewDesc], dom.Node, ?dom.Node)\n  constructor(parent, children, dom, contentDOM) {\n    this.parent = parent\n    this.children = children\n    this.dom = dom\n    // An expando property on the DOM node provides a link back to its\n    // description.\n    dom.pmViewDesc = this\n    // This is the node that holds the child views. It may be null for\n    // descs that don't have children.\n    this.contentDOM = contentDOM\n    this.dirty = NOT_DIRTY\n  }\n\n  // Used to check whether a given description corresponds to a\n  // widget/mark/node.\n  matchesWidget() { return false }\n  matchesMark() { return false }\n  matchesNode() { return false }\n  matchesHack() { return false }\n\n  get beforePosition() { return false }\n\n  // : () → ?ParseRule\n  // When parsing in-editor content (in domchange.js), we allow\n  // descriptions to determine the parse rules that should be used to\n  // parse them.\n  parseRule() { return null }\n\n  // : (dom.Event) → bool\n  // Used by the editor's event handler to ignore events that come\n  // from certain descs.\n  stopEvent() { return false }\n\n  // The size of the content represented by this desc.\n  get size() {\n    let size = 0\n    for (let i = 0; i < this.children.length; i++) size += this.children[i].size\n    return size\n  }\n\n  // For block nodes, this represents the space taken up by their\n  // start/end tokens.\n  get border() { return 0 }\n\n  destroy() {\n    this.parent = null\n    if (this.dom.pmViewDesc == this) this.dom.pmViewDesc = null\n    for (let i = 0; i < this.children.length; i++)\n      this.children[i].destroy()\n  }\n\n  posBeforeChild(child) {\n    for (let i = 0, pos = this.posAtStart; i < this.children.length; i++) {\n      let cur = this.children[i]\n      if (cur == child) return pos\n      pos += cur.size\n    }\n  }\n\n  get posBefore() {\n    return this.parent.posBeforeChild(this)\n  }\n\n  get posAtStart() {\n    return this.parent ? this.parent.posBeforeChild(this) + this.border : 0\n  }\n\n  get posAfter() {\n    return this.posBefore + this.size\n  }\n\n  get posAtEnd() {\n    return this.posAtStart + this.size - 2 * this.border\n  }\n\n  // : (dom.Node, number, ?number) → number\n  localPosFromDOM(dom, offset, bias) {\n    // If the DOM position is in the content, use the child desc after\n    // it to figure out a position.\n    if (this.contentDOM && this.contentDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode)) {\n      if (bias < 0) {\n        let domBefore, desc\n        if (dom == this.contentDOM) {\n          domBefore = dom.childNodes[offset - 1]\n        } else {\n          while (dom.parentNode != this.contentDOM) dom = dom.parentNode\n          domBefore = dom.previousSibling\n        }\n        while (domBefore && !((desc = domBefore.pmViewDesc) && desc.parent == this)) domBefore = domBefore.previousSibling\n        return domBefore ? this.posBeforeChild(desc) + desc.size : this.posAtStart\n      } else {\n        let domAfter, desc\n        if (dom == this.contentDOM) {\n          domAfter = dom.childNodes[offset]\n        } else {\n          while (dom.parentNode != this.contentDOM) dom = dom.parentNode\n          domAfter = dom.nextSibling\n        }\n        while (domAfter && !((desc = domAfter.pmViewDesc) && desc.parent == this)) domAfter = domAfter.nextSibling\n        return domAfter ? this.posBeforeChild(desc) : this.posAtEnd\n      }\n    }\n    // Otherwise, use various heuristics, falling back on the bias\n    // parameter, to determine whether to return the position at the\n    // start or at the end of this view desc.\n    let atEnd\n    if (dom == this.dom && this.contentDOM) {\n      atEnd = offset > domIndex(this.contentDOM)\n    } else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) {\n      atEnd = dom.compareDocumentPosition(this.contentDOM) & 2\n    } else if (this.dom.firstChild) {\n      if (offset == 0) for (let search = dom;; search = search.parentNode) {\n        if (search == this.dom) { atEnd = false; break }\n        if (search.parentNode.firstChild != search) break\n      }\n      if (atEnd == null && offset == dom.childNodes.length) for (let search = dom;; search = search.parentNode) {\n        if (search == this.dom) { atEnd = true; break }\n        if (search.parentNode.lastChild != search) break\n      }\n    }\n    return (atEnd == null ? bias > 0 : atEnd) ? this.posAtEnd : this.posAtStart\n  }\n\n  // Scan up the dom finding the first desc that is a descendant of\n  // this one.\n  nearestDesc(dom, onlyNodes) {\n    for (let first = true, cur = dom; cur; cur = cur.parentNode) {\n      let desc = this.getDesc(cur)\n      if (desc && (!onlyNodes || desc.node)) {\n        // If dom is outside of this desc's nodeDOM, don't count it.\n        if (first && desc.nodeDOM &&\n            !(desc.nodeDOM.nodeType == 1 ? desc.nodeDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode) : desc.nodeDOM == dom))\n          first = false\n        else\n          return desc\n      }\n    }\n  }\n\n  getDesc(dom) {\n    let desc = dom.pmViewDesc\n    for (let cur = desc; cur; cur = cur.parent) if (cur == this) return desc\n  }\n\n  posFromDOM(dom, offset, bias) {\n    for (let scan = dom; scan; scan = scan.parentNode) {\n      let desc = this.getDesc(scan)\n      if (desc) return desc.localPosFromDOM(dom, offset, bias)\n    }\n    return -1\n  }\n\n  // : (number) → ?NodeViewDesc\n  // Find the desc for the node after the given pos, if any. (When a\n  // parent node overrode rendering, there might not be one.)\n  descAt(pos) {\n    for (let i = 0, offset = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (offset == pos && end != offset) {\n        while (!child.border && child.children.length) child = child.children[0]\n        return child\n      }\n      if (pos < end) return child.descAt(pos - offset - child.border)\n      offset = end\n    }\n  }\n\n  // : (number, number) → {node: dom.Node, offset: number}\n  domFromPos(pos, side) {\n    if (!this.contentDOM) return {node: this.dom, offset: 0}\n    for (let offset = 0, i = 0, first = true;; i++, first = false) {\n      // Skip removed or always-before children\n      while (i < this.children.length && (this.children[i].beforePosition ||\n                                          this.children[i].dom.parentNode != this.contentDOM))\n        offset += this.children[i++].size\n      let child = i == this.children.length ? null : this.children[i]\n      if (offset == pos && (side == 0 || !child || !child.size || child.border || (side < 0 && first)) ||\n          child && child.domAtom && pos < offset + child.size) return {\n        node: this.contentDOM,\n        offset: child ? domIndex(child.dom) : this.contentDOM.childNodes.length\n      }\n      if (!child) throw new Error(\"Invalid position \" + pos)\n      let end = offset + child.size\n      if (!child.domAtom && (side < 0 && !child.border ? end >= pos : end > pos) &&\n          (end > pos || i + 1 >= this.children.length || !this.children[i + 1].beforePosition))\n        return child.domFromPos(pos - offset - child.border, side)\n      offset = end\n    }\n  }\n\n  // Used to find a DOM range in a single parent for a given changed\n  // range.\n  parseRange(from, to, base = 0) {\n    if (this.children.length == 0)\n      return {node: this.contentDOM, from, to, fromOffset: 0, toOffset: this.contentDOM.childNodes.length}\n\n    let fromOffset = -1, toOffset = -1\n    for (let offset = base, i = 0;; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (fromOffset == -1 && from <= end) {\n        let childBase = offset + child.border\n        // FIXME maybe descend mark views to parse a narrower range?\n        if (from >= childBase && to <= end - child.border && child.node &&\n            child.contentDOM && this.contentDOM.contains(child.contentDOM))\n          return child.parseRange(from, to, childBase)\n\n        from = offset\n        for (let j = i; j > 0; j--) {\n          let prev = this.children[j - 1]\n          if (prev.size && prev.dom.parentNode == this.contentDOM && !prev.emptyChildAt(1)) {\n            fromOffset = domIndex(prev.dom) + 1\n            break\n          }\n          from -= prev.size\n        }\n        if (fromOffset == -1) fromOffset = 0\n      }\n      if (fromOffset > -1 && (end > to || i == this.children.length - 1)) {\n        to = end\n        for (let j = i + 1; j < this.children.length; j++) {\n          let next = this.children[j]\n          if (next.size && next.dom.parentNode == this.contentDOM && !next.emptyChildAt(-1)) {\n            toOffset = domIndex(next.dom)\n            break\n          }\n          to += next.size\n        }\n        if (toOffset == -1) toOffset = this.contentDOM.childNodes.length\n        break\n      }\n      offset = end\n    }\n    return {node: this.contentDOM, from, to, fromOffset, toOffset}\n  }\n\n  emptyChildAt(side) {\n    if (this.border || !this.contentDOM || !this.children.length) return false\n    let child = this.children[side < 0 ? 0 : this.children.length - 1]\n    return child.size == 0 || child.emptyChildAt(side)\n  }\n\n  // : (number) → dom.Node\n  domAfterPos(pos) {\n    let {node, offset} = this.domFromPos(pos, 0)\n    if (node.nodeType != 1 || offset == node.childNodes.length)\n      throw new RangeError(\"No node after pos \" + pos)\n    return node.childNodes[offset]\n  }\n\n  // : (number, number, dom.Document)\n  // View descs are responsible for setting any selection that falls\n  // entirely inside of them, so that custom implementations can do\n  // custom things with the selection. Note that this falls apart when\n  // a selection starts in such a node and ends in another, in which\n  // case we just use whatever domFromPos produces as a best effort.\n  setSelection(anchor, head, root, force) {\n    // If the selection falls entirely in a child, give it to that child\n    let from = Math.min(anchor, head), to = Math.max(anchor, head)\n    for (let i = 0, offset = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (from > offset && to < end)\n        return child.setSelection(anchor - offset - child.border, head - offset - child.border, root, force)\n      offset = end\n    }\n\n    let anchorDOM = this.domFromPos(anchor, anchor ? -1 : 1)\n    let headDOM = head == anchor ? anchorDOM : this.domFromPos(head, head ? -1 : 1)\n    let domSel = root.getSelection()\n\n    let brKludge = false\n    // On Firefox, using Selection.collapse to put the cursor after a\n    // BR node for some reason doesn't always work (#1073). On Safari,\n    // the cursor sometimes inexplicable visually lags behind its\n    // reported position in such situations (#1092).\n    if ((browser.gecko || browser.safari) && anchor == head) {\n      let {node, offset} = anchorDOM\n      if (node.nodeType == 3) {\n        brKludge = offset && node.nodeValue[offset - 1] == \"\\n\"\n        // Issue #1128\n        if (brKludge && offset == node.nodeValue.length &&\n            node.nextSibling && node.nextSibling.nodeName == \"BR\")\n          anchorDOM = headDOM = {node: node.parentNode, offset: domIndex(node) + 1}\n      } else {\n        let prev = node.childNodes[offset - 1]\n        brKludge = prev && (prev.nodeName == \"BR\" || prev.contentEditable == \"false\")\n      }\n    }\n\n    if (!(force || brKludge && browser.safari) &&\n        isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset) &&\n        isEquivalentPosition(headDOM.node, headDOM.offset, domSel.focusNode, domSel.focusOffset))\n      return\n\n    // Selection.extend can be used to create an 'inverted' selection\n    // (one where the focus is before the anchor), but not all\n    // browsers support it yet.\n    let domSelExtended = false\n    if ((domSel.extend || anchor == head) && !brKludge) {\n      domSel.collapse(anchorDOM.node, anchorDOM.offset)\n      try {\n        if (anchor != head) domSel.extend(headDOM.node, headDOM.offset)\n        domSelExtended = true\n      } catch (err) {\n        // In some cases with Chrome the selection is empty after calling\n        // collapse, even when it should be valid. This appears to be a bug, but\n        // it is difficult to isolate. If this happens fallback to the old path\n        // without using extend.\n        if (!(err instanceof DOMException)) throw err\n        // declare global: DOMException\n      }\n    }\n    if (!domSelExtended) {\n      if (anchor > head) { let tmp = anchorDOM; anchorDOM = headDOM; headDOM = tmp }\n      let range = document.createRange()\n      range.setEnd(headDOM.node, headDOM.offset)\n      range.setStart(anchorDOM.node, anchorDOM.offset)\n      domSel.removeAllRanges()\n      domSel.addRange(range)\n    }\n  }\n\n  // : (dom.MutationRecord) → bool\n  ignoreMutation(mutation) {\n    return !this.contentDOM && mutation.type != \"selection\"\n  }\n\n  get contentLost() {\n    return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM)\n  }\n\n  // Remove a subtree of the element tree that has been touched\n  // by a DOM change, so that the next update will redraw it.\n  markDirty(from, to) {\n    for (let offset = 0, i = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (offset == end ? from <= end && to >= offset : from < end && to > offset) {\n        let startInside = offset + child.border, endInside = end - child.border\n        if (from >= startInside && to <= endInside) {\n          this.dirty = from == offset || to == end ? CONTENT_DIRTY : CHILD_DIRTY\n          if (from == startInside && to == endInside &&\n              (child.contentLost || child.dom.parentNode != this.contentDOM)) child.dirty = NODE_DIRTY\n          else child.markDirty(from - startInside, to - startInside)\n          return\n        } else {\n          child.dirty = NODE_DIRTY\n        }\n      }\n      offset = end\n    }\n    this.dirty = CONTENT_DIRTY\n  }\n\n  markParentsDirty() {\n    let level = 1\n    for (let node = this.parent; node; node = node.parent, level++) {\n      let dirty = level == 1 ? CONTENT_DIRTY : CHILD_DIRTY\n      if (node.dirty < dirty) node.dirty = dirty\n    }\n  }\n\n  get domAtom() { return false }\n}\n\n// Reused array to avoid allocating fresh arrays for things that will\n// stay empty anyway.\nconst nothing = []\n\n// A widget desc represents a widget decoration, which is a DOM node\n// drawn between the document nodes.\nclass WidgetViewDesc extends ViewDesc {\n  // : (ViewDesc, Decoration)\n  constructor(parent, widget, view, pos) {\n    let self, dom = widget.type.toDOM\n    if (typeof dom == \"function\") dom = dom(view, () => {\n      if (!self) return pos\n      if (self.parent) return self.parent.posBeforeChild(self)\n    })\n    if (!widget.type.spec.raw) {\n      if (dom.nodeType != 1) {\n        let wrap = document.createElement(\"span\")\n        wrap.appendChild(dom)\n        dom = wrap\n      }\n      dom.contentEditable = false\n      dom.classList.add(\"ProseMirror-widget\")\n    }\n    super(parent, nothing, dom, null)\n    this.widget = widget\n    self = this\n  }\n\n  get beforePosition() {\n    return this.widget.type.side < 0\n  }\n\n  matchesWidget(widget) {\n    return this.dirty == NOT_DIRTY && widget.type.eq(this.widget.type)\n  }\n\n  parseRule() { return {ignore: true} }\n\n  stopEvent(event) {\n    let stop = this.widget.spec.stopEvent\n    return stop ? stop(event) : false\n  }\n\n  ignoreMutation(mutation) {\n    return mutation.type != \"selection\" || this.widget.spec.ignoreSelection\n  }\n\n  get domAtom() { return true }\n}\n\nclass CompositionViewDesc extends ViewDesc {\n  constructor(parent, dom, textDOM, text) {\n    super(parent, nothing, dom, null)\n    this.textDOM = textDOM\n    this.text = text\n  }\n\n  get size() { return this.text.length }\n\n  localPosFromDOM(dom, offset) {\n    if (dom != this.textDOM) return this.posAtStart + (offset ? this.size : 0)\n    return this.posAtStart + offset\n  }\n\n  domFromPos(pos) {\n    return {node: this.textDOM, offset: pos}\n  }\n\n  ignoreMutation(mut) {\n    return mut.type === 'characterData' && mut.target.nodeValue == mut.oldValue\n   }\n}\n\n// A mark desc represents a mark. May have multiple children,\n// depending on how the mark is split. Note that marks are drawn using\n// a fixed nesting order, for simplicity and predictability, so in\n// some cases they will be split more often than would appear\n// necessary.\nclass MarkViewDesc extends ViewDesc {\n  // : (ViewDesc, Mark, dom.Node)\n  constructor(parent, mark, dom, contentDOM) {\n    super(parent, [], dom, contentDOM)\n    this.mark = mark\n  }\n\n  static create(parent, mark, inline, view) {\n    let custom = view.nodeViews[mark.type.name]\n    let spec = custom && custom(mark, view, inline)\n    if (!spec || !spec.dom)\n      spec = DOMSerializer.renderSpec(document, mark.type.spec.toDOM(mark, inline))\n    return new MarkViewDesc(parent, mark, spec.dom, spec.contentDOM || spec.dom)\n  }\n\n  parseRule() { return {mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM} }\n\n  matchesMark(mark) { return this.dirty != NODE_DIRTY && this.mark.eq(mark) }\n\n  markDirty(from, to) {\n    super.markDirty(from, to)\n    // Move dirty info to nearest node view\n    if (this.dirty != NOT_DIRTY) {\n      let parent = this.parent\n      while (!parent.node) parent = parent.parent\n      if (parent.dirty < this.dirty) parent.dirty = this.dirty\n      this.dirty = NOT_DIRTY\n    }\n  }\n\n  slice(from, to, view) {\n    let copy = MarkViewDesc.create(this.parent, this.mark, true, view)\n    let nodes = this.children, size = this.size\n    if (to < size) nodes = replaceNodes(nodes, to, size, view)\n    if (from > 0) nodes = replaceNodes(nodes, 0, from, view)\n    for (let i = 0; i < nodes.length; i++) nodes[i].parent = copy\n    copy.children = nodes\n    return copy\n  }\n}\n\n// Node view descs are the main, most common type of view desc, and\n// correspond to an actual node in the document. Unlike mark descs,\n// they populate their child array themselves.\nclass NodeViewDesc extends ViewDesc {\n  // : (?ViewDesc, Node, [Decoration], DecorationSource, dom.Node, ?dom.Node, EditorView)\n  constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos) {\n    super(parent, node.isLeaf ? nothing : [], dom, contentDOM)\n    this.nodeDOM = nodeDOM\n    this.node = node\n    this.outerDeco = outerDeco\n    this.innerDeco = innerDeco\n    if (contentDOM) this.updateChildren(view, pos)\n  }\n\n  // By default, a node is rendered using the `toDOM` method from the\n  // node type spec. But client code can use the `nodeViews` spec to\n  // supply a custom node view, which can influence various aspects of\n  // the way the node works.\n  //\n  // (Using subclassing for this was intentionally decided against,\n  // since it'd require exposing a whole slew of finnicky\n  // implementation details to the user code that they probably will\n  // never need.)\n  static create(parent, node, outerDeco, innerDeco, view, pos) {\n    let custom = view.nodeViews[node.type.name], descObj\n    let spec = custom && custom(node, view, () => {\n      // (This is a function that allows the custom view to find its\n      // own position)\n      if (!descObj) return pos\n      if (descObj.parent) return descObj.parent.posBeforeChild(descObj)\n    }, outerDeco, innerDeco)\n\n    let dom = spec && spec.dom, contentDOM = spec && spec.contentDOM\n    if (node.isText) {\n      if (!dom) dom = document.createTextNode(node.text)\n      else if (dom.nodeType != 3) throw new RangeError(\"Text must be rendered as a DOM text node\")\n    } else if (!dom) {\n      ;({dom, contentDOM} = DOMSerializer.renderSpec(document, node.type.spec.toDOM(node)))\n    }\n    if (!contentDOM && !node.isText && dom.nodeName != \"BR\") { // Chrome gets confused by <br contenteditable=false>\n      if (!dom.hasAttribute(\"contenteditable\")) dom.contentEditable = false\n      if (node.type.spec.draggable) dom.draggable = true\n    }\n\n    let nodeDOM = dom\n    dom = applyOuterDeco(dom, outerDeco, node)\n\n    if (spec)\n      return descObj = new CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM,\n                                              spec, view, pos + 1)\n    else if (node.isText)\n      return new TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view)\n    else\n      return new NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos + 1)\n  }\n\n  parseRule() {\n    // Experimental kludge to allow opt-in re-parsing of nodes\n    if (this.node.type.spec.reparseInView) return null\n    // FIXME the assumption that this can always return the current\n    // attrs means that if the user somehow manages to change the\n    // attrs in the dom, that won't be picked up. Not entirely sure\n    // whether this is a problem\n    let rule = {node: this.node.type.name, attrs: this.node.attrs}\n    if (this.node.type.spec.code) rule.preserveWhitespace = \"full\"\n    if (this.contentDOM && !this.contentLost) rule.contentElement = this.contentDOM\n    else rule.getContent = () => this.contentDOM ? Fragment.empty : this.node.content\n    return rule\n  }\n\n  matchesNode(node, outerDeco, innerDeco) {\n    return this.dirty == NOT_DIRTY && node.eq(this.node) &&\n      sameOuterDeco(outerDeco, this.outerDeco) && innerDeco.eq(this.innerDeco)\n  }\n\n  get size() { return this.node.nodeSize }\n\n  get border() { return this.node.isLeaf ? 0 : 1 }\n\n  // Syncs `this.children` to match `this.node.content` and the local\n  // decorations, possibly introducing nesting for marks. Then, in a\n  // separate step, syncs the DOM inside `this.contentDOM` to\n  // `this.children`.\n  updateChildren(view, pos) {\n    let inline = this.node.inlineContent, off = pos\n    let composition = inline && view.composing && this.localCompositionNode(view, pos)\n    let updater = new ViewTreeUpdater(this, composition && composition.node)\n    iterDeco(this.node, this.innerDeco, (widget, i, insideNode) => {\n      if (widget.spec.marks)\n        updater.syncToMarks(widget.spec.marks, inline, view)\n      else if (widget.type.side >= 0 && !insideNode)\n        updater.syncToMarks(i == this.node.childCount ? Mark.none : this.node.child(i).marks, inline, view)\n      // If the next node is a desc matching this widget, reuse it,\n      // otherwise insert the widget as a new view desc.\n      updater.placeWidget(widget, view, off)\n    }, (child, outerDeco, innerDeco, i) => {\n      // Make sure the wrapping mark descs match the node's marks.\n      updater.syncToMarks(child.marks, inline, view)\n      // Either find an existing desc that exactly matches this node,\n      // and drop the descs before it.\n      updater.findNodeMatch(child, outerDeco, innerDeco, i) ||\n        // Or try updating the next desc to reflect this node.\n        updater.updateNextNode(child, outerDeco, innerDeco, view, i) ||\n        // Or just add it as a new desc.\n        updater.addNode(child, outerDeco, innerDeco, view, off)\n      off += child.nodeSize\n    })\n    // Drop all remaining descs after the current position.\n    updater.syncToMarks(nothing, inline, view)\n    if (this.node.isTextblock) updater.addTextblockHacks()\n    updater.destroyRest()\n\n    // Sync the DOM if anything changed\n    if (updater.changed || this.dirty == CONTENT_DIRTY) {\n      // May have to protect focused DOM from being changed if a composition is active\n      if (composition) this.protectLocalComposition(view, composition)\n      renderDescs(this.contentDOM, this.children, view)\n      if (browser.ios) iosHacks(this.dom)\n    }\n  }\n\n  localCompositionNode(view, pos) {\n    // Only do something if both the selection and a focused text node\n    // are inside of this node, and the node isn't already part of a\n    // view that's a child of this view\n    let {from, to} = view.state.selection\n    if (!(view.state.selection instanceof TextSelection) || from < pos || to > pos + this.node.content.size) return\n    let sel = view.root.getSelection()\n    let textNode = nearbyTextNode(sel.focusNode, sel.focusOffset)\n    if (!textNode || !this.dom.contains(textNode.parentNode)) return\n\n    // Find the text in the focused node in the node, stop if it's not\n    // there (may have been modified through other means, in which\n    // case it should overwritten)\n    let text = textNode.nodeValue\n    let textPos = findTextInFragment(this.node.content, text, from - pos, to - pos)\n\n    return textPos < 0 ? null : {node: textNode, pos: textPos, text}\n  }\n\n  protectLocalComposition(view, {node, pos, text}) {\n    // The node is already part of a local view desc, leave it there\n    if (this.getDesc(node)) return\n\n    // Create a composition view for the orphaned nodes\n    let topNode = node\n    for (;; topNode = topNode.parentNode) {\n      if (topNode.parentNode == this.contentDOM) break\n      while (topNode.previousSibling) topNode.parentNode.removeChild(topNode.previousSibling)\n      while (topNode.nextSibling) topNode.parentNode.removeChild(topNode.nextSibling)\n      if (topNode.pmViewDesc) topNode.pmViewDesc = null\n    }\n    let desc = new CompositionViewDesc(this, topNode, node, text)\n    view.compositionNodes.push(desc)\n\n    // Patch up this.children to contain the composition view\n    this.children = replaceNodes(this.children, pos, pos + text.length, view, desc)\n  }\n\n  // : (Node, [Decoration], DecorationSource, EditorView) → bool\n  // If this desc be updated to match the given node decoration,\n  // do so and return true.\n  update(node, outerDeco, innerDeco, view) {\n    if (this.dirty == NODE_DIRTY ||\n        !node.sameMarkup(this.node)) return false\n    this.updateInner(node, outerDeco, innerDeco, view)\n    return true\n  }\n\n  updateInner(node, outerDeco, innerDeco, view) {\n    this.updateOuterDeco(outerDeco)\n    this.node = node\n    this.innerDeco = innerDeco\n    if (this.contentDOM) this.updateChildren(view, this.posAtStart)\n    this.dirty = NOT_DIRTY\n  }\n\n  updateOuterDeco(outerDeco) {\n    if (sameOuterDeco(outerDeco, this.outerDeco)) return\n    let needsWrap = this.nodeDOM.nodeType != 1\n    let oldDOM = this.dom\n    this.dom = patchOuterDeco(this.dom, this.nodeDOM,\n                              computeOuterDeco(this.outerDeco, this.node, needsWrap),\n                              computeOuterDeco(outerDeco, this.node, needsWrap))\n    if (this.dom != oldDOM) {\n      oldDOM.pmViewDesc = null\n      this.dom.pmViewDesc = this\n    }\n    this.outerDeco = outerDeco\n  }\n\n  // Mark this node as being the selected node.\n  selectNode() {\n    this.nodeDOM.classList.add(\"ProseMirror-selectednode\")\n    if (this.contentDOM || !this.node.type.spec.draggable) this.dom.draggable = true\n  }\n\n  // Remove selected node marking from this node.\n  deselectNode() {\n    this.nodeDOM.classList.remove(\"ProseMirror-selectednode\")\n    if (this.contentDOM || !this.node.type.spec.draggable) this.dom.removeAttribute(\"draggable\")\n  }\n\n  get domAtom() { return this.node.isAtom }\n}\n\n// Create a view desc for the top-level document node, to be exported\n// and used by the view class.\nexport function docViewDesc(doc, outerDeco, innerDeco, dom, view) {\n  applyOuterDeco(dom, outerDeco, doc)\n  return new NodeViewDesc(null, doc, outerDeco, innerDeco, dom, dom, dom, view, 0)\n}\n\nclass TextViewDesc extends NodeViewDesc {\n  constructor(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) {\n    super(parent, node, outerDeco, innerDeco, dom, null, nodeDOM, view)\n  }\n\n  parseRule() {\n    let skip = this.nodeDOM.parentNode\n    while (skip && skip != this.dom && !skip.pmIsDeco) skip = skip.parentNode\n    return {skip: skip || true}\n  }\n\n  update(node, outerDeco, _, view) {\n    if (this.dirty == NODE_DIRTY || (this.dirty != NOT_DIRTY && !this.inParent()) ||\n        !node.sameMarkup(this.node)) return false\n    this.updateOuterDeco(outerDeco)\n    if ((this.dirty != NOT_DIRTY || node.text != this.node.text) && node.text != this.nodeDOM.nodeValue) {\n      this.nodeDOM.nodeValue = node.text\n      if (view.trackWrites == this.nodeDOM) view.trackWrites = null\n    }\n    this.node = node\n    this.dirty = NOT_DIRTY\n    return true\n  }\n\n  inParent() {\n    let parentDOM = this.parent.contentDOM\n    for (let n = this.nodeDOM; n; n = n.parentNode) if (n == parentDOM) return true\n    return false\n  }\n\n  domFromPos(pos) {\n    return {node: this.nodeDOM, offset: pos}\n  }\n\n  localPosFromDOM(dom, offset, bias) {\n    if (dom == this.nodeDOM) return this.posAtStart + Math.min(offset, this.node.text.length)\n    return super.localPosFromDOM(dom, offset, bias)\n  }\n\n  ignoreMutation(mutation) {\n    return mutation.type != \"characterData\" && mutation.type != \"selection\"\n  }\n\n  slice(from, to, view) {\n    let node = this.node.cut(from, to), dom = document.createTextNode(node.text)\n    return new TextViewDesc(this.parent, node, this.outerDeco, this.innerDeco, dom, dom, view)\n  }\n\n  get domAtom() { return false }\n}\n\n// A dummy desc used to tag trailing BR or span nodes created to work\n// around contentEditable terribleness.\nclass BRHackViewDesc extends ViewDesc {\n  parseRule() { return {ignore: true} }\n  matchesHack() { return this.dirty == NOT_DIRTY }\n  get domAtom() { return true }\n}\n\n// A separate subclass is used for customized node views, so that the\n// extra checks only have to be made for nodes that are actually\n// customized.\nclass CustomNodeViewDesc extends NodeViewDesc {\n  // : (?ViewDesc, Node, [Decoration], DecorationSource, dom.Node, ?dom.Node, NodeView, EditorView)\n  constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view, pos) {\n    super(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos)\n    this.spec = spec\n  }\n\n  // A custom `update` method gets to decide whether the update goes\n  // through. If it does, and there's a `contentDOM` node, our logic\n  // updates the children.\n  update(node, outerDeco, innerDeco, view) {\n    if (this.dirty == NODE_DIRTY) return false\n    if (this.spec.update) {\n      let result = this.spec.update(node, outerDeco, innerDeco)\n      if (result) this.updateInner(node, outerDeco, innerDeco, view)\n      return result\n    } else if (!this.contentDOM && !node.isLeaf) {\n      return false\n    } else {\n      return super.update(node, outerDeco, innerDeco, view)\n    }\n  }\n\n  selectNode() {\n    this.spec.selectNode ? this.spec.selectNode() : super.selectNode()\n  }\n\n  deselectNode() {\n    this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode()\n  }\n\n  setSelection(anchor, head, root, force) {\n    this.spec.setSelection ? this.spec.setSelection(anchor, head, root)\n      : super.setSelection(anchor, head, root, force)\n  }\n\n  destroy() {\n    if (this.spec.destroy) this.spec.destroy()\n    super.destroy()\n  }\n\n  stopEvent(event) {\n    return this.spec.stopEvent ? this.spec.stopEvent(event) : false\n  }\n\n  ignoreMutation(mutation) {\n    return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : super.ignoreMutation(mutation)\n  }\n}\n\n// : (dom.Node, [ViewDesc])\n// Sync the content of the given DOM node with the nodes associated\n// with the given array of view descs, recursing into mark descs\n// because this should sync the subtree for a whole node at a time.\nfunction renderDescs(parentDOM, descs, view) {\n  let dom = parentDOM.firstChild, written = false\n  for (let i = 0; i < descs.length; i++) {\n    let desc = descs[i], childDOM = desc.dom\n    if (childDOM.parentNode == parentDOM) {\n      while (childDOM != dom) { dom = rm(dom); written = true }\n      dom = dom.nextSibling\n    } else {\n      written = true\n      parentDOM.insertBefore(childDOM, dom)\n    }\n    if (desc instanceof MarkViewDesc) {\n      let pos = dom ? dom.previousSibling : parentDOM.lastChild\n      renderDescs(desc.contentDOM, desc.children, view)\n      dom = pos ? pos.nextSibling : parentDOM.firstChild\n    }\n  }\n  while (dom) { dom = rm(dom); written = true }\n  if (written && view.trackWrites == parentDOM) view.trackWrites = null\n}\n\nfunction OuterDecoLevel(nodeName) {\n  if (nodeName) this.nodeName = nodeName\n}\nOuterDecoLevel.prototype = Object.create(null)\n\nconst noDeco = [new OuterDecoLevel]\n\nfunction computeOuterDeco(outerDeco, node, needsWrap) {\n  if (outerDeco.length == 0) return noDeco\n\n  let top = needsWrap ? noDeco[0] : new OuterDecoLevel, result = [top]\n\n  for (let i = 0; i < outerDeco.length; i++) {\n    let attrs = outerDeco[i].type.attrs\n    if (!attrs) continue\n    if (attrs.nodeName)\n      result.push(top = new OuterDecoLevel(attrs.nodeName))\n\n    for (let name in attrs) {\n      let val = attrs[name]\n      if (val == null) continue\n      if (needsWrap && result.length == 1)\n        result.push(top = new OuterDecoLevel(node.isInline ? \"span\" : \"div\"))\n      if (name == \"class\") top.class = (top.class ? top.class + \" \" : \"\") + val\n      else if (name == \"style\") top.style = (top.style ? top.style + \";\" : \"\") + val\n      else if (name != \"nodeName\") top[name] = val\n    }\n  }\n\n  return result\n}\n\nfunction patchOuterDeco(outerDOM, nodeDOM, prevComputed, curComputed) {\n  // Shortcut for trivial case\n  if (prevComputed == noDeco && curComputed == noDeco) return nodeDOM\n\n  let curDOM = nodeDOM\n  for (let i = 0; i < curComputed.length; i++) {\n    let deco = curComputed[i], prev = prevComputed[i]\n    if (i) {\n      let parent\n      if (prev && prev.nodeName == deco.nodeName && curDOM != outerDOM &&\n          (parent = curDOM.parentNode) && parent.tagName.toLowerCase() == deco.nodeName) {\n        curDOM = parent\n      } else {\n        parent = document.createElement(deco.nodeName)\n        parent.pmIsDeco = true\n        parent.appendChild(curDOM)\n        prev = noDeco[0]\n        curDOM = parent\n      }\n    }\n    patchAttributes(curDOM, prev || noDeco[0], deco)\n  }\n  return curDOM\n}\n\nfunction patchAttributes(dom, prev, cur) {\n  for (let name in prev)\n    if (name != \"class\" && name != \"style\" && name != \"nodeName\" && !(name in cur))\n      dom.removeAttribute(name)\n  for (let name in cur)\n    if (name != \"class\" && name != \"style\" && name != \"nodeName\" && cur[name] != prev[name])\n      dom.setAttribute(name, cur[name])\n  if (prev.class != cur.class) {\n    let prevList = prev.class ? prev.class.split(\" \").filter(Boolean) : nothing\n    let curList = cur.class ? cur.class.split(\" \").filter(Boolean) : nothing\n    for (let i = 0; i < prevList.length; i++) if (curList.indexOf(prevList[i]) == -1)\n      dom.classList.remove(prevList[i])\n    for (let i = 0; i < curList.length; i++) if (prevList.indexOf(curList[i]) == -1)\n      dom.classList.add(curList[i])\n  }\n  if (prev.style != cur.style) {\n    if (prev.style) {\n      let prop = /\\s*([\\w\\-\\xa1-\\uffff]+)\\s*:(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\(.*?\\)|[^;])*/g, m\n      while (m = prop.exec(prev.style))\n        dom.style.removeProperty(m[1])\n    }\n    if (cur.style)\n      dom.style.cssText += cur.style\n  }\n}\n\nfunction applyOuterDeco(dom, deco, node) {\n  return patchOuterDeco(dom, dom, noDeco, computeOuterDeco(deco, node, dom.nodeType != 1))\n}\n\n// : ([Decoration], [Decoration]) → bool\nfunction sameOuterDeco(a, b) {\n  if (a.length != b.length) return false\n  for (let i = 0; i < a.length; i++) if (!a[i].type.eq(b[i].type)) return false\n  return true\n}\n\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n  let next = dom.nextSibling\n  dom.parentNode.removeChild(dom)\n  return next\n}\n\n// Helper class for incrementally updating a tree of mark descs and\n// the widget and node descs inside of them.\nclass ViewTreeUpdater {\n  // : (NodeViewDesc)\n  constructor(top, lockedNode) {\n    this.top = top\n    this.lock = lockedNode\n    // Index into `this.top`'s child array, represents the current\n    // update position.\n    this.index = 0\n    // When entering a mark, the current top and index are pushed\n    // onto this.\n    this.stack = []\n    // Tracks whether anything was changed\n    this.changed = false\n\n    this.preMatch = preMatch(top.node.content, top.children)\n  }\n\n  // Destroy and remove the children between the given indices in\n  // `this.top`.\n  destroyBetween(start, end) {\n    if (start == end) return\n    for (let i = start; i < end; i++) this.top.children[i].destroy()\n    this.top.children.splice(start, end - start)\n    this.changed = true\n  }\n\n  // Destroy all remaining children in `this.top`.\n  destroyRest() {\n    this.destroyBetween(this.index, this.top.children.length)\n  }\n\n  // : ([Mark], EditorView)\n  // Sync the current stack of mark descs with the given array of\n  // marks, reusing existing mark descs when possible.\n  syncToMarks(marks, inline, view) {\n    let keep = 0, depth = this.stack.length >> 1\n    let maxKeep = Math.min(depth, marks.length)\n    while (keep < maxKeep &&\n           (keep == depth - 1 ? this.top : this.stack[(keep + 1) << 1]).matchesMark(marks[keep]) && marks[keep].type.spec.spanning !== false)\n      keep++\n\n    while (keep < depth) {\n      this.destroyRest()\n      this.top.dirty = NOT_DIRTY\n      this.index = this.stack.pop()\n      this.top = this.stack.pop()\n      depth--\n    }\n    while (depth < marks.length) {\n      this.stack.push(this.top, this.index + 1)\n      let found = -1\n      for (let i = this.index; i < Math.min(this.index + 3, this.top.children.length); i++) {\n        if (this.top.children[i].matchesMark(marks[depth])) { found = i; break }\n      }\n      if (found > -1) {\n        if (found > this.index) {\n          this.changed = true\n          this.destroyBetween(this.index, found)\n        }\n        this.top = this.top.children[this.index]\n      } else {\n        let markDesc = MarkViewDesc.create(this.top, marks[depth], inline, view)\n        this.top.children.splice(this.index, 0, markDesc)\n        this.top = markDesc\n        this.changed = true\n      }\n      this.index = 0\n      depth++\n    }\n  }\n\n  // : (Node, [Decoration], DecorationSource) → bool\n  // Try to find a node desc matching the given data. Skip over it and\n  // return true when successful.\n  findNodeMatch(node, outerDeco, innerDeco, index) {\n    let children = this.top.children, found = -1\n    if (index >= this.preMatch.index) {\n      for (let i = this.index; i < children.length; i++) if (children[i].matchesNode(node, outerDeco, innerDeco)) {\n        found = i\n        break\n      }\n    } else {\n      for (let i = this.index, e = Math.min(children.length, i + 1); i < e; i++) {\n        let child = children[i]\n        if (child.matchesNode(node, outerDeco, innerDeco) && !this.preMatch.matched.has(child)) {\n          found = i\n          break\n        }\n      }\n    }\n    if (found < 0) return false\n    this.destroyBetween(this.index, found)\n    this.index++\n    return true\n  }\n\n  // : (Node, [Decoration], DecorationSource, EditorView, Fragment, number) → bool\n  // Try to update the next node, if any, to the given data. Checks\n  // pre-matches to avoid overwriting nodes that could still be used.\n  updateNextNode(node, outerDeco, innerDeco, view, index) {\n    for (let i = this.index; i < this.top.children.length; i++) {\n      let next = this.top.children[i]\n      if (next instanceof NodeViewDesc) {\n        let preMatch = this.preMatch.matched.get(next)\n        if (preMatch != null && preMatch != index) return false\n        let nextDOM = next.dom\n\n        // Can't update if nextDOM is or contains this.lock, except if\n        // it's a text node whose content already matches the new text\n        // and whose decorations match the new ones.\n        let locked = this.lock && (nextDOM == this.lock || nextDOM.nodeType == 1 && nextDOM.contains(this.lock.parentNode)) &&\n            !(node.isText && next.node && next.node.isText && next.nodeDOM.nodeValue == node.text &&\n              next.dirty != NODE_DIRTY && sameOuterDeco(outerDeco, next.outerDeco))\n        if (!locked && next.update(node, outerDeco, innerDeco, view)) {\n          this.destroyBetween(this.index, i)\n          if (next.dom != nextDOM) this.changed = true\n          this.index++\n          return true\n        }\n        break\n      }\n    }\n    return false\n  }\n\n  // : (Node, [Decoration], DecorationSource, EditorView)\n  // Insert the node as a newly created node desc.\n  addNode(node, outerDeco, innerDeco, view, pos) {\n    this.top.children.splice(this.index++, 0, NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos))\n    this.changed = true\n  }\n\n  placeWidget(widget, view, pos) {\n    let next = this.index < this.top.children.length ? this.top.children[this.index] : null\n    if (next && next.matchesWidget(widget) && (widget == next.widget || !next.widget.type.toDOM.parentNode)) {\n      this.index++\n    } else {\n      let desc = new WidgetViewDesc(this.top, widget, view, pos)\n      this.top.children.splice(this.index++, 0, desc)\n      this.changed = true\n    }\n  }\n\n  // Make sure a textblock looks and behaves correctly in\n  // contentEditable.\n  addTextblockHacks() {\n    let lastChild = this.top.children[this.index - 1]\n    while (lastChild instanceof MarkViewDesc) lastChild = lastChild.children[lastChild.children.length - 1]\n\n    if (!lastChild || // Empty textblock\n        !(lastChild instanceof TextViewDesc) ||\n        /\\n$/.test(lastChild.node.text)) {\n      if (this.index < this.top.children.length && this.top.children[this.index].matchesHack()) {\n        this.index++\n      } else {\n        let dom = document.createElement(\"br\")\n        this.top.children.splice(this.index++, 0, new BRHackViewDesc(this.top, nothing, dom, null))\n        this.changed = true\n      }\n    }\n  }\n}\n\n// : (Fragment, [ViewDesc]) → {index: number, matched: Map<ViewDesc, number>}\n// Iterate from the end of the fragment and array of descs to find\n// directly matching ones, in order to avoid overeagerly reusing those\n// for other nodes. Returns the fragment index of the first node that\n// is part of the sequence of matched nodes at the end of the\n// fragment.\nfunction preMatch(frag, descs) {\n  let fI = frag.childCount, dI = descs.length, matched = new Map\n  for (; fI > 0 && dI > 0; dI--) {\n    let desc = descs[dI - 1], node = desc.node\n    if (!node) continue\n    if (node != frag.child(fI - 1)) break\n    --fI\n    matched.set(desc, fI)\n  }\n  return {index: fI, matched}\n}\n\nfunction compareSide(a, b) { return a.type.side - b.type.side }\n\n// : (ViewDesc, DecorationSource, (Decoration, number), (Node, [Decoration], DecorationSource, number))\n// This function abstracts iterating over the nodes and decorations in\n// a fragment. Calls `onNode` for each node, with its local and child\n// decorations. Splits text nodes when there is a decoration starting\n// or ending inside of them. Calls `onWidget` for each widget.\nfunction iterDeco(parent, deco, onWidget, onNode) {\n  let locals = deco.locals(parent), offset = 0\n  // Simple, cheap variant for when there are no local decorations\n  if (locals.length == 0) {\n    for (let i = 0; i < parent.childCount; i++) {\n      let child = parent.child(i)\n      onNode(child, locals, deco.forChild(offset, child), i)\n      offset += child.nodeSize\n    }\n    return\n  }\n\n  let decoIndex = 0, active = [], restNode = null\n  for (let parentIndex = 0;;) {\n    if (decoIndex < locals.length && locals[decoIndex].to == offset) {\n      let widget = locals[decoIndex++], widgets\n      while (decoIndex < locals.length && locals[decoIndex].to == offset)\n        (widgets || (widgets = [widget])).push(locals[decoIndex++])\n      if (widgets) {\n        widgets.sort(compareSide)\n        for (let i = 0; i < widgets.length; i++) onWidget(widgets[i], parentIndex, !!restNode)\n      } else {\n        onWidget(widget, parentIndex, !!restNode)\n      }\n    }\n\n    let child, index\n    if (restNode) {\n      index = -1\n      child = restNode\n      restNode = null\n    } else if (parentIndex < parent.childCount) {\n      index = parentIndex\n      child = parent.child(parentIndex++)\n    } else {\n      break\n    }\n\n    for (let i = 0; i < active.length; i++) if (active[i].to <= offset) active.splice(i--, 1)\n    while (decoIndex < locals.length && locals[decoIndex].from <= offset && locals[decoIndex].to > offset)\n      active.push(locals[decoIndex++])\n\n    let end = offset + child.nodeSize\n    if (child.isText) {\n      let cutAt = end\n      if (decoIndex < locals.length && locals[decoIndex].from < cutAt) cutAt = locals[decoIndex].from\n      for (let i = 0; i < active.length; i++) if (active[i].to < cutAt) cutAt = active[i].to\n      if (cutAt < end) {\n        restNode = child.cut(cutAt - offset)\n        child = child.cut(0, cutAt - offset)\n        end = cutAt\n        index = -1\n      }\n    }\n\n    let outerDeco = !active.length ? nothing\n        : child.isInline && !child.isLeaf ? active.filter(d => !d.inline)\n        : active.slice()\n    onNode(child, outerDeco, deco.forChild(offset, child), index)\n    offset = end\n  }\n}\n\n// List markers in Mobile Safari will mysteriously disappear\n// sometimes. This works around that.\nfunction iosHacks(dom) {\n  if (dom.nodeName == \"UL\" || dom.nodeName == \"OL\") {\n    let oldCSS = dom.style.cssText\n    dom.style.cssText = oldCSS + \"; list-style: square !important\"\n    window.getComputedStyle(dom).listStyle\n    dom.style.cssText = oldCSS\n  }\n}\n\nfunction nearbyTextNode(node, offset) {\n  for (;;) {\n    if (node.nodeType == 3) return node\n    if (node.nodeType == 1 && offset > 0) {\n      if (node.childNodes.length > offset && node.childNodes[offset].nodeType == 3)\n        return node.childNodes[offset]\n      node = node.childNodes[offset - 1]\n      offset = nodeSize(node)\n    } else if (node.nodeType == 1 && offset < node.childNodes.length) {\n      node = node.childNodes[offset]\n      offset = 0\n    } else {\n      return null\n    }\n  }\n}\n\n// Find a piece of text in an inline fragment, overlapping from-to\nfunction findTextInFragment(frag, text, from, to) {\n  for (let i = 0, pos = 0; i < frag.childCount && pos <= to;) {\n    let child = frag.child(i++), childStart = pos\n    pos += child.nodeSize\n    if (!child.isText) continue\n    let str = child.text\n    while (i < frag.childCount) {\n      let next = frag.child(i++)\n      pos += next.nodeSize\n      if (!next.isText) break\n      str += next.text\n    }\n    if (pos >= from) {\n      let found = str.lastIndexOf(text, to - childStart)\n      if (found >= 0 && found + text.length + childStart >= from)\n        return childStart + found\n    }\n  }\n  return -1\n}\n\n// Replace range from-to in an array of view descs with replacement\n// (may be null to just delete). This goes very much against the grain\n// of the rest of this code, which tends to create nodes with the\n// right shape in one go, rather than messing with them after\n// creation, but is necessary in the composition hack.\nfunction replaceNodes(nodes, from, to, view, replacement) {\n  let result = []\n  for (let i = 0, off = 0; i < nodes.length; i++) {\n    let child = nodes[i], start = off, end = off += child.size\n    if (start >= to || end <= from) {\n      result.push(child)\n    } else {\n      if (start < from) result.push(child.slice(0, from - start, view))\n      if (replacement) {\n        result.push(replacement)\n        replacement = null\n      }\n      if (end > to) result.push(child.slice(to - start, child.size, view))\n    }\n  }\n  return result\n}\n","import {TextSelection, NodeSelection} from \"prosemirror-state\"\n\nimport browser from \"./browser\"\nimport {selectionCollapsed, isEquivalentPosition, domIndex, isOnEdge} from \"./dom\"\n\nexport function selectionFromDOM(view, origin) {\n  let domSel = view.root.getSelection(), doc = view.state.doc\n  if (!domSel.focusNode) return null\n  let nearestDesc = view.docView.nearestDesc(domSel.focusNode), inWidget = nearestDesc && nearestDesc.size == 0\n  let head = view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset)\n  if (head < 0) return null\n  let $head = doc.resolve(head), $anchor, selection\n  if (selectionCollapsed(domSel)) {\n    $anchor = $head\n    while (nearestDesc && !nearestDesc.node) nearestDesc = nearestDesc.parent\n    if (nearestDesc && nearestDesc.node.isAtom && NodeSelection.isSelectable(nearestDesc.node) && nearestDesc.parent\n        && !(nearestDesc.node.isInline && isOnEdge(domSel.focusNode, domSel.focusOffset, nearestDesc.dom))) {\n      let pos = nearestDesc.posBefore\n      selection = new NodeSelection(head == pos ? $head : doc.resolve(pos))\n    }\n  } else {\n    let anchor = view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset)\n    if (anchor < 0) return null\n    $anchor = doc.resolve(anchor)\n  }\n\n  if (!selection) {\n    let bias = origin == \"pointer\" || (view.state.selection.head < $head.pos && !inWidget) ? 1 : -1\n    selection = selectionBetween(view, $anchor, $head, bias)\n  }\n  return selection\n}\n\nfunction editorOwnsSelection(view) {\n  return view.editable ? view.hasFocus() :\n    hasSelection(view) && document.activeElement && document.activeElement.contains(view.dom)\n}\n\nexport function selectionToDOM(view, force) {\n  let sel = view.state.selection\n  syncNodeSelection(view, sel)\n\n  if (!editorOwnsSelection(view)) return\n\n  view.domObserver.disconnectSelection()\n\n  if (view.cursorWrapper) {\n    selectCursorWrapper(view)\n  } else {\n    let {anchor, head} = sel, resetEditableFrom, resetEditableTo\n    if (brokenSelectBetweenUneditable && !(sel instanceof TextSelection)) {\n      if (!sel.$from.parent.inlineContent)\n        resetEditableFrom = temporarilyEditableNear(view, sel.from)\n      if (!sel.empty && !sel.$from.parent.inlineContent)\n        resetEditableTo = temporarilyEditableNear(view, sel.to)\n    }\n    view.docView.setSelection(anchor, head, view.root, force)\n    if (brokenSelectBetweenUneditable) {\n      if (resetEditableFrom) resetEditable(resetEditableFrom)\n      if (resetEditableTo) resetEditable(resetEditableTo)\n    }\n    if (sel.visible) {\n      view.dom.classList.remove(\"ProseMirror-hideselection\")\n    } else {\n      view.dom.classList.add(\"ProseMirror-hideselection\")\n      if (\"onselectionchange\" in document) removeClassOnSelectionChange(view)\n    }\n  }\n\n  view.domObserver.setCurSelection()\n  view.domObserver.connectSelection()\n}\n\n// Kludge to work around Webkit not allowing a selection to start/end\n// between non-editable block nodes. We briefly make something\n// editable, set the selection, then set it uneditable again.\n\nconst brokenSelectBetweenUneditable = browser.safari || browser.chrome && browser.chrome_version < 63\n\nfunction temporarilyEditableNear(view, pos) {\n  let {node, offset} = view.docView.domFromPos(pos, 0)\n  let after = offset < node.childNodes.length ? node.childNodes[offset] : null\n  let before = offset ? node.childNodes[offset - 1] : null\n  if (browser.safari && after && after.contentEditable == \"false\") return setEditable(after)\n  if ((!after || after.contentEditable == \"false\") && (!before || before.contentEditable == \"false\")) {\n    if (after) return setEditable(after)\n    else if (before) return setEditable(before)\n  }\n}\n\nfunction setEditable(element) {\n  element.contentEditable = \"true\"\n  if (browser.safari && element.draggable) { element.draggable = false; element.wasDraggable = true }\n  return element\n}\n\nfunction resetEditable(element) {\n  element.contentEditable = \"false\"\n  if (element.wasDraggable) { element.draggable = true; element.wasDraggable = null }\n}\n\nfunction removeClassOnSelectionChange(view) {\n  let doc = view.dom.ownerDocument\n  doc.removeEventListener(\"selectionchange\", view.hideSelectionGuard)\n  let domSel = view.root.getSelection()\n  let node = domSel.anchorNode, offset = domSel.anchorOffset\n  doc.addEventListener(\"selectionchange\", view.hideSelectionGuard = () => {\n    if (domSel.anchorNode != node || domSel.anchorOffset != offset) {\n      doc.removeEventListener(\"selectionchange\", view.hideSelectionGuard)\n      setTimeout(() => {\n        if (!editorOwnsSelection(view) || view.state.selection.visible)\n          view.dom.classList.remove(\"ProseMirror-hideselection\")\n      }, 20)\n    }\n  })\n}\n\nfunction selectCursorWrapper(view) {\n  let domSel = view.root.getSelection(), range = document.createRange()\n  let node = view.cursorWrapper.dom, img = node.nodeName == \"IMG\"\n  if (img) range.setEnd(node.parentNode, domIndex(node) + 1)\n  else range.setEnd(node, 0)\n  range.collapse(false)\n  domSel.removeAllRanges()\n  domSel.addRange(range)\n  // Kludge to kill 'control selection' in IE11 when selecting an\n  // invisible cursor wrapper, since that would result in those weird\n  // resize handles and a selection that considers the absolutely\n  // positioned wrapper, rather than the root editable node, the\n  // focused element.\n  if (!img && !view.state.selection.visible && browser.ie && browser.ie_version <= 11) {\n    node.disabled = true\n    node.disabled = false\n  }\n}\n\nexport function syncNodeSelection(view, sel) {\n  if (sel instanceof NodeSelection) {\n    let desc = view.docView.descAt(sel.from)\n    if (desc != view.lastSelectedViewDesc) {\n      clearNodeSelection(view)\n      if (desc) desc.selectNode()\n      view.lastSelectedViewDesc = desc\n    }\n  } else {\n    clearNodeSelection(view)\n  }\n}\n\n// Clear all DOM statefulness of the last node selection.\nfunction clearNodeSelection(view) {\n  if (view.lastSelectedViewDesc) {\n    if (view.lastSelectedViewDesc.parent)\n      view.lastSelectedViewDesc.deselectNode()\n    view.lastSelectedViewDesc = null\n  }\n}\n\nexport function selectionBetween(view, $anchor, $head, bias) {\n  return view.someProp(\"createSelectionBetween\", f => f(view, $anchor, $head))\n    || TextSelection.between($anchor, $head, bias)\n}\n\nexport function hasFocusAndSelection(view) {\n  if (view.editable && view.root.activeElement != view.dom) return false\n  return hasSelection(view)\n}\n\nexport function hasSelection(view) {\n  let sel = view.root.getSelection()\n  if (!sel.anchorNode) return false\n  try {\n    // Firefox will raise 'permission denied' errors when accessing\n    // properties of `sel.anchorNode` when it's in a generated CSS\n    // element.\n    return view.dom.contains(sel.anchorNode.nodeType == 3 ? sel.anchorNode.parentNode : sel.anchorNode) &&\n      (view.editable || view.dom.contains(sel.focusNode.nodeType == 3 ? sel.focusNode.parentNode : sel.focusNode))\n  } catch(_) {\n    return false\n  }\n}\n\nexport function anchorInRightPlace(view) {\n  let anchorDOM = view.docView.domFromPos(view.state.selection.anchor, 0)\n  let domSel = view.root.getSelection()\n  return isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset)\n}\n","import {Selection, NodeSelection, TextSelection, AllSelection} from \"prosemirror-state\"\nimport browser from \"./browser\"\nimport {domIndex, selectionCollapsed} from \"./dom\"\nimport {selectionToDOM} from \"./selection\"\n\nfunction moveSelectionBlock(state, dir) {\n  let {$anchor, $head} = state.selection\n  let $side = dir > 0 ? $anchor.max($head) : $anchor.min($head)\n  let $start = !$side.parent.inlineContent ? $side : $side.depth ? state.doc.resolve(dir > 0 ? $side.after() : $side.before()) : null\n  return $start && Selection.findFrom($start, dir)\n}\n\nfunction apply(view, sel) {\n  view.dispatch(view.state.tr.setSelection(sel).scrollIntoView())\n  return true\n}\n\nfunction selectHorizontally(view, dir, mods) {\n  let sel = view.state.selection\n  if (sel instanceof TextSelection) {\n    if (!sel.empty || mods.indexOf(\"s\") > -1) {\n      return false\n    } else if (view.endOfTextblock(dir > 0 ? \"right\" : \"left\")) {\n      let next = moveSelectionBlock(view.state, dir)\n      if (next && (next instanceof NodeSelection)) return apply(view, next)\n      return false\n    } else if (!(browser.mac && mods.indexOf(\"m\") > -1)) {\n      let $head = sel.$head, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter, desc\n      if (!node || node.isText) return false\n      let nodePos = dir < 0 ? $head.pos - node.nodeSize : $head.pos\n      if (!(node.isAtom || (desc = view.docView.descAt(nodePos)) && !desc.contentDOM)) return false\n      if (NodeSelection.isSelectable(node)) {\n        return apply(view, new NodeSelection(dir < 0 ? view.state.doc.resolve($head.pos - node.nodeSize) : $head))\n      } else if (browser.webkit) {\n        // Chrome and Safari will introduce extra pointless cursor\n        // positions around inline uneditable nodes, so we have to\n        // take over and move the cursor past them (#937)\n        return apply(view, new TextSelection(view.state.doc.resolve(dir < 0 ? nodePos : nodePos + node.nodeSize)))\n      } else {\n        return false\n      }\n    }\n  } else if (sel instanceof NodeSelection && sel.node.isInline) {\n    return apply(view, new TextSelection(dir > 0 ? sel.$to : sel.$from))\n  } else {\n    let next = moveSelectionBlock(view.state, dir)\n    if (next) return apply(view, next)\n    return false\n  }\n}\n\nfunction nodeLen(node) {\n  return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length\n}\n\nfunction isIgnorable(dom) {\n  let desc = dom.pmViewDesc\n  return desc && desc.size == 0 && (dom.nextSibling || dom.nodeName != \"BR\")\n}\n\n// Make sure the cursor isn't directly after one or more ignored\n// nodes, which will confuse the browser's cursor motion logic.\nfunction skipIgnoredNodesLeft(view) {\n  let sel = view.root.getSelection()\n  let node = sel.focusNode, offset = sel.focusOffset\n  if (!node) return\n  let moveNode, moveOffset, force = false\n  // Gecko will do odd things when the selection is directly in front\n  // of a non-editable node, so in that case, move it into the next\n  // node if possible. Issue prosemirror/prosemirror#832.\n  if (browser.gecko && node.nodeType == 1 && offset < nodeLen(node) && isIgnorable(node.childNodes[offset])) force = true\n  for (;;) {\n    if (offset > 0) {\n      if (node.nodeType != 1) {\n        break\n      } else {\n        let before = node.childNodes[offset - 1]\n        if (isIgnorable(before)) {\n          moveNode = node\n          moveOffset = --offset\n        } else if (before.nodeType == 3) {\n          node = before\n          offset = node.nodeValue.length\n        } else break\n      }\n    } else if (isBlockNode(node)) {\n      break\n    } else {\n      let prev = node.previousSibling\n      while (prev && isIgnorable(prev)) {\n        moveNode = node.parentNode\n        moveOffset = domIndex(prev)\n        prev = prev.previousSibling\n      }\n      if (!prev) {\n        node = node.parentNode\n        if (node == view.dom) break\n        offset = 0\n      } else {\n        node = prev\n        offset = nodeLen(node)\n      }\n    }\n  }\n  if (force) setSelFocus(view, sel, node, offset)\n  else if (moveNode) setSelFocus(view, sel, moveNode, moveOffset)\n}\n\n// Make sure the cursor isn't directly before one or more ignored\n// nodes.\nfunction skipIgnoredNodesRight(view) {\n  let sel = view.root.getSelection()\n  let node = sel.focusNode, offset = sel.focusOffset\n  if (!node) return\n  let len = nodeLen(node)\n  let moveNode, moveOffset\n  for (;;) {\n    if (offset < len) {\n      if (node.nodeType != 1) break\n      let after = node.childNodes[offset]\n      if (isIgnorable(after)) {\n        moveNode = node\n        moveOffset = ++offset\n      }\n      else break\n    } else if (isBlockNode(node)) {\n      break\n    } else {\n      let next = node.nextSibling\n      while (next && isIgnorable(next)) {\n        moveNode = next.parentNode\n        moveOffset = domIndex(next) + 1\n        next = next.nextSibling\n      }\n      if (!next) {\n        node = node.parentNode\n        if (node == view.dom) break\n        offset = len = 0\n      } else {\n        node = next\n        offset = 0\n        len = nodeLen(node)\n      }\n    }\n  }\n  if (moveNode) setSelFocus(view, sel, moveNode, moveOffset)\n}\n\nfunction isBlockNode(dom) {\n  let desc = dom.pmViewDesc\n  return desc && desc.node && desc.node.isBlock\n}\n\nfunction setSelFocus(view, sel, node, offset) {\n  if (selectionCollapsed(sel)) {\n    let range = document.createRange()\n    range.setEnd(node, offset)\n    range.setStart(node, offset)\n    sel.removeAllRanges()\n    sel.addRange(range)\n  } else if (sel.extend) {\n    sel.extend(node, offset)\n  }\n  view.domObserver.setCurSelection()\n  let {state} = view\n  // If no state update ends up happening, reset the selection.\n  setTimeout(() => {\n    if (view.state == state) selectionToDOM(view)\n  }, 50)\n}\n\n// : (EditorState, number)\n// Check whether vertical selection motion would involve node\n// selections. If so, apply it (if not, the result is left to the\n// browser)\nfunction selectVertically(view, dir, mods) {\n  let sel = view.state.selection\n  if (sel instanceof TextSelection && !sel.empty || mods.indexOf(\"s\") > -1) return false\n  if (browser.mac && mods.indexOf(\"m\") > -1) return false\n  let {$from, $to} = sel\n\n  if (!$from.parent.inlineContent || view.endOfTextblock(dir < 0 ? \"up\" : \"down\")) {\n    let next = moveSelectionBlock(view.state, dir)\n    if (next && (next instanceof NodeSelection))\n      return apply(view, next)\n  }\n  if (!$from.parent.inlineContent) {\n    let side = dir < 0 ? $from : $to\n    let beyond = sel instanceof AllSelection ? Selection.near(side, dir) : Selection.findFrom(side, dir)\n    return beyond ? apply(view, beyond) : false\n  }\n  return false\n}\n\nfunction stopNativeHorizontalDelete(view, dir) {\n  if (!(view.state.selection instanceof TextSelection)) return true\n  let {$head, $anchor, empty} = view.state.selection\n  if (!$head.sameParent($anchor)) return true\n  if (!empty) return false\n  if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\")) return true\n  let nextNode = !$head.textOffset && (dir < 0 ? $head.nodeBefore : $head.nodeAfter)\n  if (nextNode && !nextNode.isText) {\n    let tr = view.state.tr\n    if (dir < 0) tr.delete($head.pos - nextNode.nodeSize, $head.pos)\n    else tr.delete($head.pos, $head.pos + nextNode.nodeSize)\n    view.dispatch(tr)\n    return true\n  }\n  return false\n}\n\nfunction switchEditable(view, node, state) {\n  view.domObserver.stop()\n  node.contentEditable = state\n  view.domObserver.start()\n}\n\n// Issue #867 / #1090 / https://bugs.chromium.org/p/chromium/issues/detail?id=903821\n// In which Safari (and at some point in the past, Chrome) does really\n// wrong things when the down arrow is pressed when the cursor is\n// directly at the start of a textblock and has an uneditable node\n// after it\nfunction safariDownArrowBug(view) {\n  if (!browser.safari || view.state.selection.$head.parentOffset > 0) return\n  let {focusNode, focusOffset} = view.root.getSelection()\n  if (focusNode && focusNode.nodeType == 1 && focusOffset == 0 &&\n      focusNode.firstChild && focusNode.firstChild.contentEditable == \"false\") {\n    let child = focusNode.firstChild\n    switchEditable(view, child, true)\n    setTimeout(() => switchEditable(view, child, false), 20)\n  }\n}\n\n// A backdrop key mapping used to make sure we always suppress keys\n// that have a dangerous default effect, even if the commands they are\n// bound to return false, and to make sure that cursor-motion keys\n// find a cursor (as opposed to a node selection) when pressed. For\n// cursor-motion keys, the code in the handlers also takes care of\n// block selections.\n\nfunction getMods(event) {\n  let result = \"\"\n  if (event.ctrlKey) result += \"c\"\n  if (event.metaKey) result += \"m\"\n  if (event.altKey) result += \"a\"\n  if (event.shiftKey) result += \"s\"\n  return result\n}\n\nexport function captureKeyDown(view, event) {\n  let code = event.keyCode, mods = getMods(event)\n  if (code == 8 || (browser.mac && code == 72 && mods == \"c\")) { // Backspace, Ctrl-h on Mac\n    return stopNativeHorizontalDelete(view, -1) || skipIgnoredNodesLeft(view)\n  } else if (code == 46 || (browser.mac && code == 68 && mods == \"c\")) { // Delete, Ctrl-d on Mac\n    return stopNativeHorizontalDelete(view, 1) || skipIgnoredNodesRight(view)\n  } else if (code == 13 || code == 27) { // Enter, Esc\n    return true\n  } else if (code == 37) { // Left arrow\n    return selectHorizontally(view, -1, mods) || skipIgnoredNodesLeft(view)\n  } else if (code == 39) { // Right arrow\n    return selectHorizontally(view, 1, mods) || skipIgnoredNodesRight(view)\n  } else if (code == 38) { // Up arrow\n    return selectVertically(view, -1, mods) || skipIgnoredNodesLeft(view)\n  } else if (code == 40) { // Down arrow\n    return safariDownArrowBug(view) || selectVertically(view, 1, mods) || skipIgnoredNodesRight(view)\n  } else if (mods == (browser.mac ? \"m\" : \"c\") &&\n             (code == 66 || code == 73 || code == 89 || code == 90)) { // Mod-[biyz]\n    return true\n  }\n  return false\n}\n","import {Fragment, DOMParser} from \"prosemirror-model\"\nimport {Selection, TextSelection} from \"prosemirror-state\"\n\nimport {selectionBetween, selectionFromDOM, selectionToDOM} from \"./selection\"\nimport {selectionCollapsed, keyEvent} from \"./dom\"\nimport browser from \"./browser\"\n\n// Note that all referencing and parsing is done with the\n// start-of-operation selection and document, since that's the one\n// that the DOM represents. If any changes came in in the meantime,\n// the modification is mapped over those before it is applied, in\n// readDOMChange.\n\nfunction parseBetween(view, from_, to_) {\n  let {node: parent, fromOffset, toOffset, from, to} = view.docView.parseRange(from_, to_)\n\n  let domSel = view.root.getSelection(), find = null, anchor = domSel.anchorNode\n  if (anchor && view.dom.contains(anchor.nodeType == 1 ? anchor : anchor.parentNode)) {\n    find = [{node: anchor, offset: domSel.anchorOffset}]\n    if (!selectionCollapsed(domSel))\n      find.push({node: domSel.focusNode, offset: domSel.focusOffset})\n  }\n  // Work around issue in Chrome where backspacing sometimes replaces\n  // the deleted content with a random BR node (issues #799, #831)\n  if (browser.chrome && view.lastKeyCode === 8) {\n    for (let off = toOffset; off > fromOffset; off--) {\n      let node = parent.childNodes[off - 1], desc = node.pmViewDesc\n      if (node.nodeType == \"BR\" && !desc) { toOffset = off; break }\n      if (!desc || desc.size) break\n    }\n  }\n  let startDoc = view.state.doc\n  let parser = view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema)\n  let $from = startDoc.resolve(from)\n\n  let sel = null, doc = parser.parse(parent, {\n    topNode: $from.parent,\n    topMatch: $from.parent.contentMatchAt($from.index()),\n    topOpen: true,\n    from: fromOffset,\n    to: toOffset,\n    preserveWhitespace: $from.parent.type.spec.code ? \"full\" : true,\n    editableContent: true,\n    findPositions: find,\n    ruleFromNode,\n    context: $from\n  })\n  if (find && find[0].pos != null) {\n    let anchor = find[0].pos, head = find[1] && find[1].pos\n    if (head == null) head = anchor\n    sel = {anchor: anchor + from, head: head + from}\n  }\n  return {doc, sel, from, to}\n}\n\nfunction ruleFromNode(dom) {\n  let desc = dom.pmViewDesc\n  if (desc) {\n    return desc.parseRule()\n  } else if (dom.nodeName == \"BR\" && dom.parentNode) {\n    // Safari replaces the list item or table cell with a BR\n    // directly in the list node (?!) if you delete the last\n    // character in a list item or table cell (#708, #862)\n    if (browser.safari && /^(ul|ol)$/i.test(dom.parentNode.nodeName)) {\n      let skip = document.createElement(\"div\")\n      skip.appendChild(document.createElement(\"li\"))\n      return {skip}\n    } else if (dom.parentNode.lastChild == dom || browser.safari && /^(tr|table)$/i.test(dom.parentNode.nodeName)) {\n      return {ignore: true}\n    }\n  } else if (dom.nodeName == \"IMG\" && dom.getAttribute(\"mark-placeholder\")) {\n    return {ignore: true}\n  }\n}\n\nexport function readDOMChange(view, from, to, typeOver, addedNodes) {\n  if (from < 0) {\n    let origin = view.lastSelectionTime > Date.now() - 50 ? view.lastSelectionOrigin : null\n    let newSel = selectionFromDOM(view, origin)\n    if (newSel && !view.state.selection.eq(newSel)) {\n      let tr = view.state.tr.setSelection(newSel)\n      if (origin == \"pointer\") tr.setMeta(\"pointer\", true)\n      else if (origin == \"key\") tr.scrollIntoView()\n      view.dispatch(tr)\n    }\n    return\n  }\n\n  let $before = view.state.doc.resolve(from)\n  let shared = $before.sharedDepth(to)\n  from = $before.before(shared + 1)\n  to = view.state.doc.resolve(to).after(shared + 1)\n\n  let sel = view.state.selection\n  let parse = parseBetween(view, from, to)\n  // Chrome sometimes leaves the cursor before the inserted text when\n  // composing after a cursor wrapper. This moves it forward.\n  if (browser.chrome && view.cursorWrapper && parse.sel && parse.sel.anchor == view.cursorWrapper.deco.from) {\n    let text = view.cursorWrapper.deco.type.toDOM.nextSibling\n    let size = text && text.nodeValue ? text.nodeValue.length : 1\n    parse.sel = {anchor: parse.sel.anchor + size, head: parse.sel.anchor + size}\n  }\n\n  let doc = view.state.doc, compare = doc.slice(parse.from, parse.to)\n  let preferredPos, preferredSide\n  // Prefer anchoring to end when Backspace is pressed\n  if (view.lastKeyCode === 8 && Date.now() - 100 < view.lastKeyCodeTime) {\n    preferredPos = view.state.selection.to\n    preferredSide = \"end\"\n  } else {\n    preferredPos = view.state.selection.from\n    preferredSide = \"start\"\n  }\n  view.lastKeyCode = null\n\n  let change = findDiff(compare.content, parse.doc.content, parse.from, preferredPos, preferredSide)\n  if (!change) {\n    if (typeOver && sel instanceof TextSelection && !sel.empty && sel.$head.sameParent(sel.$anchor) &&\n        !view.composing && !(parse.sel && parse.sel.anchor != parse.sel.head)) {\n      change = {start: sel.from, endA: sel.to, endB: sel.to}\n    } else if (browser.ios && view.lastIOSEnter > Date.now() - 225 &&\n               addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\") &&\n               view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n      view.lastIOSEnter = 0\n      return\n    } else {\n      if (parse.sel) {\n        let sel = resolveSelection(view, view.state.doc, parse.sel)\n        if (sel && !sel.eq(view.state.selection)) view.dispatch(view.state.tr.setSelection(sel))\n      }\n      return\n    }\n  }\n  view.domChangeCount++\n  // Handle the case where overwriting a selection by typing matches\n  // the start or end of the selected content, creating a change\n  // that's smaller than what was actually overwritten.\n  if (view.state.selection.from < view.state.selection.to &&\n      change.start == change.endB &&\n      view.state.selection instanceof TextSelection) {\n    if (change.start > view.state.selection.from && change.start <= view.state.selection.from + 2) {\n      change.start = view.state.selection.from\n    } else if (change.endA < view.state.selection.to && change.endA >= view.state.selection.to - 2) {\n      change.endB += (view.state.selection.to - change.endA)\n      change.endA = view.state.selection.to\n    }\n  }\n\n  // IE11 will insert a non-breaking space _ahead_ of the space after\n  // the cursor space when adding a space before another space. When\n  // that happened, adjust the change to cover the space instead.\n  if (browser.ie && browser.ie_version <= 11 && change.endB == change.start + 1 &&\n      change.endA == change.start && change.start > parse.from &&\n      parse.doc.textBetween(change.start - parse.from - 1, change.start - parse.from + 1) == \" \\u00a0\") {\n    change.start--\n    change.endA--\n    change.endB--\n  }\n\n  let $from = parse.doc.resolveNoCache(change.start - parse.from)\n  let $to = parse.doc.resolveNoCache(change.endB - parse.from)\n  let inlineChange = $from.sameParent($to) && $from.parent.inlineContent\n  let nextSel\n  // If this looks like the effect of pressing Enter (or was recorded\n  // as being an iOS enter press), just dispatch an Enter key instead.\n  if (((browser.ios && view.lastIOSEnter > Date.now() - 225 &&\n        (!inlineChange || addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\"))) ||\n       (!inlineChange && $from.pos < parse.doc.content.size &&\n        (nextSel = Selection.findFrom(parse.doc.resolve($from.pos + 1), 1, true)) &&\n        nextSel.head == $to.pos)) &&\n      view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n    view.lastIOSEnter = 0\n    return\n  }\n  // Same for backspace\n  if (view.state.selection.anchor > change.start &&\n      looksLikeJoin(doc, change.start, change.endA, $from, $to) &&\n      view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) {\n    if (browser.android && browser.chrome) view.domObserver.suppressSelectionUpdates() // #820\n    return\n  }\n\n  // This tries to detect Android virtual keyboard\n  // enter-and-pick-suggestion action. That sometimes (see issue\n  // #1059) first fires a DOM mutation, before moving the selection to\n  // the newly created block. And then, because ProseMirror cleans up\n  // the DOM selection, it gives up moving the selection entirely,\n  // leaving the cursor in the wrong place. When that happens, we drop\n  // the new paragraph from the initial change, and fire a simulated\n  // enter key afterwards.\n  if (browser.android && !inlineChange && $from.start() != $to.start() && $to.parentOffset == 0 && $from.depth == $to.depth &&\n      parse.sel && parse.sel.anchor == parse.sel.head && parse.sel.head == change.endA) {\n    change.endB -= 2\n    $to = parse.doc.resolveNoCache(change.endB - parse.from)\n    setTimeout(() => {\n      view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); })\n    }, 20)\n  }\n\n  let chFrom = change.start, chTo = change.endA\n\n  let tr, storedMarks, markChange, $from1\n  if (inlineChange) {\n    if ($from.pos == $to.pos) { // Deletion\n      // IE11 sometimes weirdly moves the DOM selection around after\n      // backspacing out the first element in a textblock\n      if (browser.ie && browser.ie_version <= 11 && $from.parentOffset == 0) {\n        view.domObserver.suppressSelectionUpdates()\n        setTimeout(() => selectionToDOM(view), 20)\n      }\n      tr = view.state.tr.delete(chFrom, chTo)\n      storedMarks = doc.resolve(change.start).marksAcross(doc.resolve(change.endA))\n    } else if ( // Adding or removing a mark\n      change.endA == change.endB && ($from1 = doc.resolve(change.start)) &&\n      (markChange = isMarkChange($from.parent.content.cut($from.parentOffset, $to.parentOffset),\n                                 $from1.parent.content.cut($from1.parentOffset, change.endA - $from1.start())))\n    ) {\n      tr = view.state.tr\n      if (markChange.type == \"add\") tr.addMark(chFrom, chTo, markChange.mark)\n      else tr.removeMark(chFrom, chTo, markChange.mark)\n    } else if ($from.parent.child($from.index()).isText && $from.index() == $to.index() - ($to.textOffset ? 0 : 1)) {\n      // Both positions in the same text node -- simply insert text\n      let text = $from.parent.textBetween($from.parentOffset, $to.parentOffset)\n      if (view.someProp(\"handleTextInput\", f => f(view, chFrom, chTo, text))) return\n      tr = view.state.tr.insertText(text, chFrom, chTo)\n    }\n  }\n\n  if (!tr)\n    tr = view.state.tr.replace(chFrom, chTo, parse.doc.slice(change.start - parse.from, change.endB - parse.from))\n  if (parse.sel) {\n    let sel = resolveSelection(view, tr.doc, parse.sel)\n    // Chrome Android will sometimes, during composition, report the\n    // selection in the wrong place. If it looks like that is\n    // happening, don't update the selection.\n    // Edge just doesn't move the cursor forward when you start typing\n    // in an empty block or between br nodes.\n    if (sel && !(browser.chrome && browser.android && view.composing && sel.empty &&\n                   (sel.head == chFrom || sel.head == tr.mapping.map(chTo) - 1) ||\n                 browser.ie && sel.empty && sel.head == chFrom))\n      tr.setSelection(sel)\n  }\n  if (storedMarks) tr.ensureMarks(storedMarks)\n  view.dispatch(tr.scrollIntoView())\n}\n\nfunction resolveSelection(view, doc, parsedSel) {\n  if (Math.max(parsedSel.anchor, parsedSel.head) > doc.content.size) return null\n  return selectionBetween(view, doc.resolve(parsedSel.anchor), doc.resolve(parsedSel.head))\n}\n\n// : (Fragment, Fragment) → ?{mark: Mark, type: string}\n// Given two same-length, non-empty fragments of inline content,\n// determine whether the first could be created from the second by\n// removing or adding a single mark type.\nfunction isMarkChange(cur, prev) {\n  let curMarks = cur.firstChild.marks, prevMarks = prev.firstChild.marks\n  let added = curMarks, removed = prevMarks, type, mark, update\n  for (let i = 0; i < prevMarks.length; i++) added = prevMarks[i].removeFromSet(added)\n  for (let i = 0; i < curMarks.length; i++) removed = curMarks[i].removeFromSet(removed)\n  if (added.length == 1 && removed.length == 0) {\n    mark = added[0]\n    type = \"add\"\n    update = node => node.mark(mark.addToSet(node.marks))\n  } else if (added.length == 0 && removed.length == 1) {\n    mark = removed[0]\n    type = \"remove\"\n    update = node => node.mark(mark.removeFromSet(node.marks))\n  } else {\n    return null\n  }\n  let updated = []\n  for (let i = 0; i < prev.childCount; i++) updated.push(update(prev.child(i)))\n  if (Fragment.from(updated).eq(cur)) return {mark, type}\n}\n\nfunction looksLikeJoin(old, start, end, $newStart, $newEnd) {\n  if (!$newStart.parent.isTextblock ||\n      // The content must have shrunk\n      end - start <= $newEnd.pos - $newStart.pos ||\n      // newEnd must point directly at or after the end of the block that newStart points into\n      skipClosingAndOpening($newStart, true, false) < $newEnd.pos)\n    return false\n\n  let $start = old.resolve(start)\n  // Start must be at the end of a block\n  if ($start.parentOffset < $start.parent.content.size || !$start.parent.isTextblock)\n    return false\n  let $next = old.resolve(skipClosingAndOpening($start, true, true))\n  // The next textblock must start before end and end near it\n  if (!$next.parent.isTextblock || $next.pos > end ||\n      skipClosingAndOpening($next, true, false) < end)\n    return false\n\n  // The fragments after the join point must match\n  return $newStart.parent.content.cut($newStart.parentOffset).eq($next.parent.content)\n}\n\nfunction skipClosingAndOpening($pos, fromEnd, mayOpen) {\n  let depth = $pos.depth, end = fromEnd ? $pos.end() : $pos.pos\n  while (depth > 0 && (fromEnd || $pos.indexAfter(depth) == $pos.node(depth).childCount)) {\n    depth--\n    end++\n    fromEnd = false\n  }\n  if (mayOpen) {\n    let next = $pos.node(depth).maybeChild($pos.indexAfter(depth))\n    while (next && !next.isLeaf) {\n      next = next.firstChild\n      end++\n    }\n  }\n  return end\n}\n\nfunction findDiff(a, b, pos, preferredPos, preferredSide) {\n  let start = a.findDiffStart(b, pos)\n  if (start == null) return null\n  let {a: endA, b: endB} = a.findDiffEnd(b, pos + a.size, pos + b.size)\n  if (preferredSide == \"end\") {\n    let adjust = Math.max(0, start - Math.min(endA, endB))\n    preferredPos -= endA + adjust - start\n  }\n  if (endA < start && a.size < b.size) {\n    let move = preferredPos <= start && preferredPos >= endA ? start - preferredPos : 0\n    start -= move\n    endB = start + (endB - endA)\n    endA = start\n  } else if (endB < start) {\n    let move = preferredPos <= start && preferredPos >= endB ? start - preferredPos : 0\n    start -= move\n    endA = start + (endA - endB)\n    endB = start\n  }\n  return {start, endA, endB}\n}\n","import {Slice, Fragment, DOMParser, DOMSerializer} from \"prosemirror-model\"\n\nexport function serializeForClipboard(view, slice) {\n  let context = [], {content, openStart, openEnd} = slice\n  while (openStart > 1 && openEnd > 1 && content.childCount == 1 && content.firstChild.childCount == 1) {\n    openStart--\n    openEnd--\n    let node = content.firstChild\n    context.push(node.type.name, node.attrs != node.type.defaultAttrs ? node.attrs : null)\n    content = node.content\n  }\n\n  let serializer = view.someProp(\"clipboardSerializer\") || DOMSerializer.fromSchema(view.state.schema)\n  let doc = detachedDoc(), wrap = doc.createElement(\"div\")\n  wrap.appendChild(serializer.serializeFragment(content, {document: doc}))\n\n  let firstChild = wrap.firstChild, needsWrap\n  while (firstChild && firstChild.nodeType == 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n    for (let i = needsWrap.length - 1; i >= 0; i--) {\n      let wrapper = doc.createElement(needsWrap[i])\n      while (wrap.firstChild) wrapper.appendChild(wrap.firstChild)\n      wrap.appendChild(wrapper)\n    }\n    firstChild = wrap.firstChild\n  }\n\n  if (firstChild && firstChild.nodeType == 1)\n    firstChild.setAttribute(\"data-pm-slice\", `${openStart} ${openEnd} ${JSON.stringify(context)}`)\n\n  let text = view.someProp(\"clipboardTextSerializer\", f => f(slice)) ||\n      slice.content.textBetween(0, slice.content.size, \"\\n\\n\")\n\n  return {dom: wrap, text}\n}\n\n// : (EditorView, string, string, ?bool, ResolvedPos) → ?Slice\n// Read a slice of content from the clipboard (or drop data).\nexport function parseFromClipboard(view, text, html, plainText, $context) {\n  let dom, inCode = $context.parent.type.spec.code, slice\n  if (!html && !text) return null\n  let asText = text && (plainText || inCode || !html)\n  if (asText) {\n    view.someProp(\"transformPastedText\", f => { text = f(text, inCode || plainText) })\n    if (inCode) return new Slice(Fragment.from(view.state.schema.text(text.replace(/\\r\\n?/g, \"\\n\"))), 0, 0)\n    let parsed = view.someProp(\"clipboardTextParser\", f => f(text, $context, plainText))\n    if (parsed) {\n      slice = parsed\n    } else {\n      dom = document.createElement(\"div\")\n      text.trim().split(/(?:\\r\\n?|\\n)+/).forEach(block => {\n        dom.appendChild(document.createElement(\"p\")).textContent = block\n      })\n    }\n  } else {\n    view.someProp(\"transformPastedHTML\", f => { html = f(html) })\n    dom = readHTML(html)\n  }\n\n  let contextNode = dom && dom.querySelector(\"[data-pm-slice]\")\n  let sliceData = contextNode && /^(\\d+) (\\d+) (.*)/.exec(contextNode.getAttribute(\"data-pm-slice\"))\n  if (!slice) {\n    let parser = view.someProp(\"clipboardParser\") || view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema)\n    slice = parser.parseSlice(dom, {preserveWhitespace: !!(asText || sliceData), context: $context})\n  }\n  if (sliceData)\n    slice = addContext(closeSlice(slice, +sliceData[1], +sliceData[2]), sliceData[3])\n  else // HTML wasn't created by ProseMirror. Make sure top-level siblings are coherent\n    slice = Slice.maxOpen(normalizeSiblings(slice.content, $context), false)\n\n  view.someProp(\"transformPasted\", f => { slice = f(slice) })\n  return slice\n}\n\n// Takes a slice parsed with parseSlice, which means there hasn't been\n// any content-expression checking done on the top nodes, tries to\n// find a parent node in the current context that might fit the nodes,\n// and if successful, rebuilds the slice so that it fits into that parent.\n//\n// This addresses the problem that Transform.replace expects a\n// coherent slice, and will fail to place a set of siblings that don't\n// fit anywhere in the schema.\nfunction normalizeSiblings(fragment, $context) {\n  if (fragment.childCount < 2) return fragment\n  for (let d = $context.depth; d >= 0; d--) {\n    let parent = $context.node(d)\n    let match = parent.contentMatchAt($context.index(d))\n    let lastWrap, result = []\n    fragment.forEach(node => {\n      if (!result) return\n      let wrap = match.findWrapping(node.type), inLast\n      if (!wrap) return result = null\n      if (inLast = result.length && lastWrap.length && addToSibling(wrap, lastWrap, node, result[result.length - 1], 0)) {\n        result[result.length - 1] = inLast\n      } else {\n        if (result.length) result[result.length - 1] = closeRight(result[result.length - 1], lastWrap.length)\n        let wrapped = withWrappers(node, wrap)\n        result.push(wrapped)\n        match = match.matchType(wrapped.type, wrapped.attrs)\n        lastWrap = wrap\n      }\n    })\n    if (result) return Fragment.from(result)\n  }\n  return fragment\n}\n\nfunction withWrappers(node, wrap, from = 0) {\n  for (let i = wrap.length - 1; i >= from; i--)\n    node = wrap[i].create(null, Fragment.from(node))\n  return node\n}\n\n// Used to group adjacent nodes wrapped in similar parents by\n// normalizeSiblings into the same parent node\nfunction addToSibling(wrap, lastWrap, node, sibling, depth) {\n  if (depth < wrap.length && depth < lastWrap.length && wrap[depth] == lastWrap[depth]) {\n    let inner = addToSibling(wrap, lastWrap, node, sibling.lastChild, depth + 1)\n    if (inner) return sibling.copy(sibling.content.replaceChild(sibling.childCount - 1, inner))\n    let match = sibling.contentMatchAt(sibling.childCount)\n    if (match.matchType(depth == wrap.length - 1 ? node.type : wrap[depth + 1]))\n      return sibling.copy(sibling.content.append(Fragment.from(withWrappers(node, wrap, depth + 1))))\n  }\n}\n\nfunction closeRight(node, depth) {\n  if (depth == 0) return node\n  let fragment = node.content.replaceChild(node.childCount - 1, closeRight(node.lastChild, depth - 1))\n  let fill = node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true)\n  return node.copy(fragment.append(fill))\n}\n\nfunction closeRange(fragment, side, from, to, depth, openEnd) {\n  let node = side < 0 ? fragment.firstChild : fragment.lastChild, inner = node.content\n  if (depth < to - 1) inner = closeRange(inner, side, from, to, depth + 1, openEnd)\n  if (depth >= from)\n    inner = side < 0 ? node.contentMatchAt(0).fillBefore(inner, fragment.childCount > 1 || openEnd <= depth).append(inner)\n      : inner.append(node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true))\n  return fragment.replaceChild(side < 0 ? 0 : fragment.childCount - 1, node.copy(inner))\n}\n\nfunction closeSlice(slice, openStart, openEnd) {\n  if (openStart < slice.openStart)\n    slice = new Slice(closeRange(slice.content, -1, openStart, slice.openStart, 0, slice.openEnd), openStart, slice.openEnd)\n  if (openEnd < slice.openEnd)\n    slice = new Slice(closeRange(slice.content, 1, openEnd, slice.openEnd, 0, 0), slice.openStart, openEnd)\n  return slice\n}\n\n// Trick from jQuery -- some elements must be wrapped in other\n// elements for innerHTML to work. I.e. if you do `div.innerHTML =\n// \"<td>..</td>\"` the table cells are ignored.\nconst wrapMap = {\n  thead: [\"table\"],\n  tbody: [\"table\"],\n  tfoot: [\"table\"],\n  caption: [\"table\"],\n  colgroup: [\"table\"],\n  col: [\"table\", \"colgroup\"],\n  tr: [\"table\", \"tbody\"],\n  td: [\"table\", \"tbody\", \"tr\"],\n  th: [\"table\", \"tbody\", \"tr\"]\n}\n\nlet _detachedDoc = null\nfunction detachedDoc() {\n  return _detachedDoc || (_detachedDoc = document.implementation.createHTMLDocument(\"title\"))\n}\n\nfunction readHTML(html) {\n  let metas = /(\\s*<meta [^>]*>)*/.exec(html)\n  if (metas) html = html.slice(metas[0].length)\n  let elt = detachedDoc().createElement(\"div\")\n  let firstTag = /(?:<meta [^>]*>)*<([a-z][^>\\s]+)/i.exec(html), wrap, depth = 0\n  if (wrap = firstTag && wrapMap[firstTag[1].toLowerCase()]) {\n    html = wrap.map(n => \"<\" + n + \">\").join(\"\") + html + wrap.map(n => \"</\" + n + \">\").reverse().join(\"\")\n    depth = wrap.length\n  }\n  elt.innerHTML = html\n  for (let i = 0; i < depth; i++) elt = elt.firstChild\n  return elt\n}\n\nfunction addContext(slice, context) {\n  if (!slice.size) return slice\n  let schema = slice.content.firstChild.type.schema, array\n  try { array = JSON.parse(context) }\n  catch(e) { return slice }\n  let {content, openStart, openEnd} = slice\n  for (let i = array.length - 2; i >= 0; i -= 2) {\n    let type = schema.nodes[array[i]]\n    if (!type || type.hasRequiredAttrs()) break\n    content = Fragment.from(type.create(array[i + 1], content))\n    openStart++; openEnd++\n  }\n  return new Slice(content, openStart, openEnd)\n}\n","import browser from \"./browser\"\nimport {domIndex, isEquivalentPosition} from \"./dom\"\nimport {hasFocusAndSelection, hasSelection, selectionToDOM} from \"./selection\"\n\nconst observeOptions = {\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  attributes: true,\n  attributeOldValue: true,\n  subtree: true\n}\n// IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\nconst useCharData = browser.ie && browser.ie_version <= 11\n\nclass SelectionState {\n  constructor() {\n    this.anchorNode = this.anchorOffset = this.focusNode = this.focusOffset = null\n  }\n\n  set(sel) {\n    this.anchorNode = sel.anchorNode; this.anchorOffset = sel.anchorOffset\n    this.focusNode = sel.focusNode; this.focusOffset = sel.focusOffset\n  }\n\n  eq(sel) {\n    return sel.anchorNode == this.anchorNode && sel.anchorOffset == this.anchorOffset &&\n      sel.focusNode == this.focusNode && sel.focusOffset == this.focusOffset\n  }\n}\n\nexport class DOMObserver {\n  constructor(view, handleDOMChange) {\n    this.view = view\n    this.handleDOMChange = handleDOMChange\n    this.queue = []\n    this.flushingSoon = -1\n    this.observer = window.MutationObserver &&\n      new window.MutationObserver(mutations => {\n        for (let i = 0; i < mutations.length; i++) this.queue.push(mutations[i])\n        // IE11 will sometimes (on backspacing out a single character\n        // text node after a BR node) call the observer callback\n        // before actually updating the DOM, which will cause\n        // ProseMirror to miss the change (see #930)\n        if (browser.ie && browser.ie_version <= 11 && mutations.some(\n          m => m.type == \"childList\" && m.removedNodes.length ||\n               m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n          this.flushSoon()\n        else\n          this.flush()\n      })\n    this.currentSelection = new SelectionState\n    if (useCharData) {\n      this.onCharData = e => {\n        this.queue.push({target: e.target, type: \"characterData\", oldValue: e.prevValue})\n        this.flushSoon()\n      }\n    }\n    this.onSelectionChange = this.onSelectionChange.bind(this)\n    this.suppressingSelectionUpdates = false\n  }\n\n  flushSoon() {\n    if (this.flushingSoon < 0)\n      this.flushingSoon = window.setTimeout(() => { this.flushingSoon = -1; this.flush() }, 20)\n  }\n\n  forceFlush() {\n    if (this.flushingSoon > -1) {\n      window.clearTimeout(this.flushingSoon)\n      this.flushingSoon = -1\n      this.flush()\n    }\n  }\n\n  start() {\n    if (this.observer)\n      this.observer.observe(this.view.dom, observeOptions)\n    if (useCharData)\n      this.view.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData)\n    this.connectSelection()\n  }\n\n  stop() {\n    if (this.observer) {\n      let take = this.observer.takeRecords()\n      if (take.length) {\n        for (let i = 0; i < take.length; i++) this.queue.push(take[i])\n        window.setTimeout(() => this.flush(), 20)\n      }\n      this.observer.disconnect()\n    }\n    if (useCharData) this.view.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData)\n    this.disconnectSelection()\n  }\n\n  connectSelection() {\n    this.view.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange)\n  }\n\n  disconnectSelection() {\n    this.view.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange)\n  }\n\n  suppressSelectionUpdates() {\n    this.suppressingSelectionUpdates = true\n    setTimeout(() => this.suppressingSelectionUpdates = false, 50)\n  }\n\n  onSelectionChange() {\n    if (!hasFocusAndSelection(this.view)) return\n    if (this.suppressingSelectionUpdates) return selectionToDOM(this.view)\n    // Deletions on IE11 fire their events in the wrong order, giving\n    // us a selection change event before the DOM changes are\n    // reported.\n    if (browser.ie && browser.ie_version <= 11 && !this.view.state.selection.empty) {\n      let sel = this.view.root.getSelection()\n      // Selection.isCollapsed isn't reliable on IE\n      if (sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n        return this.flushSoon()\n    }\n    this.flush()\n  }\n\n  setCurSelection() {\n    this.currentSelection.set(this.view.root.getSelection())\n  }\n\n  ignoreSelectionChange(sel) {\n    if (sel.rangeCount == 0) return true\n    let container = sel.getRangeAt(0).commonAncestorContainer\n    let desc = this.view.docView.nearestDesc(container)\n    if (desc && desc.ignoreMutation({type: \"selection\", target: container.nodeType == 3 ? container.parentNode : container})) {\n      this.setCurSelection()\n      return true\n    }\n  }\n\n  flush() {\n    if (!this.view.docView || this.flushingSoon > -1) return\n    let mutations = this.observer ? this.observer.takeRecords() : []\n    if (this.queue.length) {\n      mutations = this.queue.concat(mutations)\n      this.queue.length = 0\n    }\n\n    let sel = this.view.root.getSelection()\n    let newSel = !this.suppressingSelectionUpdates && !this.currentSelection.eq(sel) && hasSelection(this.view) && !this.ignoreSelectionChange(sel)\n\n    let from = -1, to = -1, typeOver = false, added = []\n    if (this.view.editable) {\n      for (let i = 0; i < mutations.length; i++) {\n        let result = this.registerMutation(mutations[i], added)\n        if (result) {\n          from = from < 0 ? result.from : Math.min(result.from, from)\n          to = to < 0 ? result.to : Math.max(result.to, to)\n          if (result.typeOver) typeOver = true\n        }\n      }\n    }\n\n    if (browser.gecko && added.length > 1) {\n      let brs = added.filter(n => n.nodeName == \"BR\")\n      if (brs.length == 2) {\n        let [a, b] = brs\n        if (a.parentNode && a.parentNode.parentNode == b.parentNode) b.remove()\n        else a.remove()\n      }\n    }\n\n    if (from > -1 || newSel) {\n      if (from > -1) {\n        this.view.docView.markDirty(from, to)\n        checkCSS(this.view)\n      }\n      this.handleDOMChange(from, to, typeOver, added)\n      if (this.view.docView.dirty) this.view.updateState(this.view.state)\n      else if (!this.currentSelection.eq(sel)) selectionToDOM(this.view)\n      this.currentSelection.set(sel)\n    }\n  }\n\n  registerMutation(mut, added) {\n    // Ignore mutations inside nodes that were already noted as inserted\n    if (added.indexOf(mut.target) > -1) return null\n    let desc = this.view.docView.nearestDesc(mut.target)\n    if (mut.type == \"attributes\" &&\n        (desc == this.view.docView || mut.attributeName == \"contenteditable\" ||\n         // Firefox sometimes fires spurious events for null/empty styles\n         (mut.attributeName == \"style\" && !mut.oldValue && !mut.target.getAttribute(\"style\"))))\n      return null\n    if (!desc || desc.ignoreMutation(mut)) return null\n\n    if (mut.type == \"childList\") {\n      if (desc.contentDOM && desc.contentDOM != desc.dom && !desc.contentDOM.contains(mut.target))\n        return {from: desc.posBefore, to: desc.posAfter}\n      let prev = mut.previousSibling, next = mut.nextSibling\n      if (browser.ie && browser.ie_version <= 11 && mut.addedNodes.length) {\n        // IE11 gives us incorrect next/prev siblings for some\n        // insertions, so if there are added nodes, recompute those\n        for (let i = 0; i < mut.addedNodes.length; i++) {\n          let {previousSibling, nextSibling} = mut.addedNodes[i]\n          if (!previousSibling || Array.prototype.indexOf.call(mut.addedNodes, previousSibling) < 0) prev = previousSibling\n          if (!nextSibling || Array.prototype.indexOf.call(mut.addedNodes, nextSibling) < 0) next = nextSibling\n        }\n      }\n      let fromOffset = prev && prev.parentNode == mut.target\n          ? domIndex(prev) + 1 : 0\n      let from = desc.localPosFromDOM(mut.target, fromOffset, -1)\n      let toOffset = next && next.parentNode == mut.target\n          ? domIndex(next) : mut.target.childNodes.length\n      for (let i = 0; i < mut.addedNodes.length; i++) added.push(mut.addedNodes[i])\n      let to = desc.localPosFromDOM(mut.target, toOffset, 1)\n      return {from, to}\n    } else if (mut.type == \"attributes\") {\n      return {from: desc.posAtStart - desc.border, to: desc.posAtEnd + desc.border}\n    } else { // \"characterData\"\n      return {\n        from: desc.posAtStart,\n        to: desc.posAtEnd,\n        // An event was generated for a text change that didn't change\n        // any text. Mark the dom change to fall back to assuming the\n        // selection was typed over with an identical value if it can't\n        // find another change.\n        typeOver: mut.target.nodeValue == mut.oldValue\n      }\n    }\n  }\n}\n\nlet cssChecked = false\n\nfunction checkCSS(view) {\n  if (cssChecked) return\n  cssChecked = true\n  if (getComputedStyle(view.dom).whiteSpace == \"normal\")\n    console[\"warn\"](\"ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package.\")\n}\n","import {Selection, NodeSelection, TextSelection} from \"prosemirror-state\"\nimport {dropPoint} from \"prosemirror-transform\"\nimport {Slice} from \"prosemirror-model\"\n\nimport browser from \"./browser\"\nimport {captureKeyDown} from \"./capturekeys\"\nimport {readDOMChange} from \"./domchange\"\nimport {parseFromClipboard, serializeForClipboard} from \"./clipboard\"\nimport {DOMObserver} from \"./domobserver\"\nimport {selectionBetween, selectionToDOM, selectionFromDOM} from \"./selection\"\nimport {keyEvent} from \"./dom\"\n\n// A collection of DOM events that occur within the editor, and callback functions\n// to invoke when the event fires.\nconst handlers = {}, editHandlers = {}\n\nexport function initInput(view) {\n  view.shiftKey = false\n  view.mouseDown = null\n  view.lastKeyCode = null\n  view.lastKeyCodeTime = 0\n  view.lastClick = {time: 0, x: 0, y: 0, type: \"\"}\n  view.lastSelectionOrigin = null\n  view.lastSelectionTime = 0\n\n  view.lastIOSEnter = 0\n  view.lastIOSEnterFallbackTimeout = null\n\n  view.composing = false\n  view.composingTimeout = null\n  view.compositionNodes = []\n  view.compositionEndedAt = -2e8\n\n  view.domObserver = new DOMObserver(view, (from, to, typeOver, added) => readDOMChange(view, from, to, typeOver, added))\n  view.domObserver.start()\n  // Used by hacks like the beforeinput handler to check whether anything happened in the DOM\n  view.domChangeCount = 0\n\n  view.eventHandlers = Object.create(null)\n  for (let event in handlers) {\n    let handler = handlers[event]\n    view.dom.addEventListener(event, view.eventHandlers[event] = event => {\n      if (eventBelongsToView(view, event) && !runCustomHandler(view, event) &&\n          (view.editable || !(event.type in editHandlers)))\n        handler(view, event)\n    })\n  }\n  // On Safari, for reasons beyond my understanding, adding an input\n  // event handler makes an issue where the composition vanishes when\n  // you press enter go away.\n  if (browser.safari) view.dom.addEventListener(\"input\", () => null)\n\n  ensureListeners(view)\n}\n\nfunction setSelectionOrigin(view, origin) {\n  view.lastSelectionOrigin = origin\n  view.lastSelectionTime = Date.now()\n}\n\nexport function destroyInput(view) {\n  view.domObserver.stop()\n  for (let type in view.eventHandlers)\n    view.dom.removeEventListener(type, view.eventHandlers[type])\n  clearTimeout(view.composingTimeout)\n  clearTimeout(view.lastIOSEnterFallbackTimeout)\n}\n\nexport function ensureListeners(view) {\n  view.someProp(\"handleDOMEvents\", currentHandlers => {\n    for (let type in currentHandlers) if (!view.eventHandlers[type])\n      view.dom.addEventListener(type, view.eventHandlers[type] = event => runCustomHandler(view, event))\n  })\n}\n\nfunction runCustomHandler(view, event) {\n  return view.someProp(\"handleDOMEvents\", handlers => {\n    let handler = handlers[event.type]\n    return handler ? handler(view, event) || event.defaultPrevented : false\n  })\n}\n\nfunction eventBelongsToView(view, event) {\n  if (!event.bubbles) return true\n  if (event.defaultPrevented) return false\n  for (let node = event.target; node != view.dom; node = node.parentNode)\n    if (!node || node.nodeType == 11 ||\n        (node.pmViewDesc && node.pmViewDesc.stopEvent(event)))\n      return false\n  return true\n}\n\nexport function dispatchEvent(view, event) {\n  if (!runCustomHandler(view, event) && handlers[event.type] &&\n      (view.editable || !(event.type in editHandlers)))\n    handlers[event.type](view, event)\n}\n\neditHandlers.keydown = (view, event) => {\n  view.shiftKey = event.keyCode == 16 || event.shiftKey\n  if (inOrNearComposition(view, event)) return\n  view.domObserver.forceFlush()\n  view.lastKeyCode = event.keyCode\n  view.lastKeyCodeTime = Date.now()\n  // On iOS, if we preventDefault enter key presses, the virtual\n  // keyboard gets confused. So the hack here is to set a flag that\n  // makes the DOM change code recognize that what just happens should\n  // be replaced by whatever the Enter key handlers do.\n  if (browser.ios && event.keyCode == 13 && !event.ctrlKey && !event.altKey && !event.metaKey) {\n    let now = Date.now()\n    view.lastIOSEnter = now\n    view.lastIOSEnterFallbackTimeout = setTimeout(() => {\n      if (view.lastIOSEnter == now) {\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))\n        view.lastIOSEnter = 0\n      }\n    }, 200)\n  } else if (view.someProp(\"handleKeyDown\", f => f(view, event)) || captureKeyDown(view, event)) {\n    event.preventDefault()\n  } else {\n    setSelectionOrigin(view, \"key\")\n  }\n}\n\neditHandlers.keyup = (view, e) => {\n  if (e.keyCode == 16) view.shiftKey = false\n}\n\neditHandlers.keypress = (view, event) => {\n  if (inOrNearComposition(view, event) || !event.charCode ||\n      event.ctrlKey && !event.altKey || browser.mac && event.metaKey) return\n\n  if (view.someProp(\"handleKeyPress\", f => f(view, event))) {\n    event.preventDefault()\n    return\n  }\n\n  let sel = view.state.selection\n  if (!(sel instanceof TextSelection) || !sel.$from.sameParent(sel.$to)) {\n    let text = String.fromCharCode(event.charCode)\n    if (!view.someProp(\"handleTextInput\", f => f(view, sel.$from.pos, sel.$to.pos, text)))\n      view.dispatch(view.state.tr.insertText(text).scrollIntoView())\n    event.preventDefault()\n  }\n}\n\nfunction eventCoords(event) { return {left: event.clientX, top: event.clientY} }\n\nfunction isNear(event, click) {\n  let dx = click.x - event.clientX, dy = click.y - event.clientY\n  return dx * dx + dy * dy < 100\n}\n\nfunction runHandlerOnContext(view, propName, pos, inside, event) {\n  if (inside == -1) return false\n  let $pos = view.state.doc.resolve(inside)\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    if (view.someProp(propName, f => i > $pos.depth ? f(view, pos, $pos.nodeAfter, $pos.before(i), event, true)\n                                                    : f(view, pos, $pos.node(i), $pos.before(i), event, false)))\n      return true\n  }\n  return false\n}\n\nfunction updateSelection(view, selection, origin) {\n  if (!view.focused) view.focus()\n  let tr = view.state.tr.setSelection(selection)\n  if (origin == \"pointer\") tr.setMeta(\"pointer\", true)\n  view.dispatch(tr)\n}\n\nfunction selectClickedLeaf(view, inside) {\n  if (inside == -1) return false\n  let $pos = view.state.doc.resolve(inside), node = $pos.nodeAfter\n  if (node && node.isAtom && NodeSelection.isSelectable(node)) {\n    updateSelection(view, new NodeSelection($pos), \"pointer\")\n    return true\n  }\n  return false\n}\n\nfunction selectClickedNode(view, inside) {\n  if (inside == -1) return false\n  let sel = view.state.selection, selectedNode, selectAt\n  if (sel instanceof NodeSelection) selectedNode = sel.node\n\n  let $pos = view.state.doc.resolve(inside)\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i)\n    if (NodeSelection.isSelectable(node)) {\n      if (selectedNode && sel.$from.depth > 0 &&\n          i >= sel.$from.depth && $pos.before(sel.$from.depth + 1) == sel.$from.pos)\n        selectAt = $pos.before(sel.$from.depth)\n      else\n        selectAt = $pos.before(i)\n      break\n    }\n  }\n\n  if (selectAt != null) {\n    updateSelection(view, NodeSelection.create(view.state.doc, selectAt), \"pointer\")\n    return true\n  } else {\n    return false\n  }\n}\n\nfunction handleSingleClick(view, pos, inside, event, selectNode) {\n  return runHandlerOnContext(view, \"handleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleClick\", f => f(view, pos, event)) ||\n    (selectNode ? selectClickedNode(view, inside) : selectClickedLeaf(view, inside))\n}\n\nfunction handleDoubleClick(view, pos, inside, event) {\n  return runHandlerOnContext(view, \"handleDoubleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleDoubleClick\", f => f(view, pos, event))\n}\n\nfunction handleTripleClick(view, pos, inside, event) {\n  return runHandlerOnContext(view, \"handleTripleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleTripleClick\", f => f(view, pos, event)) ||\n    defaultTripleClick(view, inside)\n}\n\nfunction defaultTripleClick(view, inside) {\n  let doc = view.state.doc\n  if (inside == -1) {\n    if (doc.inlineContent) {\n      updateSelection(view, TextSelection.create(doc, 0, doc.content.size), \"pointer\")\n      return true\n    }\n    return false\n  }\n\n  let $pos = doc.resolve(inside)\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i)\n    let nodePos = $pos.before(i)\n    if (node.inlineContent)\n      updateSelection(view, TextSelection.create(doc, nodePos + 1, nodePos + 1 + node.content.size), \"pointer\")\n    else if (NodeSelection.isSelectable(node))\n      updateSelection(view, NodeSelection.create(doc, nodePos), \"pointer\")\n    else\n      continue\n    return true\n  }\n}\n\nfunction forceDOMFlush(view) {\n  return endComposition(view)\n}\n\nconst selectNodeModifier = browser.mac ? \"metaKey\" : \"ctrlKey\"\n\nhandlers.mousedown = (view, event) => {\n  view.shiftKey = event.shiftKey\n  let flushed = forceDOMFlush(view)\n  let now = Date.now(), type = \"singleClick\"\n  if (now - view.lastClick.time < 500 && isNear(event, view.lastClick) && !event[selectNodeModifier]) {\n    if (view.lastClick.type == \"singleClick\") type = \"doubleClick\"\n    else if (view.lastClick.type == \"doubleClick\") type = \"tripleClick\"\n  }\n  view.lastClick = {time: now, x: event.clientX, y: event.clientY, type}\n\n  let pos = view.posAtCoords(eventCoords(event))\n  if (!pos) return\n\n  if (type == \"singleClick\")\n    view.mouseDown = new MouseDown(view, pos, event, flushed)\n  else if ((type == \"doubleClick\" ? handleDoubleClick : handleTripleClick)(view, pos.pos, pos.inside, event))\n    event.preventDefault()\n  else\n    setSelectionOrigin(view, \"pointer\")\n}\n\nclass MouseDown {\n  constructor(view, pos, event, flushed) {\n    this.view = view\n    this.startDoc = view.state.doc\n    this.pos = pos\n    this.event = event\n    this.flushed = flushed\n    this.selectNode = event[selectNodeModifier]\n    this.allowDefault = event.shiftKey\n\n    let targetNode, targetPos\n    if (pos.inside > -1) {\n      targetNode = view.state.doc.nodeAt(pos.inside)\n      targetPos = pos.inside\n    } else {\n      let $pos = view.state.doc.resolve(pos.pos)\n      targetNode = $pos.parent\n      targetPos = $pos.depth ? $pos.before() : 0\n    }\n\n    this.mightDrag = null\n\n    const target = flushed ? null : event.target\n    const targetDesc = target ? view.docView.nearestDesc(target, true) : null\n    this.target = targetDesc ? targetDesc.dom : null\n\n    if (targetNode.type.spec.draggable && targetNode.type.spec.selectable !== false ||\n        view.state.selection instanceof NodeSelection && targetPos == view.state.selection.from)\n      this.mightDrag = {node: targetNode,\n                        pos: targetPos,\n                        addAttr: this.target && !this.target.draggable,\n                        setUneditable: this.target && browser.gecko && !this.target.hasAttribute(\"contentEditable\")}\n\n    if (this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable)) {\n      this.view.domObserver.stop()\n      if (this.mightDrag.addAttr) this.target.draggable = true\n      if (this.mightDrag.setUneditable)\n        setTimeout(() => this.target.setAttribute(\"contentEditable\", \"false\"), 20)\n      this.view.domObserver.start()\n    }\n\n    view.root.addEventListener(\"mouseup\", this.up = this.up.bind(this))\n    view.root.addEventListener(\"mousemove\", this.move = this.move.bind(this))\n    setSelectionOrigin(view, \"pointer\")\n  }\n\n  done() {\n    this.view.root.removeEventListener(\"mouseup\", this.up)\n    this.view.root.removeEventListener(\"mousemove\", this.move)\n    if (this.mightDrag && this.target) {\n      this.view.domObserver.stop()\n      if (this.mightDrag.addAttr) this.target.removeAttribute(\"draggable\")\n      if (this.mightDrag.setUneditable) this.target.removeAttribute(\"contentEditable\")\n      this.view.domObserver.start()\n    }\n    this.view.mouseDown = null\n  }\n\n  up(event) {\n    this.done()\n\n    if (!this.view.dom.contains(event.target.nodeType == 3 ? event.target.parentNode : event.target))\n      return\n\n    let pos = this.pos\n    if (this.view.state.doc != this.startDoc) pos = this.view.posAtCoords(eventCoords(event))\n\n    if (this.allowDefault || !pos) {\n      setSelectionOrigin(this.view, \"pointer\")\n    } else if (handleSingleClick(this.view, pos.pos, pos.inside, event, this.selectNode)) {\n      event.preventDefault()\n    } else if (this.flushed ||\n               // Safari ignores clicks on draggable elements\n               (browser.safari && this.mightDrag && !this.mightDrag.node.isAtom) ||\n               // Chrome will sometimes treat a node selection as a\n               // cursor, but still report that the node is selected\n               // when asked through getSelection. You'll then get a\n               // situation where clicking at the point where that\n               // (hidden) cursor is doesn't change the selection, and\n               // thus doesn't get a reaction from ProseMirror. This\n               // works around that.\n               (browser.chrome && !(this.view.state.selection instanceof TextSelection) &&\n                (pos.pos == this.view.state.selection.from || pos.pos == this.view.state.selection.to))) {\n      updateSelection(this.view, Selection.near(this.view.state.doc.resolve(pos.pos)), \"pointer\")\n      event.preventDefault()\n    } else {\n      setSelectionOrigin(this.view, \"pointer\")\n    }\n  }\n\n  move(event) {\n    if (!this.allowDefault && (Math.abs(this.event.x - event.clientX) > 4 ||\n                               Math.abs(this.event.y - event.clientY) > 4))\n      this.allowDefault = true\n    setSelectionOrigin(this.view, \"pointer\")\n  }\n}\n\nhandlers.touchdown = view => {\n  forceDOMFlush(view)\n  setSelectionOrigin(view, \"pointer\")\n}\n\nhandlers.contextmenu = view => forceDOMFlush(view)\n\nfunction inOrNearComposition(view, event) {\n  if (view.composing) return true\n  // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n  // On Japanese input method editors (IMEs), the Enter key is used to confirm character\n  // selection. On Safari, when Enter is pressed, compositionend and keydown events are\n  // emitted. The keydown event triggers newline insertion, which we don't want.\n  // This method returns true if the keydown event should be ignored.\n  // We only ignore it once, as pressing Enter a second time *should* insert a newline.\n  // Furthermore, the keydown event timestamp must be close to the compositionEndedAt timestamp.\n  // This guards against the case where compositionend is triggered without the keyboard\n  // (e.g. character confirmation may be done with the mouse), and keydown is triggered\n  // afterwards- we wouldn't want to ignore the keydown event in this case.\n  if (browser.safari && Math.abs(event.timeStamp - view.compositionEndedAt) < 500) {\n    view.compositionEndedAt = -2e8\n    return true\n  }\n  return false\n}\n\n// Drop active composition after 5 seconds of inactivity on Android\nconst timeoutComposition = browser.android ? 5000 : -1\n\neditHandlers.compositionstart = editHandlers.compositionupdate = view => {\n  if (!view.composing) {\n    view.domObserver.flush()\n    let {state} = view, $pos = state.selection.$from\n    if (state.selection.empty &&\n        (state.storedMarks ||\n         (!$pos.textOffset && $pos.parentOffset && $pos.nodeBefore.marks.some(m => m.type.spec.inclusive === false)))) {\n      // Need to wrap the cursor in mark nodes different from the ones in the DOM context\n      view.markCursor = view.state.storedMarks || $pos.marks()\n      endComposition(view, true)\n      view.markCursor = null\n    } else {\n      endComposition(view)\n      // In firefox, if the cursor is after but outside a marked node,\n      // the inserted text won't inherit the marks. So this moves it\n      // inside if necessary.\n      if (browser.gecko && state.selection.empty && $pos.parentOffset && !$pos.textOffset && $pos.nodeBefore.marks.length) {\n        let sel = view.root.getSelection()\n        for (let node = sel.focusNode, offset = sel.focusOffset; node && node.nodeType == 1 && offset != 0;) {\n          let before = offset < 0 ? node.lastChild : node.childNodes[offset - 1]\n          if (!before) break\n          if (before.nodeType == 3) {\n            sel.collapse(before, before.nodeValue.length)\n            break\n          } else {\n            node = before\n            offset = -1\n          }\n        }\n      }\n    }\n    view.composing = true\n  }\n  scheduleComposeEnd(view, timeoutComposition)\n}\n\neditHandlers.compositionend = (view, event) => {\n  if (view.composing) {\n    view.composing = false\n    view.compositionEndedAt = event.timeStamp\n    scheduleComposeEnd(view, 20)\n  }\n}\n\nfunction scheduleComposeEnd(view, delay) {\n  clearTimeout(view.composingTimeout)\n  if (delay > -1) view.composingTimeout = setTimeout(() => endComposition(view), delay)\n}\n\nexport function clearComposition(view) {\n  view.composing = false\n  while (view.compositionNodes.length > 0) view.compositionNodes.pop().markParentsDirty()\n}\n\nexport function endComposition(view, forceUpdate) {\n  view.domObserver.forceFlush()\n  clearComposition(view)\n  if (forceUpdate || view.docView.dirty) {\n    let sel = selectionFromDOM(view)\n    if (sel && !sel.eq(view.state.selection)) view.dispatch(view.state.tr.setSelection(sel))\n    else view.updateState(view.state)\n    return true\n  }\n  return false\n}\n\nfunction captureCopy(view, dom) {\n  // The extra wrapper is somehow necessary on IE/Edge to prevent the\n  // content from being mangled when it is put onto the clipboard\n  if (!view.dom.parentNode) return\n  let wrap = view.dom.parentNode.appendChild(document.createElement(\"div\"))\n  wrap.appendChild(dom)\n  wrap.style.cssText = \"position: fixed; left: -10000px; top: 10px\"\n  let sel = getSelection(), range = document.createRange()\n  range.selectNodeContents(dom)\n  // Done because IE will fire a selectionchange moving the selection\n  // to its start when removeAllRanges is called and the editor still\n  // has focus (which will mess up the editor's selection state).\n  view.dom.blur()\n  sel.removeAllRanges()\n  sel.addRange(range)\n  setTimeout(() => {\n    if (wrap.parentNode) wrap.parentNode.removeChild(wrap)\n    view.focus()\n  }, 50)\n}\n\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (browser.ie && browser.ie_version < 15) ||\n      (browser.ios && browser.webkit_version < 604)\n\nhandlers.copy = editHandlers.cut = (view, e) => {\n  let sel = view.state.selection, cut = e.type == \"cut\"\n  if (sel.empty) return\n\n  // IE and Edge's clipboard interface is completely broken\n  let data = brokenClipboardAPI ? null : e.clipboardData\n  let slice = sel.content(), {dom, text} = serializeForClipboard(view, slice)\n  if (data) {\n    e.preventDefault()\n    data.clearData()\n    data.setData(\"text/html\", dom.innerHTML)\n    data.setData(\"text/plain\", text)\n  } else {\n    captureCopy(view, dom)\n  }\n  if (cut) view.dispatch(view.state.tr.deleteSelection().scrollIntoView().setMeta(\"uiEvent\", \"cut\"))\n}\n\nfunction sliceSingleNode(slice) {\n  return slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 ? slice.content.firstChild : null\n}\n\nfunction capturePaste(view, e) {\n  if (!view.dom.parentNode) return\n  let plainText = view.shiftKey || view.state.selection.$from.parent.type.spec.code\n  let target = view.dom.parentNode.appendChild(document.createElement(plainText ? \"textarea\" : \"div\"))\n  if (!plainText) target.contentEditable = \"true\"\n  target.style.cssText = \"position: fixed; left: -10000px; top: 10px\"\n  target.focus()\n  setTimeout(() => {\n    view.focus()\n    if (target.parentNode) target.parentNode.removeChild(target)\n    if (plainText) doPaste(view, target.value, null, e)\n    else doPaste(view, target.textContent, target.innerHTML, e)\n  }, 50)\n}\n\nfunction doPaste(view, text, html, e) {\n  let slice = parseFromClipboard(view, text, html, view.shiftKey, view.state.selection.$from)\n  if (view.someProp(\"handlePaste\", f => f(view, e, slice || Slice.empty))) return true\n  if (!slice) return false\n\n  let singleNode = sliceSingleNode(slice)\n  let tr = singleNode ? view.state.tr.replaceSelectionWith(singleNode, view.shiftKey) : view.state.tr.replaceSelection(slice)\n  view.dispatch(tr.scrollIntoView().setMeta(\"paste\", true).setMeta(\"uiEvent\", \"paste\"))\n  return true\n}\n\neditHandlers.paste = (view, e) => {\n  let data = brokenClipboardAPI ? null : e.clipboardData\n  if (data && doPaste(view, data.getData(\"text/plain\"), data.getData(\"text/html\"), e)) e.preventDefault()\n  else capturePaste(view, e)\n}\n\nclass Dragging {\n  constructor(slice, move) {\n    this.slice = slice\n    this.move = move\n  }\n}\n\nconst dragCopyModifier = browser.mac ? \"altKey\" : \"ctrlKey\"\n\nhandlers.dragstart = (view, e) => {\n  let mouseDown = view.mouseDown\n  if (mouseDown) mouseDown.done()\n  if (!e.dataTransfer) return\n\n  let sel = view.state.selection\n  let pos = sel.empty ? null : view.posAtCoords(eventCoords(e))\n  if (pos && pos.pos >= sel.from && pos.pos <= (sel instanceof NodeSelection ? sel.to - 1: sel.to)) {\n    // In selection\n  } else if (mouseDown && mouseDown.mightDrag) {\n    view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, mouseDown.mightDrag.pos)))\n  } else if (e.target && e.target.nodeType == 1) {\n    let desc = view.docView.nearestDesc(e.target, true)\n    if (!desc || !desc.node.type.spec.draggable || desc == view.docView) return\n    view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, desc.posBefore)))\n  }\n  let slice = view.state.selection.content(), {dom, text} = serializeForClipboard(view, slice)\n  e.dataTransfer.clearData()\n  e.dataTransfer.setData(brokenClipboardAPI ? \"Text\" : \"text/html\", dom.innerHTML)\n  if (!brokenClipboardAPI) e.dataTransfer.setData(\"text/plain\", text)\n  view.dragging = new Dragging(slice, !e[dragCopyModifier])\n}\n\nhandlers.dragend = view => {\n  let dragging = view.dragging\n  window.setTimeout(() => {\n    if (view.dragging == dragging)  view.dragging = null\n  }, 50)\n}\n\neditHandlers.dragover = editHandlers.dragenter = (_, e) => e.preventDefault()\n\neditHandlers.drop = (view, e) => {\n  let dragging = view.dragging\n  view.dragging = null\n\n  if (!e.dataTransfer) return\n\n  let eventPos = view.posAtCoords(eventCoords(e))\n  if (!eventPos) return\n  let $mouse = view.state.doc.resolve(eventPos.pos)\n  if (!$mouse) return\n  let slice = dragging && dragging.slice ||\n      parseFromClipboard(view, e.dataTransfer.getData(brokenClipboardAPI ? \"Text\" : \"text/plain\"),\n                         brokenClipboardAPI ? null : e.dataTransfer.getData(\"text/html\"), false, $mouse)\n  let move = dragging && !e[dragCopyModifier]\n  if (view.someProp(\"handleDrop\", f => f(view, e, slice || Slice.empty, move))) {\n    e.preventDefault()\n    return\n  }\n  if (!slice) return\n\n  e.preventDefault()\n  let insertPos = slice ? dropPoint(view.state.doc, $mouse.pos, slice) : $mouse.pos\n  if (insertPos == null) insertPos = $mouse.pos\n\n  let tr = view.state.tr\n  if (move) tr.deleteSelection()\n\n  let pos = tr.mapping.map(insertPos)\n  let isNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1\n  let beforeInsert = tr.doc\n  if (isNode)\n    tr.replaceRangeWith(pos, pos, slice.content.firstChild)\n  else\n    tr.replaceRange(pos, pos, slice)\n  if (tr.doc.eq(beforeInsert)) return\n\n  let $pos = tr.doc.resolve(pos)\n  if (isNode && NodeSelection.isSelectable(slice.content.firstChild) &&\n      $pos.nodeAfter && $pos.nodeAfter.sameMarkup(slice.content.firstChild)) {\n    tr.setSelection(new NodeSelection($pos))\n  } else {\n    let end = tr.mapping.map(insertPos)\n    tr.mapping.maps[tr.mapping.maps.length - 1].forEach((_from, _to, _newFrom, newTo) => end = newTo)\n    tr.setSelection(selectionBetween(view, $pos, tr.doc.resolve(end)))\n  }\n  view.focus()\n  view.dispatch(tr.setMeta(\"uiEvent\", \"drop\"))\n}\n\nhandlers.focus = view => {\n  if (!view.focused) {\n    view.domObserver.stop()\n    view.dom.classList.add(\"ProseMirror-focused\")\n    view.domObserver.start()\n    view.focused = true\n    setTimeout(() => {\n      if (view.docView && view.hasFocus() && !view.domObserver.currentSelection.eq(view.root.getSelection()))\n        selectionToDOM(view)\n    }, 20)\n  }\n}\n\nhandlers.blur = view => {\n  if (view.focused) {\n    view.domObserver.stop()\n    view.dom.classList.remove(\"ProseMirror-focused\")\n    view.domObserver.start()\n    view.domObserver.currentSelection.set({})\n    view.focused = false\n  }\n}\n\nhandlers.beforeinput = (view, event) => {\n  // We should probably do more with beforeinput events, but support\n  // is so spotty that I'm still waiting to see where they are going.\n\n  // Very specific hack to deal with backspace sometimes failing on\n  // Chrome Android when after an uneditable node.\n  if (browser.chrome && browser.android && event.inputType == \"deleteContentBackward\") {\n    let {domChangeCount} = view\n    setTimeout(() => {\n      if (view.domChangeCount != domChangeCount) return // Event already had some effect\n      // This bug tends to close the virtual keyboard, so we refocus\n      view.dom.blur()\n      view.focus()\n      if (view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) return\n      let {$cursor} = view.state.selection\n      // Crude approximation of backspace behavior when no command handled it\n      if ($cursor && $cursor.pos > 0) view.dispatch(view.state.tr.delete($cursor.pos - 1, $cursor.pos).scrollIntoView())\n    }, 50)\n  }\n}\n\n// Make sure all handlers get registered\nfor (let prop in editHandlers) handlers[prop] = editHandlers[prop]\n","function compareObjs(a, b) {\n  if (a == b) return true\n  for (let p in a) if (a[p] !== b[p]) return false\n  for (let p in b) if (!(p in a)) return false\n  return true\n}\n\nclass WidgetType {\n  constructor(toDOM, spec) {\n    this.spec = spec || noSpec\n    this.side = this.spec.side || 0\n    this.toDOM = toDOM\n  }\n\n  map(mapping, span, offset, oldOffset) {\n    let {pos, deleted} = mapping.mapResult(span.from + oldOffset, this.side < 0 ? -1 : 1)\n    return deleted ? null : new Decoration(pos - offset, pos - offset, this)\n  }\n\n  valid() { return true }\n\n  eq(other) {\n    return this == other ||\n      (other instanceof WidgetType &&\n       (this.spec.key && this.spec.key == other.spec.key ||\n        this.toDOM == other.toDOM && compareObjs(this.spec, other.spec)))\n  }\n}\n\nclass InlineType {\n  constructor(attrs, spec) {\n    this.spec = spec || noSpec\n    this.attrs = attrs\n  }\n\n  map(mapping, span, offset, oldOffset) {\n    let from = mapping.map(span.from + oldOffset, this.spec.inclusiveStart ? -1 : 1) - offset\n    let to = mapping.map(span.to + oldOffset, this.spec.inclusiveEnd ? 1 : -1) - offset\n    return from >= to ? null : new Decoration(from, to, this)\n  }\n\n  valid(_, span) { return span.from < span.to }\n\n  eq(other) {\n    return this == other ||\n      (other instanceof InlineType && compareObjs(this.attrs, other.attrs) &&\n       compareObjs(this.spec, other.spec))\n  }\n\n  static is(span) { return span.type instanceof InlineType }\n}\n\nclass NodeType {\n  constructor(attrs, spec) {\n    this.spec = spec || noSpec\n    this.attrs = attrs\n  }\n\n  map(mapping, span, offset, oldOffset) {\n    let from = mapping.mapResult(span.from + oldOffset, 1)\n    if (from.deleted) return null\n    let to = mapping.mapResult(span.to + oldOffset, -1)\n    if (to.deleted || to.pos <= from.pos) return null\n    return new Decoration(from.pos - offset, to.pos - offset, this)\n  }\n\n  valid(node, span) {\n    let {index, offset} = node.content.findIndex(span.from)\n    return offset == span.from && offset + node.child(index).nodeSize == span.to\n  }\n\n  eq(other) {\n    return this == other ||\n      (other instanceof NodeType && compareObjs(this.attrs, other.attrs) &&\n       compareObjs(this.spec, other.spec))\n  }\n}\n\n// ::- Decoration objects can be provided to the view through the\n// [`decorations` prop](#view.EditorProps.decorations). They come in\n// several variants—see the static members of this class for details.\nexport class Decoration {\n  constructor(from, to, type) {\n    // :: number\n    // The start position of the decoration.\n    this.from = from\n    // :: number\n    // The end position. Will be the same as `from` for [widget\n    // decorations](#view.Decoration^widget).\n    this.to = to\n    this.type = type\n  }\n\n  copy(from, to) {\n    return new Decoration(from, to, this.type)\n  }\n\n  eq(other, offset = 0) {\n    return this.type.eq(other.type) && this.from + offset == other.from && this.to + offset == other.to\n  }\n\n  map(mapping, offset, oldOffset) {\n    return this.type.map(mapping, this, offset, oldOffset)\n  }\n\n  // :: (number, union<(view: EditorView, getPos: () → number) → dom.Node, dom.Node>, ?Object) → Decoration\n  // Creates a widget decoration, which is a DOM node that's shown in\n  // the document at the given position. It is recommended that you\n  // delay rendering the widget by passing a function that will be\n  // called when the widget is actually drawn in a view, but you can\n  // also directly pass a DOM node. `getPos` can be used to find the\n  // widget's current document position.\n  //\n  //   spec::- These options are supported:\n  //\n  //     side:: ?number\n  //     Controls which side of the document position this widget is\n  //     associated with. When negative, it is drawn before a cursor\n  //     at its position, and content inserted at that position ends\n  //     up after the widget. When zero (the default) or positive, the\n  //     widget is drawn after the cursor and content inserted there\n  //     ends up before the widget.\n  //\n  //     When there are multiple widgets at a given position, their\n  //     `side` values determine the order in which they appear. Those\n  //     with lower values appear first. The ordering of widgets with\n  //     the same `side` value is unspecified.\n  //\n  //     When `marks` is null, `side` also determines the marks that\n  //     the widget is wrapped in—those of the node before when\n  //     negative, those of the node after when positive.\n  //\n  //     marks:: ?[Mark]\n  //     The precise set of marks to draw around the widget.\n  //\n  //     stopEvent:: ?(event: dom.Event) → bool\n  //     Can be used to control which DOM events, when they bubble out\n  //     of this widget, the editor view should ignore.\n  //\n  //     ignoreSelection:: ?bool\n  //     When set (defaults to false), selection changes inside the\n  //     widget are ignored, and don't cause ProseMirror to try and\n  //     re-sync the selection with its selection state.\n  //\n  //     key:: ?string\n  //     When comparing decorations of this type (in order to decide\n  //     whether it needs to be redrawn), ProseMirror will by default\n  //     compare the widget DOM node by identity. If you pass a key,\n  //     that key will be compared instead, which can be useful when\n  //     you generate decorations on the fly and don't want to store\n  //     and reuse DOM nodes. Make sure that any widgets with the same\n  //     key are interchangeable—if widgets differ in, for example,\n  //     the behavior of some event handler, they should get\n  //     different keys.\n  static widget(pos, toDOM, spec) {\n    return new Decoration(pos, pos, new WidgetType(toDOM, spec))\n  }\n\n  // :: (number, number, DecorationAttrs, ?Object) → Decoration\n  // Creates an inline decoration, which adds the given attributes to\n  // each inline node between `from` and `to`.\n  //\n  //   spec::- These options are recognized:\n  //\n  //     inclusiveStart:: ?bool\n  //     Determines how the left side of the decoration is\n  //     [mapped](#transform.Position_Mapping) when content is\n  //     inserted directly at that position. By default, the decoration\n  //     won't include the new content, but you can set this to `true`\n  //     to make it inclusive.\n  //\n  //     inclusiveEnd:: ?bool\n  //     Determines how the right side of the decoration is mapped.\n  //     See\n  //     [`inclusiveStart`](#view.Decoration^inline^spec.inclusiveStart).\n  static inline(from, to, attrs, spec) {\n    return new Decoration(from, to, new InlineType(attrs, spec))\n  }\n\n  // :: (number, number, DecorationAttrs, ?Object) → Decoration\n  // Creates a node decoration. `from` and `to` should point precisely\n  // before and after a node in the document. That node, and only that\n  // node, will receive the given attributes.\n  //\n  //   spec::-\n  //\n  //   Optional information to store with the decoration. It\n  //   is also used when comparing decorators for equality.\n  static node(from, to, attrs, spec) {\n    return new Decoration(from, to, new NodeType(attrs, spec))\n  }\n\n  // :: Object\n  // The spec provided when creating this decoration. Can be useful\n  // if you've stored extra information in that object.\n  get spec() { return this.type.spec }\n\n  get inline() { return this.type instanceof InlineType }\n}\n\n// DecorationAttrs:: interface\n// A set of attributes to add to a decorated node. Most properties\n// simply directly correspond to DOM attributes of the same name,\n// which will be set to the property's value. These are exceptions:\n//\n//   class:: ?string\n//   A CSS class name or a space-separated set of class names to be\n//   _added_ to the classes that the node already had.\n//\n//   style:: ?string\n//   A string of CSS to be _added_ to the node's existing `style` property.\n//\n//   nodeName:: ?string\n//   When non-null, the target node is wrapped in a DOM element of\n//   this type (and the other attributes are applied to this element).\n\nconst none = [], noSpec = {}\n\n// :: class extends DecorationSource\n// A collection of [decorations](#view.Decoration), organized in\n// such a way that the drawing algorithm can efficiently use and\n// compare them. This is a persistent data structure—it is not\n// modified, updates create a new value.\nexport class DecorationSet {\n  constructor(local, children) {\n    this.local = local && local.length ? local : none\n    this.children = children && children.length ? children : none\n  }\n\n  // :: (Node, [Decoration]) → DecorationSet\n  // Create a set of decorations, using the structure of the given\n  // document.\n  static create(doc, decorations) {\n    return decorations.length ? buildTree(decorations, doc, 0, noSpec) : empty\n  }\n\n  // :: (?number, ?number, ?(spec: Object) → bool) → [Decoration]\n  // Find all decorations in this set which touch the given range\n  // (including decorations that start or end directly at the\n  // boundaries) and match the given predicate on their spec. When\n  // `start` and `end` are omitted, all decorations in the set are\n  // considered. When `predicate` isn't given, all decorations are\n  // assumed to match.\n  find(start, end, predicate) {\n    let result = []\n    this.findInner(start == null ? 0 : start, end == null ? 1e9 : end, result, 0, predicate)\n    return result\n  }\n\n  findInner(start, end, result, offset, predicate) {\n    for (let i = 0; i < this.local.length; i++) {\n      let span = this.local[i]\n      if (span.from <= end && span.to >= start && (!predicate || predicate(span.spec)))\n        result.push(span.copy(span.from + offset, span.to + offset))\n    }\n    for (let i = 0; i < this.children.length; i += 3) {\n      if (this.children[i] < end && this.children[i + 1] > start) {\n        let childOff = this.children[i] + 1\n        this.children[i + 2].findInner(start - childOff, end - childOff, result, offset + childOff, predicate)\n      }\n    }\n  }\n\n  // :: (Mapping, Node, ?Object) → DecorationSet\n  // Map the set of decorations in response to a change in the\n  // document.\n  //\n  //   options::- An optional set of options.\n  //\n  //     onRemove:: ?(decorationSpec: Object)\n  //     When given, this function will be called for each decoration\n  //     that gets dropped as a result of the mapping, passing the\n  //     spec of that decoration.\n  map(mapping, doc, options) {\n    if (this == empty || mapping.maps.length == 0) return this\n    return this.mapInner(mapping, doc, 0, 0, options || noSpec)\n  }\n\n  mapInner(mapping, node, offset, oldOffset, options) {\n    let newLocal\n    for (let i = 0; i < this.local.length; i++) {\n      let mapped = this.local[i].map(mapping, offset, oldOffset)\n      if (mapped && mapped.type.valid(node, mapped)) (newLocal || (newLocal = [])).push(mapped)\n      else if (options.onRemove) options.onRemove(this.local[i].spec)\n    }\n\n    if (this.children.length)\n      return mapChildren(this.children, newLocal, mapping, node, offset, oldOffset, options)\n    else\n      return newLocal ? new DecorationSet(newLocal.sort(byPos)) : empty\n  }\n\n  // :: (Node, [Decoration]) → DecorationSet\n  // Add the given array of decorations to the ones in the set,\n  // producing a new set. Needs access to the current document to\n  // create the appropriate tree structure.\n  add(doc, decorations) {\n    if (!decorations.length) return this\n    if (this == empty) return DecorationSet.create(doc, decorations)\n    return this.addInner(doc, decorations, 0)\n  }\n\n  addInner(doc, decorations, offset) {\n    let children, childIndex = 0\n    doc.forEach((childNode, childOffset) => {\n      let baseOffset = childOffset + offset, found\n      if (!(found = takeSpansForNode(decorations, childNode, baseOffset))) return\n\n      if (!children) children = this.children.slice()\n      while (childIndex < children.length && children[childIndex] < childOffset) childIndex += 3\n      if (children[childIndex] == childOffset)\n        children[childIndex + 2] = children[childIndex + 2].addInner(childNode, found, baseOffset + 1)\n      else\n        children.splice(childIndex, 0, childOffset, childOffset + childNode.nodeSize, buildTree(found, childNode, baseOffset + 1, noSpec))\n      childIndex += 3\n    })\n\n    let local = moveSpans(childIndex ? withoutNulls(decorations) : decorations, -offset)\n    for (let i = 0; i < local.length; i++) if (!local[i].type.valid(doc, local[i])) local.splice(i--, 1)\n\n    return new DecorationSet(local.length ? this.local.concat(local).sort(byPos) : this.local,\n                             children || this.children)\n  }\n\n  // :: ([Decoration]) → DecorationSet\n  // Create a new set that contains the decorations in this set, minus\n  // the ones in the given array.\n  remove(decorations) {\n    if (decorations.length == 0 || this == empty) return this\n    return this.removeInner(decorations, 0)\n  }\n\n  removeInner(decorations, offset) {\n    let children = this.children, local = this.local\n    for (let i = 0; i < children.length; i += 3) {\n      let found, from = children[i] + offset, to = children[i + 1] + offset\n      for (let j = 0, span; j < decorations.length; j++) if (span = decorations[j]) {\n        if (span.from > from && span.to < to) {\n          decorations[j] = null\n          ;(found || (found = [])).push(span)\n        }\n      }\n      if (!found) continue\n      if (children == this.children) children = this.children.slice()\n      let removed = children[i + 2].removeInner(found, from + 1)\n      if (removed != empty) {\n        children[i + 2] = removed\n      } else {\n        children.splice(i, 3)\n        i -= 3\n      }\n    }\n    if (local.length) for (let i = 0, span; i < decorations.length; i++) if (span = decorations[i]) {\n      for (let j = 0; j < local.length; j++) if (local[j].eq(span, offset)) {\n        if (local == this.local) local = this.local.slice()\n        local.splice(j--, 1)\n      }\n    }\n    if (children == this.children && local == this.local) return this\n    return local.length || children.length ? new DecorationSet(local, children) : empty\n  }\n\n  forChild(offset, node) {\n    if (this == empty) return this\n    if (node.isLeaf) return DecorationSet.empty\n\n    let child, local\n    for (let i = 0; i < this.children.length; i += 3) if (this.children[i] >= offset) {\n      if (this.children[i] == offset) child = this.children[i + 2]\n      break\n    }\n    let start = offset + 1, end = start + node.content.size\n    for (let i = 0; i < this.local.length; i++) {\n      let dec = this.local[i]\n      if (dec.from < end && dec.to > start && (dec.type instanceof InlineType)) {\n        let from = Math.max(start, dec.from) - start, to = Math.min(end, dec.to) - start\n        if (from < to) (local || (local = [])).push(dec.copy(from, to))\n      }\n    }\n    if (local) {\n      let localSet = new DecorationSet(local.sort(byPos))\n      return child ? new DecorationGroup([localSet, child]) : localSet\n    }\n    return child || empty\n  }\n\n  eq(other) {\n    if (this == other) return true\n    if (!(other instanceof DecorationSet) ||\n        this.local.length != other.local.length ||\n        this.children.length != other.children.length) return false\n    for (let i = 0; i < this.local.length; i++)\n      if (!this.local[i].eq(other.local[i])) return false\n    for (let i = 0; i < this.children.length; i += 3)\n      if (this.children[i] != other.children[i] ||\n          this.children[i + 1] != other.children[i + 1] ||\n          !this.children[i + 2].eq(other.children[i + 2])) return false\n    return true\n  }\n\n  locals(node) {\n    return removeOverlap(this.localsInner(node))\n  }\n\n  localsInner(node) {\n    if (this == empty) return none\n    if (node.inlineContent || !this.local.some(InlineType.is)) return this.local\n    let result = []\n    for (let i = 0; i < this.local.length; i++) {\n      if (!(this.local[i].type instanceof InlineType))\n        result.push(this.local[i])\n    }\n    return result\n  }\n}\n\n// DecorationSource:: interface\n// An object that can [provide](#view.EditorProps.decorations)\n// decorations. Implemented by [`DecorationSet`](#view.DecorationSet),\n// and passed to [node views](#view.EditorProps.nodeViews).\n\nconst empty = new DecorationSet()\n\n// :: DecorationSet\n// The empty set of decorations.\nDecorationSet.empty = empty\n\nDecorationSet.removeOverlap = removeOverlap\n\n// :- An abstraction that allows the code dealing with decorations to\n// treat multiple DecorationSet objects as if it were a single object\n// with (a subset of) the same interface.\nclass DecorationGroup {\n  constructor(members) {\n    this.members = members\n  }\n\n  forChild(offset, child) {\n    if (child.isLeaf) return DecorationSet.empty\n    let found = []\n    for (let i = 0; i < this.members.length; i++) {\n      let result = this.members[i].forChild(offset, child)\n      if (result == empty) continue\n      if (result instanceof DecorationGroup) found = found.concat(result.members)\n      else found.push(result)\n    }\n    return DecorationGroup.from(found)\n  }\n\n  eq(other) {\n    if (!(other instanceof DecorationGroup) ||\n        other.members.length != this.members.length) return false\n    for (let i = 0; i < this.members.length; i++)\n      if (!this.members[i].eq(other.members[i])) return false\n    return true\n  }\n\n  locals(node) {\n    let result, sorted = true\n    for (let i = 0; i < this.members.length; i++) {\n      let locals = this.members[i].localsInner(node)\n      if (!locals.length) continue\n      if (!result) {\n        result = locals\n      } else {\n        if (sorted) {\n          result = result.slice()\n          sorted = false\n        }\n        for (let j = 0; j < locals.length; j++) result.push(locals[j])\n      }\n    }\n    return result ? removeOverlap(sorted ? result : result.sort(byPos)) : none\n  }\n\n  // : ([DecorationSet]) → union<DecorationSet, DecorationGroup>\n  // Create a group for the given array of decoration sets, or return\n  // a single set when possible.\n  static from(members) {\n    switch (members.length) {\n      case 0: return empty\n      case 1: return members[0]\n      default: return new DecorationGroup(members)\n    }\n  }\n}\n\nfunction mapChildren(oldChildren, newLocal, mapping, node, offset, oldOffset, options) {\n  let children = oldChildren.slice()\n\n  // Mark the children that are directly touched by changes, and\n  // move those that are after the changes.\n  let shift = (oldStart, oldEnd, newStart, newEnd) => {\n    for (let i = 0; i < children.length; i += 3) {\n      let end = children[i + 1], dSize\n      if (end == -1 || oldStart > end + oldOffset) continue\n      if (oldEnd >= children[i] + oldOffset) {\n        children[i + 1] = -1\n      } else if (newStart >= offset && (dSize = (newEnd - newStart) - (oldEnd - oldStart))) {\n        children[i] += dSize\n        children[i + 1] += dSize\n      }\n    }\n  }\n  for (let i = 0; i < mapping.maps.length; i++) mapping.maps[i].forEach(shift)\n\n  // Find the child nodes that still correspond to a single node,\n  // recursively call mapInner on them and update their positions.\n  let mustRebuild = false\n  for (let i = 0; i < children.length; i += 3) if (children[i + 1] == -1) { // Touched nodes\n    let from = mapping.map(oldChildren[i] + oldOffset), fromLocal = from - offset\n    if (fromLocal < 0 || fromLocal >= node.content.size) {\n      mustRebuild = true\n      continue\n    }\n    // Must read oldChildren because children was tagged with -1\n    let to = mapping.map(oldChildren[i + 1] + oldOffset, -1), toLocal = to - offset\n    let {index, offset: childOffset} = node.content.findIndex(fromLocal)\n    let childNode = node.maybeChild(index)\n    if (childNode && childOffset == fromLocal && childOffset + childNode.nodeSize == toLocal) {\n      let mapped = children[i + 2].mapInner(mapping, childNode, from + 1, oldChildren[i] + oldOffset + 1, options)\n      if (mapped != empty) {\n        children[i] = fromLocal\n        children[i + 1] = toLocal\n        children[i + 2] = mapped\n      } else {\n        children[i + 1] = -2\n        mustRebuild = true\n      }\n    } else {\n      mustRebuild = true\n    }\n  }\n\n  // Remaining children must be collected and rebuilt into the appropriate structure\n  if (mustRebuild) {\n    let decorations = mapAndGatherRemainingDecorations(children, oldChildren, newLocal || [], mapping,\n                                                       offset, oldOffset, options)\n    let built = buildTree(decorations, node, 0, options)\n    newLocal = built.local\n    for (let i = 0; i < children.length; i += 3) if (children[i + 1] < 0) {\n      children.splice(i, 3)\n      i -= 3\n    }\n    for (let i = 0, j = 0; i < built.children.length; i += 3) {\n      let from = built.children[i]\n      while (j < children.length && children[j] < from) j += 3\n      children.splice(j, 0, built.children[i], built.children[i + 1], built.children[i + 2])\n    }\n  }\n\n  return new DecorationSet(newLocal && newLocal.sort(byPos), children)\n}\n\nfunction moveSpans(spans, offset) {\n  if (!offset || !spans.length) return spans\n  let result = []\n  for (let i = 0; i < spans.length; i++) {\n    let span = spans[i]\n    result.push(new Decoration(span.from + offset, span.to + offset, span.type))\n  }\n  return result\n}\n\nfunction mapAndGatherRemainingDecorations(children, oldChildren, decorations, mapping, offset, oldOffset, options) {\n  // Gather all decorations from the remaining marked children\n  function gather(set, oldOffset) {\n    for (let i = 0; i < set.local.length; i++) {\n      let mapped = set.local[i].map(mapping, offset, oldOffset)\n      if (mapped) decorations.push(mapped)\n      else if (options.onRemove) options.onRemove(set.local[i].spec)\n    }\n    for (let i = 0; i < set.children.length; i += 3)\n      gather(set.children[i + 2], set.children[i] + oldOffset + 1)\n  }\n  for (let i = 0; i < children.length; i += 3) if (children[i + 1] == -1)\n    gather(children[i + 2], oldChildren[i] + oldOffset + 1)\n\n  return decorations\n}\n\nfunction takeSpansForNode(spans, node, offset) {\n  if (node.isLeaf) return null\n  let end = offset + node.nodeSize, found = null\n  for (let i = 0, span; i < spans.length; i++) {\n    if ((span = spans[i]) && span.from > offset && span.to < end) {\n      ;(found || (found = [])).push(span)\n      spans[i] = null\n    }\n  }\n  return found\n}\n\nfunction withoutNulls(array) {\n  let result = []\n  for (let i = 0; i < array.length; i++)\n    if (array[i] != null) result.push(array[i])\n  return result\n}\n\n// : ([Decoration], Node, number) → DecorationSet\n// Build up a tree that corresponds to a set of decorations. `offset`\n// is a base offset that should be subtractet from the `from` and `to`\n// positions in the spans (so that we don't have to allocate new spans\n// for recursive calls).\nfunction buildTree(spans, node, offset, options) {\n  let children = [], hasNulls = false\n  node.forEach((childNode, localStart) => {\n    let found = takeSpansForNode(spans, childNode, localStart + offset)\n    if (found) {\n      hasNulls = true\n      let subtree = buildTree(found, childNode, offset + localStart + 1, options)\n      if (subtree != empty)\n        children.push(localStart, localStart + childNode.nodeSize, subtree)\n    }\n  })\n  let locals = moveSpans(hasNulls ? withoutNulls(spans) : spans, -offset).sort(byPos)\n  for (let i = 0; i < locals.length; i++) if (!locals[i].type.valid(node, locals[i])) {\n    if (options.onRemove) options.onRemove(locals[i].spec)\n    locals.splice(i--, 1)\n  }\n  return locals.length || children.length ? new DecorationSet(locals, children) : empty\n}\n\n// : (Decoration, Decoration) → number\n// Used to sort decorations so that ones with a low start position\n// come first, and within a set with the same start position, those\n// with an smaller end position come first.\nfunction byPos(a, b) {\n  return a.from - b.from || a.to - b.to\n}\n\n// : ([Decoration]) → [Decoration]\n// Scan a sorted array of decorations for partially overlapping spans,\n// and split those so that only fully overlapping spans are left (to\n// make subsequent rendering easier). Will return the input array if\n// no partially overlapping spans are found (the common case).\nfunction removeOverlap(spans) {\n  let working = spans\n  for (let i = 0; i < working.length - 1; i++) {\n    let span = working[i]\n    if (span.from != span.to) for (let j = i + 1; j < working.length; j++) {\n      let next = working[j]\n      if (next.from == span.from) {\n        if (next.to != span.to) {\n          if (working == spans) working = spans.slice()\n          // Followed by a partially overlapping larger span. Split that\n          // span.\n          working[j] = next.copy(next.from, span.to)\n          insertAhead(working, j + 1, next.copy(span.to, next.to))\n        }\n        continue\n      } else {\n        if (next.from < span.to) {\n          if (working == spans) working = spans.slice()\n          // The end of this one overlaps with a subsequent span. Split\n          // this one.\n          working[i] = span.copy(span.from, next.from)\n          insertAhead(working, j, span.copy(next.from, span.to))\n        }\n        break\n      }\n    }\n  }\n  return working\n}\n\nfunction insertAhead(array, i, deco) {\n  while (i < array.length && byPos(deco, array[i]) > 0) i++\n  array.splice(i, 0, deco)\n}\n\n// : (EditorView) → union<DecorationSet, DecorationGroup>\n// Get the decorations associated with the current props of a view.\nexport function viewDecorations(view) {\n  let found = []\n  view.someProp(\"decorations\", f => {\n    let result = f(view.state)\n    if (result && result != empty) found.push(result)\n  })\n  if (view.cursorWrapper)\n    found.push(DecorationSet.create(view.state.doc, [view.cursorWrapper.deco]))\n  return DecorationGroup.from(found)\n}\n","import {NodeSelection} from \"prosemirror-state\"\n\nimport {scrollRectIntoView, posAtCoords, coordsAtPos, endOfTextblock, storeScrollPos,\n        resetScrollPos, focusPreventScroll} from \"./domcoords\"\nimport {docViewDesc} from \"./viewdesc\"\nimport {initInput, destroyInput, dispatchEvent, ensureListeners, clearComposition} from \"./input\"\nimport {selectionToDOM, anchorInRightPlace, syncNodeSelection} from \"./selection\"\nimport {Decoration, viewDecorations} from \"./decoration\"\nimport browser from \"./browser\"\n\nexport {Decoration, DecorationSet} from \"./decoration\"\n\n// Exported for testing\nexport {serializeForClipboard as __serializeForClipboard, parseFromClipboard as __parseFromClipboard} from \"./clipboard\"\nexport {endComposition as __endComposition} from \"./input\"\n\n// ::- An editor view manages the DOM structure that represents an\n// editable document. Its state and behavior are determined by its\n// [props](#view.DirectEditorProps).\nexport class EditorView {\n  // :: (?union<dom.Node, (dom.Node), {mount: dom.Node}>, DirectEditorProps)\n  // Create a view. `place` may be a DOM node that the editor should\n  // be appended to, a function that will place it into the document,\n  // or an object whose `mount` property holds the node to use as the\n  // document container. If it is `null`, the editor will not be added\n  // to the document.\n  constructor(place, props) {\n    this._props = props\n    // :: EditorState\n    // The view's current [state](#state.EditorState).\n    this.state = props.state\n\n    this.dispatch = this.dispatch.bind(this)\n\n    this._root = null\n    this.focused = false\n    // Kludge used to work around a Chrome bug\n    this.trackWrites = null\n\n    // :: dom.Element\n    // An editable DOM node containing the document. (You probably\n    // should not directly interfere with its content.)\n    this.dom = (place && place.mount) || document.createElement(\"div\")\n    if (place) {\n      if (place.appendChild) place.appendChild(this.dom)\n      else if (place.apply) place(this.dom)\n      else if (place.mount) this.mounted = true\n    }\n\n    // :: bool\n    // Indicates whether the editor is currently [editable](#view.EditorProps.editable).\n    this.editable = getEditable(this)\n    this.markCursor = null\n    this.cursorWrapper = null\n    updateCursorWrapper(this)\n    this.nodeViews = buildNodeViews(this)\n    this.docView = docViewDesc(this.state.doc, computeDocDeco(this), viewDecorations(this), this.dom, this)\n\n    this.lastSelectedViewDesc = null\n    // :: ?{slice: Slice, move: bool}\n    // When editor content is being dragged, this object contains\n    // information about the dragged slice and whether it is being\n    // copied or moved. At any other time, it is null.\n    this.dragging = null\n\n    initInput(this)\n\n    this.pluginViews = []\n    this.updatePluginViews()\n  }\n\n  // composing:: boolean\n  // Holds `true` when a\n  // [composition](https://developer.mozilla.org/en-US/docs/Mozilla/IME_handling_guide)\n  // is active.\n\n  // :: DirectEditorProps\n  // The view's current [props](#view.EditorProps).\n  get props() {\n    if (this._props.state != this.state) {\n      let prev = this._props\n      this._props = {}\n      for (let name in prev) this._props[name] = prev[name]\n      this._props.state = this.state\n    }\n    return this._props\n  }\n\n  // :: (DirectEditorProps)\n  // Update the view's props. Will immediately cause an update to\n  // the DOM.\n  update(props) {\n    if (props.handleDOMEvents != this._props.handleDOMEvents) ensureListeners(this)\n    this._props = props\n    this.updateStateInner(props.state, true)\n  }\n\n  // :: (DirectEditorProps)\n  // Update the view by updating existing props object with the object\n  // given as argument. Equivalent to `view.update(Object.assign({},\n  // view.props, props))`.\n  setProps(props) {\n    let updated = {}\n    for (let name in this._props) updated[name] = this._props[name]\n    updated.state = this.state\n    for (let name in props) updated[name] = props[name]\n    this.update(updated)\n  }\n\n  // :: (EditorState)\n  // Update the editor's `state` prop, without touching any of the\n  // other props.\n  updateState(state) {\n    this.updateStateInner(state, this.state.plugins != state.plugins)\n  }\n\n  updateStateInner(state, reconfigured) {\n    let prev = this.state, redraw = false, updateSel = false\n    // When stored marks are added, stop composition, so that they can\n    // be displayed.\n    if (state.storedMarks && this.composing) {\n      clearComposition(this)\n      updateSel = true\n    }\n    this.state = state\n    if (reconfigured) {\n      let nodeViews = buildNodeViews(this)\n      if (changedNodeViews(nodeViews, this.nodeViews)) {\n        this.nodeViews = nodeViews\n        redraw = true\n      }\n      ensureListeners(this)\n    }\n\n    this.editable = getEditable(this)\n    updateCursorWrapper(this)\n    let innerDeco = viewDecorations(this), outerDeco = computeDocDeco(this)\n\n    let scroll = reconfigured ? \"reset\"\n        : state.scrollToSelection > prev.scrollToSelection ? \"to selection\" : \"preserve\"\n    let updateDoc = redraw || !this.docView.matchesNode(state.doc, outerDeco, innerDeco)\n    if (updateDoc || !state.selection.eq(prev.selection)) updateSel = true\n    let oldScrollPos = scroll == \"preserve\" && updateSel && this.dom.style.overflowAnchor == null && storeScrollPos(this)\n\n    if (updateSel) {\n      this.domObserver.stop()\n      // Work around an issue in Chrome, IE, and Edge where changing\n      // the DOM around an active selection puts it into a broken\n      // state where the thing the user sees differs from the\n      // selection reported by the Selection object (#710, #973,\n      // #1011, #1013, #1035).\n      let forceSelUpdate = updateDoc && (browser.ie || browser.chrome) && !this.composing &&\n          !prev.selection.empty && !state.selection.empty && selectionContextChanged(prev.selection, state.selection)\n      if (updateDoc) {\n        // If the node that the selection points into is written to,\n        // Chrome sometimes starts misreporting the selection, so this\n        // tracks that and forces a selection reset when our update\n        // did write to the node.\n        let chromeKludge = browser.chrome ? (this.trackWrites = this.root.getSelection().focusNode) : null\n        if (redraw || !this.docView.update(state.doc, outerDeco, innerDeco, this)) {\n          this.docView.updateOuterDeco([])\n          this.docView.destroy()\n          this.docView = docViewDesc(state.doc, outerDeco, innerDeco, this.dom, this)\n        }\n        if (chromeKludge && !this.trackWrites) forceSelUpdate = true\n      }\n      // Work around for an issue where an update arriving right between\n      // a DOM selection change and the \"selectionchange\" event for it\n      // can cause a spurious DOM selection update, disrupting mouse\n      // drag selection.\n      if (forceSelUpdate ||\n          !(this.mouseDown && this.domObserver.currentSelection.eq(this.root.getSelection()) && anchorInRightPlace(this))) {\n        selectionToDOM(this, forceSelUpdate)\n      } else {\n        syncNodeSelection(this, state.selection)\n        this.domObserver.setCurSelection()\n      }\n      this.domObserver.start()\n    }\n\n    this.updatePluginViews(prev)\n\n    if (scroll == \"reset\") {\n      this.dom.scrollTop = 0\n    } else if (scroll == \"to selection\") {\n      let startDOM = this.root.getSelection().focusNode\n      if (this.someProp(\"handleScrollToSelection\", f => f(this)))\n        {} // Handled\n      else if (state.selection instanceof NodeSelection)\n        scrollRectIntoView(this, this.docView.domAfterPos(state.selection.from).getBoundingClientRect(), startDOM)\n      else\n        scrollRectIntoView(this, this.coordsAtPos(state.selection.head, 1), startDOM)\n    } else if (oldScrollPos) {\n      resetScrollPos(oldScrollPos)\n    }\n  }\n\n  destroyPluginViews() {\n    let view\n    while (view = this.pluginViews.pop()) if (view.destroy) view.destroy()\n  }\n\n  updatePluginViews(prevState) {\n    if (!prevState || prevState.plugins != this.state.plugins) {\n      this.destroyPluginViews()\n      for (let i = 0; i < this.state.plugins.length; i++) {\n        let plugin = this.state.plugins[i]\n        if (plugin.spec.view) this.pluginViews.push(plugin.spec.view(this))\n      }\n    } else {\n      for (let i = 0; i < this.pluginViews.length; i++) {\n        let pluginView = this.pluginViews[i]\n        if (pluginView.update) pluginView.update(this, prevState)\n      }\n    }\n  }\n\n  // :: (string, ?(prop: *) → *) → *\n  // Goes over the values of a prop, first those provided directly,\n  // then those from plugins (in order), and calls `f` every time a\n  // non-undefined value is found. When `f` returns a truthy value,\n  // that is immediately returned. When `f` isn't provided, it is\n  // treated as the identity function (the prop value is returned\n  // directly).\n  someProp(propName, f) {\n    let prop = this._props && this._props[propName], value\n    if (prop != null && (value = f ? f(prop) : prop)) return value\n    let plugins = this.state.plugins\n    if (plugins) for (let i = 0; i < plugins.length; i++) {\n      let prop = plugins[i].props[propName]\n      if (prop != null && (value = f ? f(prop) : prop)) return value\n    }\n  }\n\n  // :: () → bool\n  // Query whether the view has focus.\n  hasFocus() {\n    return this.root.activeElement == this.dom\n  }\n\n  // :: ()\n  // Focus the editor.\n  focus() {\n    this.domObserver.stop()\n    if (this.editable) focusPreventScroll(this.dom)\n    selectionToDOM(this)\n    this.domObserver.start()\n  }\n\n  // :: union<dom.Document, dom.DocumentFragment>\n  // Get the document root in which the editor exists. This will\n  // usually be the top-level `document`, but might be a [shadow\n  // DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)\n  // root if the editor is inside one.\n  get root() {\n    let cached = this._root\n    if (cached == null) for (let search = this.dom.parentNode; search; search = search.parentNode) {\n      if (search.nodeType == 9 || (search.nodeType == 11 && search.host)) {\n        if (!search.getSelection) Object.getPrototypeOf(search).getSelection = () => document.getSelection()\n        return this._root = search\n      }\n    }\n    return cached || document\n  }\n\n  // :: ({left: number, top: number}) → ?{pos: number, inside: number}\n  // Given a pair of viewport coordinates, return the document\n  // position that corresponds to them. May return null if the given\n  // coordinates aren't inside of the editor. When an object is\n  // returned, its `pos` property is the position nearest to the\n  // coordinates, and its `inside` property holds the position of the\n  // inner node that the position falls inside of, or -1 if it is at\n  // the top level, not in any node.\n  posAtCoords(coords) {\n    return posAtCoords(this, coords)\n  }\n\n  // :: (number, number) → {left: number, right: number, top: number, bottom: number}\n  // Returns the viewport rectangle at a given document position.\n  // `left` and `right` will be the same number, as this returns a\n  // flat cursor-ish rectangle. If the position is between two things\n  // that aren't directly adjacent, `side` determines which element is\n  // used. When < 0, the element before the position is used,\n  // otherwise the element after.\n  coordsAtPos(pos, side = 1) {\n    return coordsAtPos(this, pos, side)\n  }\n\n  // :: (number, number) → {node: dom.Node, offset: number}\n  // Find the DOM position that corresponds to the given document\n  // position. When `side` is negative, find the position as close as\n  // possible to the content before the position. When positive,\n  // prefer positions close to the content after the position. When\n  // zero, prefer as shallow a position as possible.\n  //\n  // Note that you should **not** mutate the editor's internal DOM,\n  // only inspect it (and even that is usually not necessary).\n  domAtPos(pos, side = 0) {\n    return this.docView.domFromPos(pos, side)\n  }\n\n  // :: (number) → ?dom.Node\n  // Find the DOM node that represents the document node after the\n  // given position. May return `null` when the position doesn't point\n  // in front of a node or if the node is inside an opaque node view.\n  //\n  // This is intended to be able to call things like\n  // `getBoundingClientRect` on that DOM node. Do **not** mutate the\n  // editor DOM directly, or add styling this way, since that will be\n  // immediately overriden by the editor as it redraws the node.\n  nodeDOM(pos) {\n    let desc = this.docView.descAt(pos)\n    return desc ? desc.nodeDOM : null\n  }\n\n  // :: (dom.Node, number, ?number) → number\n  // Find the document position that corresponds to a given DOM\n  // position. (Whenever possible, it is preferable to inspect the\n  // document structure directly, rather than poking around in the\n  // DOM, but sometimes—for example when interpreting an event\n  // target—you don't have a choice.)\n  //\n  // The `bias` parameter can be used to influence which side of a DOM\n  // node to use when the position is inside a leaf node.\n  posAtDOM(node, offset, bias = -1) {\n    let pos = this.docView.posFromDOM(node, offset, bias)\n    if (pos == null) throw new RangeError(\"DOM position not inside the editor\")\n    return pos\n  }\n\n  // :: (union<\"up\", \"down\", \"left\", \"right\", \"forward\", \"backward\">, ?EditorState) → bool\n  // Find out whether the selection is at the end of a textblock when\n  // moving in a given direction. When, for example, given `\"left\"`,\n  // it will return true if moving left from the current cursor\n  // position would leave that position's parent textblock. Will apply\n  // to the view's current state by default, but it is possible to\n  // pass a different state.\n  endOfTextblock(dir, state) {\n    return endOfTextblock(this, state || this.state, dir)\n  }\n\n  // :: ()\n  // Removes the editor from the DOM and destroys all [node\n  // views](#view.NodeView).\n  destroy() {\n    if (!this.docView) return\n    destroyInput(this)\n    this.destroyPluginViews()\n    if (this.mounted) {\n      this.docView.update(this.state.doc, [], viewDecorations(this), this)\n      this.dom.textContent = \"\"\n    } else if (this.dom.parentNode) {\n      this.dom.parentNode.removeChild(this.dom)\n    }\n    this.docView.destroy()\n    this.docView = null\n  }\n\n  // Used for testing.\n  dispatchEvent(event) {\n    return dispatchEvent(this, event)\n  }\n\n  // :: (Transaction)\n  // Dispatch a transaction. Will call\n  // [`dispatchTransaction`](#view.DirectEditorProps.dispatchTransaction)\n  // when given, and otherwise defaults to applying the transaction to\n  // the current state and calling\n  // [`updateState`](#view.EditorView.updateState) with the result.\n  // This method is bound to the view instance, so that it can be\n  // easily passed around.\n  dispatch(tr) {\n    let dispatchTransaction = this._props.dispatchTransaction\n    if (dispatchTransaction) dispatchTransaction.call(this, tr)\n    else this.updateState(this.state.apply(tr))\n  }\n}\n\nfunction computeDocDeco(view) {\n  let attrs = Object.create(null)\n  attrs.class = \"ProseMirror\"\n  attrs.contenteditable = String(view.editable)\n\n  view.someProp(\"attributes\", value => {\n    if (typeof value == \"function\") value = value(view.state)\n    if (value) for (let attr in value) {\n      if (attr == \"class\")\n        attrs.class += \" \" + value[attr]\n      else if (!attrs[attr] && attr != \"contenteditable\" && attr != \"nodeName\")\n        attrs[attr] = String(value[attr])\n    }\n  })\n\n  return [Decoration.node(0, view.state.doc.content.size, attrs)]\n}\n\nfunction updateCursorWrapper(view) {\n  if (view.markCursor) {\n    let dom = document.createElement(\"img\")\n    dom.setAttribute(\"mark-placeholder\", \"true\")\n    view.cursorWrapper = {dom, deco: Decoration.widget(view.state.selection.head, dom, {raw: true, marks: view.markCursor})}\n  } else {\n    view.cursorWrapper = null\n  }\n}\n\nfunction getEditable(view) {\n  return !view.someProp(\"editable\", value => value(view.state) === false)\n}\n\nfunction selectionContextChanged(sel1, sel2) {\n  let depth = Math.min(sel1.$anchor.sharedDepth(sel1.head), sel2.$anchor.sharedDepth(sel2.head))\n  return sel1.$anchor.start(depth) != sel2.$anchor.start(depth)\n}\n\nfunction buildNodeViews(view) {\n  let result = {}\n  view.someProp(\"nodeViews\", obj => {\n    for (let prop in obj) if (!Object.prototype.hasOwnProperty.call(result, prop))\n      result[prop] = obj[prop]\n  })\n  return result\n}\n\nfunction changedNodeViews(a, b) {\n  let nA = 0, nB = 0\n  for (let prop in a) {\n    if (a[prop] != b[prop]) return true\n    nA++\n  }\n  for (let _ in b) nB++\n  return nA != nB\n}\n\n// EditorProps:: interface\n//\n// Props are configuration values that can be passed to an editor view\n// or included in a plugin. This interface lists the supported props.\n//\n// The various event-handling functions may all return `true` to\n// indicate that they handled the given event. The view will then take\n// care to call `preventDefault` on the event, except with\n// `handleDOMEvents`, where the handler itself is responsible for that.\n//\n// How a prop is resolved depends on the prop. Handler functions are\n// called one at a time, starting with the base props and then\n// searching through the plugins (in order of appearance) until one of\n// them returns true. For some props, the first plugin that yields a\n// value gets precedence.\n//\n//   handleDOMEvents:: ?Object<(view: EditorView, event: dom.Event) → bool>\n//   Can be an object mapping DOM event type names to functions that\n//   handle them. Such functions will be called before any handling\n//   ProseMirror does of events fired on the editable DOM element.\n//   Contrary to the other event handling props, when returning true\n//   from such a function, you are responsible for calling\n//   `preventDefault` yourself (or not, if you want to allow the\n//   default behavior).\n//\n//   handleKeyDown:: ?(view: EditorView, event: dom.KeyboardEvent) → bool\n//   Called when the editor receives a `keydown` event.\n//\n//   handleKeyPress:: ?(view: EditorView, event: dom.KeyboardEvent) → bool\n//   Handler for `keypress` events.\n//\n//   handleTextInput:: ?(view: EditorView, from: number, to: number, text: string) → bool\n//   Whenever the user directly input text, this handler is called\n//   before the input is applied. If it returns `true`, the default\n//   behavior of actually inserting the text is suppressed.\n//\n//   handleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a click, from the inside out. The\n//   `direct` flag will be true for the inner node.\n//\n//   handleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is clicked, after `handleClickOn` handlers\n//   have been called.\n//\n//   handleDoubleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a double click.\n//\n//   handleDoubleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is double-clicked, after `handleDoubleClickOn`.\n//\n//   handleTripleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a triple click.\n//\n//   handleTripleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is triple-clicked, after `handleTripleClickOn`.\n//\n//   handlePaste:: ?(view: EditorView, event: dom.ClipboardEvent, slice: Slice) → bool\n//   Can be used to override the behavior of pasting. `slice` is the\n//   pasted content parsed by the editor, but you can directly access\n//   the event to get at the raw content.\n//\n//   handleDrop:: ?(view: EditorView, event: dom.Event, slice: Slice, moved: bool) → bool\n//   Called when something is dropped on the editor. `moved` will be\n//   true if this drop moves from the current selection (which should\n//   thus be deleted).\n//\n//   handleScrollToSelection:: ?(view: EditorView) → bool\n//   Called when the view, after updating its state, tries to scroll\n//   the selection into view. A handler function may return false to\n//   indicate that it did not handle the scrolling and further\n//   handlers or the default behavior should be tried.\n//\n//   createSelectionBetween:: ?(view: EditorView, anchor: ResolvedPos, head: ResolvedPos) → ?Selection\n//   Can be used to override the way a selection is created when\n//   reading a DOM selection between the given anchor and head.\n//\n//   domParser:: ?DOMParser\n//   The [parser](#model.DOMParser) to use when reading editor changes\n//   from the DOM. Defaults to calling\n//   [`DOMParser.fromSchema`](#model.DOMParser^fromSchema) on the\n//   editor's schema.\n//\n//   transformPastedHTML:: ?(html: string) → string\n//   Can be used to transform pasted HTML text, _before_ it is parsed,\n//   for example to clean it up.\n//\n//   clipboardParser:: ?DOMParser\n//   The [parser](#model.DOMParser) to use when reading content from\n//   the clipboard. When not given, the value of the\n//   [`domParser`](#view.EditorProps.domParser) prop is used.\n//\n//   transformPastedText:: ?(text: string, plain: bool) → string\n//   Transform pasted plain text. The `plain` flag will be true when\n//   the text is pasted as plain text.\n//\n//   clipboardTextParser:: ?(text: string, $context: ResolvedPos, plain: bool) → Slice\n//   A function to parse text from the clipboard into a document\n//   slice. Called after\n//   [`transformPastedText`](#view.EditorProps.transformPastedText).\n//   The default behavior is to split the text into lines, wrap them\n//   in `<p>` tags, and call\n//   [`clipboardParser`](#view.EditorProps.clipboardParser) on it.\n//   The `plain` flag will be true when the text is pasted as plain text.\n//\n//   transformPasted:: ?(Slice) → Slice\n//   Can be used to transform pasted content before it is applied to\n//   the document.\n//\n//   nodeViews:: ?Object<(node: Node, view: EditorView, getPos: () → number, decorations: [Decoration], innerDecorations: DecorationSource) → NodeView>\n//   Allows you to pass custom rendering and behavior logic for nodes\n//   and marks. Should map node and mark names to constructor\n//   functions that produce a [`NodeView`](#view.NodeView) object\n//   implementing the node's display behavior. For nodes, the third\n//   argument `getPos` is a function that can be called to get the\n//   node's current position, which can be useful when creating\n//   transactions to update it. For marks, the third argument is a\n//   boolean that indicates whether the mark's content is inline.\n//\n//   `decorations` is an array of node or inline decorations that are\n//   active around the node. They are automatically drawn in the\n//   normal way, and you will usually just want to ignore this, but\n//   they can also be used as a way to provide context information to\n//   the node view without adding it to the document itself.\n//\n//   `innerDecorations` holds the decorations for the node's content.\n//   You can safely ignore this if your view has no content or a\n//   `contentDOM` property, since the editor will draw the decorations\n//   on the content. But if you, for example, want to create a nested\n//   editor with the content, it may make sense to provide it with the\n//   inner decorations.\n//\n//   clipboardSerializer:: ?DOMSerializer\n//   The DOM serializer to use when putting content onto the\n//   clipboard. If not given, the result of\n//   [`DOMSerializer.fromSchema`](#model.DOMSerializer^fromSchema)\n//   will be used.\n//\n//   clipboardTextSerializer:: ?(Slice) → string\n//   A function that will be called to get the text for the current\n//   selection when copying text to the clipboard. By default, the\n//   editor will use [`textBetween`](#model.Node.textBetween) on the\n//   selected range.\n//\n//   decorations:: ?(state: EditorState) → ?DecorationSource\n//   A set of [document decorations](#view.Decoration) to show in the\n//   view.\n//\n//   editable:: ?(state: EditorState) → bool\n//   When this returns false, the content of the view is not directly\n//   editable.\n//\n//   attributes:: ?union<Object<string>, (EditorState) → ?Object<string>>\n//   Control the DOM attributes of the editable element. May be either\n//   an object or a function going from an editor state to an object.\n//   By default, the element will get a class `\"ProseMirror\"`, and\n//   will have its `contentEditable` attribute determined by the\n//   [`editable` prop](#view.EditorProps.editable). Additional classes\n//   provided here will be added to the class. For other attributes,\n//   the value provided first (as in\n//   [`someProp`](#view.EditorView.someProp)) will be used.\n//\n//   scrollThreshold:: ?union<number, {top: number, right: number, bottom: number, left: number}>\n//   Determines the distance (in pixels) between the cursor and the\n//   end of the visible viewport at which point, when scrolling the\n//   cursor into view, scrolling takes place. Defaults to 0.\n//\n//   scrollMargin:: ?union<number, {top: number, right: number, bottom: number, left: number}>\n//   Determines the extra space (in pixels) that is left above or\n//   below the cursor when it is scrolled into view. Defaults to 5.\n\n// DirectEditorProps:: interface extends EditorProps\n//\n// The props object given directly to the editor view supports two\n// fields that can't be used in plugins:\n//\n//   state:: EditorState\n//   The current state of the editor.\n//\n//   dispatchTransaction:: ?(tr: Transaction)\n//   The callback over which to send transactions (state updates)\n//   produced by the view. If you specify this, you probably want to\n//   make sure this ends up calling the view's\n//   [`updateState`](#view.EditorView.updateState) method with a new\n//   state that has the transaction\n//   [applied](#state.EditorState.apply). The callback will be bound to have\n//   the view instance as its `this` binding.\n","var GOOD_LEAF_SIZE = 200;\n\n// :: class<T> A rope sequence is a persistent sequence data structure\n// that supports appending, prepending, and slicing without doing a\n// full copy. It is represented as a mostly-balanced tree.\nvar RopeSequence = function RopeSequence () {};\n\nRopeSequence.prototype.append = function append (other) {\n  if (!other.length) { return this }\n  other = RopeSequence.from(other);\n\n  return (!this.length && other) ||\n    (other.length < GOOD_LEAF_SIZE && this.leafAppend(other)) ||\n    (this.length < GOOD_LEAF_SIZE && other.leafPrepend(this)) ||\n    this.appendInner(other)\n};\n\n// :: (union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Prepend an array or other rope to this one, returning a new rope.\nRopeSequence.prototype.prepend = function prepend (other) {\n  if (!other.length) { return this }\n  return RopeSequence.from(other).append(this)\n};\n\nRopeSequence.prototype.appendInner = function appendInner (other) {\n  return new Append(this, other)\n};\n\n// :: (?number, ?number) → RopeSequence<T>\n// Create a rope repesenting a sub-sequence of this rope.\nRopeSequence.prototype.slice = function slice (from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from >= to) { return RopeSequence.empty }\n  return this.sliceInner(Math.max(0, from), Math.min(this.length, to))\n};\n\n// :: (number) → T\n// Retrieve the element at the given position from this rope.\nRopeSequence.prototype.get = function get (i) {\n  if (i < 0 || i >= this.length) { return undefined }\n  return this.getInner(i)\n};\n\n// :: ((element: T, index: number) → ?bool, ?number, ?number)\n// Call the given function for each element between the given\n// indices. This tends to be more efficient than looping over the\n// indices and calling `get`, because it doesn't have to descend the\n// tree for every element.\nRopeSequence.prototype.forEach = function forEach (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from <= to)\n    { this.forEachInner(f, from, to, 0); }\n  else\n    { this.forEachInvertedInner(f, from, to, 0); }\n};\n\n// :: ((element: T, index: number) → U, ?number, ?number) → [U]\n// Map the given functions over the elements of the rope, producing\n// a flat array.\nRopeSequence.prototype.map = function map (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  var result = [];\n  this.forEach(function (elt, i) { return result.push(f(elt, i)); }, from, to);\n  return result\n};\n\n// :: (?union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Create a rope representing the given array, or return the rope\n// itself if a rope was given.\nRopeSequence.from = function from (values) {\n  if (values instanceof RopeSequence) { return values }\n  return values && values.length ? new Leaf(values) : RopeSequence.empty\n};\n\nvar Leaf = /*@__PURE__*/(function (RopeSequence) {\n  function Leaf(values) {\n    RopeSequence.call(this);\n    this.values = values;\n  }\n\n  if ( RopeSequence ) Leaf.__proto__ = RopeSequence;\n  Leaf.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Leaf.prototype.constructor = Leaf;\n\n  var prototypeAccessors = { length: { configurable: true },depth: { configurable: true } };\n\n  Leaf.prototype.flatten = function flatten () {\n    return this.values\n  };\n\n  Leaf.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    return new Leaf(this.values.slice(from, to))\n  };\n\n  Leaf.prototype.getInner = function getInner (i) {\n    return this.values[i]\n  };\n\n  Leaf.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    for (var i = from; i < to; i++)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    for (var i = from - 1; i >= to; i--)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.leafAppend = function leafAppend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(this.values.concat(other.flatten())) }\n  };\n\n  Leaf.prototype.leafPrepend = function leafPrepend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(other.flatten().concat(this.values)) }\n  };\n\n  prototypeAccessors.length.get = function () { return this.values.length };\n\n  prototypeAccessors.depth.get = function () { return 0 };\n\n  Object.defineProperties( Leaf.prototype, prototypeAccessors );\n\n  return Leaf;\n}(RopeSequence));\n\n// :: RopeSequence\n// The empty rope sequence.\nRopeSequence.empty = new Leaf([]);\n\nvar Append = /*@__PURE__*/(function (RopeSequence) {\n  function Append(left, right) {\n    RopeSequence.call(this);\n    this.left = left;\n    this.right = right;\n    this.length = left.length + right.length;\n    this.depth = Math.max(left.depth, right.depth) + 1;\n  }\n\n  if ( RopeSequence ) Append.__proto__ = RopeSequence;\n  Append.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Append.prototype.constructor = Append;\n\n  Append.prototype.flatten = function flatten () {\n    return this.left.flatten().concat(this.right.flatten())\n  };\n\n  Append.prototype.getInner = function getInner (i) {\n    return i < this.left.length ? this.left.get(i) : this.right.get(i - this.left.length)\n  };\n\n  Append.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from < leftLen &&\n        this.left.forEachInner(f, from, Math.min(to, leftLen), start) === false)\n      { return false }\n    if (to > leftLen &&\n        this.right.forEachInner(f, Math.max(from - leftLen, 0), Math.min(this.length, to) - leftLen, start + leftLen) === false)\n      { return false }\n  };\n\n  Append.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from > leftLen &&\n        this.right.forEachInvertedInner(f, from - leftLen, Math.max(to, leftLen) - leftLen, start + leftLen) === false)\n      { return false }\n    if (to < leftLen &&\n        this.left.forEachInvertedInner(f, Math.min(from, leftLen), to, start) === false)\n      { return false }\n  };\n\n  Append.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    var leftLen = this.left.length;\n    if (to <= leftLen) { return this.left.slice(from, to) }\n    if (from >= leftLen) { return this.right.slice(from - leftLen, to - leftLen) }\n    return this.left.slice(from, leftLen).append(this.right.slice(0, to - leftLen))\n  };\n\n  Append.prototype.leafAppend = function leafAppend (other) {\n    var inner = this.right.leafAppend(other);\n    if (inner) { return new Append(this.left, inner) }\n  };\n\n  Append.prototype.leafPrepend = function leafPrepend (other) {\n    var inner = this.left.leafPrepend(other);\n    if (inner) { return new Append(inner, this.right) }\n  };\n\n  Append.prototype.appendInner = function appendInner (other) {\n    if (this.left.depth >= Math.max(this.right.depth, other.depth) + 1)\n      { return new Append(this.left, new Append(this.right, other)) }\n    return new Append(this, other)\n  };\n\n  return Append;\n}(RopeSequence));\n\nvar ropeSequence = RopeSequence;\n\nexport default ropeSequence;\n","export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\",\n  229: \"q\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\",\n  229: \"Q\"\n}\n\nvar chrome = typeof navigator != \"undefined\" && /Chrome\\/(\\d+)/.exec(navigator.userAgent)\nvar safari = typeof navigator != \"undefined\" && /Apple Computer/.test(navigator.vendor)\nvar gecko = typeof navigator != \"undefined\" && /Gecko\\/\\d+/.test(navigator.userAgent)\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\nvar brokenModifierNames = chrome && (mac || +chrome[1] < 57) || gecko && mac\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // Don't trust event.key in Chrome when there are modifiers until\n  // they fix https://bugs.chromium.org/p/chromium/issues/detail?id=633838\n  var ignoreKey = brokenModifierNames && (event.ctrlKey || event.altKey || event.metaKey) ||\n    (safari || ie) && event.shiftKey && event.key && event.key.length == 1\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const {EditorState} = require(\"prosemirror-state\")\nconst {EditorView} = require(\"prosemirror-view\")\nconst {Schema, DOMParser} = require(\"prosemirror-model\")\nconst {schema} = require(\"prosemirror-schema-basic\")\nconst {addListNodes} = require(\"prosemirror-schema-list\")\nconst {exampleSetup} = require(\"prosemirror-example-setup\")\n\n// Mix the nodes from prosemirror-schema-list into the basic schema to\n// create a schema with list support.\nconst mySchema = new Schema({\n  nodes: addListNodes(schema.spec.nodes, \"paragraph block*\", \"block\"),\n  marks: schema.spec.marks\n})\n\nwindow.view = new EditorView(document.querySelector(\"#editor\"), {\n  state: EditorState.create({\n    doc: DOMParser.fromSchema(mySchema).parse(document.querySelector(\"#content\")),\n    plugins: exampleSetup({schema: mySchema})\n  })\n})\n"],"sourceRoot":""}